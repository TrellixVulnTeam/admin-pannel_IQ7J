{"ast":null,"code":"var _jsxFileName = \"D:\\\\previous\\\\src\\\\components\\\\form\\\\DistrictForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { FormGroup } from '../formGroup';\nimport { Container } from '../container';\nimport { Text } from '../text';\nimport { SingleSelect } from '../select';\nimport Requests from '../../utils/Requests/Index';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const DistrictForm = props => {\n  _s();\n\n  const {\n    register,\n    handleSubmit,\n    clearErrors,\n    setError,\n    errors\n  } = useForm();\n  const districtData = props.districtData ? props.districtData : {};\n  const [division, setDivision] = useState([]);\n  const [selectedDivision, setSelectedDivision] = useState(null);\n  const [header] = useState({\n    headers: {\n      Authorization: \"Bearer \" + localStorage.getItem('token')\n    }\n  }); // Fetch division data\n\n  const fetchData = useCallback(async page => {\n    try {\n      const items = [];\n      const response = await Requests.Services.Shipping.Division.Index(page, 10, header);\n\n      if (response) {\n        if (response.data && response.data.length > 0) {\n          for (let i = 0; i < response.data.length; i++) {\n            const element = response.data[i];\n            items.push({\n              label: element.name,\n              value: element._id\n            });\n          }\n        }\n      }\n\n      setDivision(items);\n    } catch (error) {\n      if (error) console.log(error);\n    }\n  }, [header]);\n  useEffect(() => {\n    if (districtData && districtData.division) {\n      setSelectedDivision(districtData.division._id);\n    }\n  }, [districtData]);\n  useEffect(() => {\n    fetchData(1);\n  }, [header, fetchData]); // District form submit\n\n  const onSubmit = async data => {\n    let is_error = false;\n\n    if (!selectedDivision) {\n      setError(\"selectedDivision\", {\n        type: \"manual\",\n        message: \"Division is required.\"\n      });\n      is_error = true;\n    }\n\n    if (is_error) return;\n    const formData = { ...data,\n      division: selectedDivision\n    }; // console.log(formData);\n\n    props.submit(formData);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    children: [/*#__PURE__*/_jsxDEV(Container.Row, {\n      children: [/*#__PURE__*/_jsxDEV(Container.Column, {\n        children: /*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [errors.name && errors.name.message ? /*#__PURE__*/_jsxDEV(Text, {\n            className: \"text-danger fs-13 mb-0\",\n            children: errors.name && errors.name.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(Text, {\n            className: \"fs-13 mb-0\",\n            children: [\"District name (EN) \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-danger\",\n              children: \"*\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 65\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"name\",\n            className: errors.name ? \"form-control shadow-none error\" : \"form-control shadow-none\",\n            placeholder: \"Enter district english name\",\n            defaultValue: districtData ? districtData.name : null,\n            ref: register({\n              required: \"District name (EN) is required\"\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Container.Column, {\n        children: /*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [errors.bn_name && errors.bn_name.message ? /*#__PURE__*/_jsxDEV(Text, {\n            className: \"text-danger fs-13 mb-0\",\n            children: errors.bn_name && errors.bn_name.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(Text, {\n            className: \"fs-13 mb-0\",\n            children: [\"District name (BN) \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-danger\",\n              children: \"*\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 65\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"bn_name\",\n            className: errors.bn_name ? \"form-control shadow-none error\" : \"form-control shadow-none\",\n            placeholder: \"Enter district bengali name\",\n            defaultValue: districtData ? districtData.bn_name : null,\n            ref: register({\n              required: \"District name (BN) is required\"\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Container.Column, {\n        children: /*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [errors.selectedDivision && errors.selectedDivision.message ? /*#__PURE__*/_jsxDEV(Text, {\n            className: \"text-danger fs-13 mb-0\",\n            children: errors.selectedDivision && errors.selectedDivision.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(Text, {\n            className: \"fs-13 mb-0\",\n            children: [\"Division \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-danger\",\n              children: \"*\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 55\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(SingleSelect, {\n            placeholder: \" division\",\n            deafult: districtData && districtData.division ? {\n              value: districtData.division._id ? districtData.division._id : null,\n              label: districtData.division.name ? districtData.division.name : null\n            } : null,\n            options: division,\n            value: event => {\n              setSelectedDivision(event.value);\n              clearErrors(\"selectedDivision\");\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-right\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn shadow-none text-uppercase\",\n        disabled: props.loading,\n        children: /*#__PURE__*/_jsxDEV(Text, {\n          className: \"fs-14 mb-0\",\n          children: props.loading ? props.update ? \"Updating ...\" : \"Submitting ...\" : props.update ? \"Update\" : \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 10\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n\n_s(DistrictForm, \"N6K7xwSSz0sqL9iPAaa2NZTVJ4U=\", false, function () {\n  return [useForm];\n});\n\n_c = DistrictForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"DistrictForm\");","map":{"version":3,"sources":["D:/previous/src/components/form/DistrictForm.js"],"names":["React","useCallback","useEffect","useState","useForm","FormGroup","Container","Text","SingleSelect","Requests","DistrictForm","props","register","handleSubmit","clearErrors","setError","errors","districtData","division","setDivision","selectedDivision","setSelectedDivision","header","headers","Authorization","localStorage","getItem","fetchData","page","items","response","Services","Shipping","Division","Index","data","length","i","element","push","label","name","value","_id","error","console","log","onSubmit","is_error","type","message","formData","submit","required","bn_name","event","loading","update"],"mappings":"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","sourcesContent":["import React, { useCallback, useEffect, useState } from 'react'\nimport { useForm } from 'react-hook-form'\nimport { FormGroup } from '../formGroup'\nimport { Container } from '../container'\nimport { Text } from '../text'\nimport { SingleSelect } from '../select'\nimport Requests from '../../utils/Requests/Index'\n\nexport const DistrictForm = (props) => {\n  const { register, handleSubmit, clearErrors, setError, errors } = useForm()\n  const districtData = props.districtData ? props.districtData : {}\n  const [division, setDivision] = useState([])\n  const [selectedDivision, setSelectedDivision] = useState(null)\n  const [header] = useState({\n    headers: { Authorization: \"Bearer \" + localStorage.getItem('token') }\n  })\n\n  // Fetch division data\n  const fetchData = useCallback(async (page) => {\n    try {\n      const items = []\n      const response = await Requests.Services.Shipping.Division.Index(page, 10, header)\n      if (response) {\n        if (response.data && response.data.length > 0) {\n          for (let i = 0; i < response.data.length; i++) {\n            const element = response.data[i]\n            items.push({\n              label: element.name,\n              value: element._id,\n            })\n          }\n        }\n      }\n      setDivision(items)\n    } catch (error) {\n      if (error) console.log(error);\n    }\n  }, [header])\n\n  useEffect(() => {\n    if (districtData && districtData.division) {\n      setSelectedDivision(districtData.division._id)\n    }\n  }, [districtData])\n\n  useEffect(() => {\n    fetchData(1)\n  }, [header, fetchData])\n\n  // District form submit\n  const onSubmit = async data => {\n    let is_error = false\n\n    if (!selectedDivision) {\n      setError(\"selectedDivision\", {\n        type: \"manual\",\n        message: \"Division is required.\"\n      })\n      is_error = true\n    }\n\n    if (is_error) return\n\n\n    const formData = {\n      ...data,\n      division: selectedDivision\n    }\n    // console.log(formData);\n    props.submit(formData)\n  }\n\n  return (\n    <form onSubmit={handleSubmit(onSubmit)}>\n      <Container.Row>\n\n        {/* Name */}\n        <Container.Column>\n          <FormGroup>\n            {errors.name && errors.name.message ?\n              <Text className=\"text-danger fs-13 mb-0\">{errors.name && errors.name.message}</Text>\n              : <Text className=\"fs-13 mb-0\">District name (EN) <span className=\"text-danger\">*</span></Text>}\n            <input\n              type=\"text\"\n              name=\"name\"\n              className={errors.name ? \"form-control shadow-none error\" : \"form-control shadow-none\"}\n              placeholder=\"Enter district english name\"\n              defaultValue={districtData ? districtData.name : null}\n              ref={register({ required: \"District name (EN) is required\" })}\n            />\n          </FormGroup>\n        </Container.Column>\n\n        {/* Bengali name */}\n        <Container.Column>\n          <FormGroup>\n            {errors.bn_name && errors.bn_name.message ?\n              <Text className=\"text-danger fs-13 mb-0\">{errors.bn_name && errors.bn_name.message}</Text>\n              : <Text className=\"fs-13 mb-0\">District name (BN) <span className=\"text-danger\">*</span></Text>}\n            <input\n              type=\"text\"\n              name='bn_name'\n              className={errors.bn_name ? \"form-control shadow-none error\" : \"form-control shadow-none\"}\n              placeholder=\"Enter district bengali name\"\n              defaultValue={districtData ? districtData.bn_name : null}\n              ref={register({ required: \"District name (BN) is required\" })}\n            />\n          </FormGroup>\n        </Container.Column>\n\n        {/* Division */}\n        <Container.Column >\n          <FormGroup>\n            {errors.selectedDivision && errors.selectedDivision.message ?\n              <Text className=\"text-danger fs-13 mb-0\">{errors.selectedDivision && errors.selectedDivision.message}</Text>\n              : <Text className=\"fs-13 mb-0\">Division <span className=\"text-danger\">*</span></Text>}\n            <SingleSelect\n              placeholder=\" division\"\n              deafult={districtData && districtData.division ?\n                {\n                  value: districtData.division._id ? districtData.division._id : null,\n                  label: districtData.division.name ? districtData.division.name : null\n                } : null}\n              options={division}\n              value={event => {\n                setSelectedDivision(event.value)\n                clearErrors(\"selectedDivision\")\n              }}\n            />\n          </FormGroup>\n        </Container.Column>\n\n      </Container.Row>\n\n      {/* Submit button */}\n      <div className=\"text-right\">\n        <button\n          type=\"submit\"\n          className=\"btn shadow-none text-uppercase\"\n          disabled={props.loading}\n        ><Text className=\"fs-14 mb-0\">\n            {props.loading\n              ? props.update\n                ? \"Updating ...\"\n                : \"Submitting ...\"\n              : props.update\n                ? \"Update\"\n                : \"Submit\"}\n          </Text></button>\n      </div>\n    </form>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}