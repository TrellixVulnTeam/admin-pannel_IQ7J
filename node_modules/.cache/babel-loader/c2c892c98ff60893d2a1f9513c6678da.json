{"ast":null,"code":"var _jsxFileName = \"D:\\\\previous\\\\src\\\\components\\\\exportCSV\\\\Index.js\";\nimport React from 'react';\nimport * as XLSX from 'xlsx';\nimport * as FileSaver from 'file-saver';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Index = _ref => {\n  let {\n    csvData,\n    fileName\n  } = _ref;\n  const fileType = 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8';\n  const fileExtension = '.xlsx';\n\n  const exportToCSV = (csvData, fileName) => {\n    const ws = XLSX.utils.json_to_sheet(csvData);\n    const wb = {\n      Sheets: {\n        'data': ws\n      },\n      SheetNames: ['data']\n    };\n    const excelBuffer = XLSX.write(wb, {\n      bookType: 'xlsx',\n      type: 'array'\n    });\n    const data = new Blob([excelBuffer], {\n      type: fileType\n    });\n    FileSaver.saveAs(data, fileName + fileExtension);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      style: styles.btn,\n      className: \"btn shadow-none\",\n      onClick: e => exportToCSV(csvData, fileName),\n      children: \"Export to XLSX\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Index;\nexport default Index;\nconst styles = {\n  btn: {\n    minWidth: 150,\n    height: 37,\n    fontSize: 14,\n    fontWeight: 600,\n    color: '#7367f0',\n    padding: '8px 0px',\n    background: '#7267f02f',\n    borderRadius: 25\n  }\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"Index\");","map":{"version":3,"sources":["D:/previous/src/components/exportCSV/Index.js"],"names":["React","XLSX","FileSaver","Index","csvData","fileName","fileType","fileExtension","exportToCSV","ws","utils","json_to_sheet","wb","Sheets","SheetNames","excelBuffer","write","bookType","type","data","Blob","saveAs","styles","btn","e","minWidth","height","fontSize","fontWeight","color","padding","background","borderRadius"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,KAAKC,IAAZ,MAAsB,MAAtB;AACA,OAAO,KAAKC,SAAZ,MAA2B,YAA3B;;;AAEA,MAAMC,KAAK,GAAG,QAA2B;AAAA,MAA1B;AAAEC,IAAAA,OAAF;AAAWC,IAAAA;AAAX,GAA0B;AACrC,QAAMC,QAAQ,GAAG,iFAAjB;AACA,QAAMC,aAAa,GAAG,OAAtB;;AAEA,QAAMC,WAAW,GAAG,CAACJ,OAAD,EAAUC,QAAV,KAAuB;AACvC,UAAMI,EAAE,GAAGR,IAAI,CAACS,KAAL,CAAWC,aAAX,CAAyBP,OAAzB,CAAX;AACA,UAAMQ,EAAE,GAAG;AAAEC,MAAAA,MAAM,EAAE;AAAE,gBAAQJ;AAAV,OAAV;AAA0BK,MAAAA,UAAU,EAAE,CAAC,MAAD;AAAtC,KAAX;AACA,UAAMC,WAAW,GAAGd,IAAI,CAACe,KAAL,CAAWJ,EAAX,EAAe;AAAEK,MAAAA,QAAQ,EAAE,MAAZ;AAAoBC,MAAAA,IAAI,EAAE;AAA1B,KAAf,CAApB;AACA,UAAMC,IAAI,GAAG,IAAIC,IAAJ,CAAS,CAACL,WAAD,CAAT,EAAwB;AAAEG,MAAAA,IAAI,EAAEZ;AAAR,KAAxB,CAAb;AACAJ,IAAAA,SAAS,CAACmB,MAAV,CAAiBF,IAAjB,EAAuBd,QAAQ,GAAGE,aAAlC;AACH,GAND;;AAOA,sBACI;AAAA,2BACI;AACI,MAAA,IAAI,EAAC,QADT;AAEI,MAAA,KAAK,EAAEe,MAAM,CAACC,GAFlB;AAGI,MAAA,SAAS,EAAC,iBAHd;AAII,MAAA,OAAO,EAAGC,CAAD,IAAOhB,WAAW,CAACJ,OAAD,EAAUC,QAAV,CAJ/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAUH,CArBD;;KAAMF,K;AAuBN,eAAeA,KAAf;AAEA,MAAMmB,MAAM,GAAG;AACXC,EAAAA,GAAG,EAAE;AACDE,IAAAA,QAAQ,EAAE,GADT;AAEDC,IAAAA,MAAM,EAAE,EAFP;AAGDC,IAAAA,QAAQ,EAAE,EAHT;AAIDC,IAAAA,UAAU,EAAE,GAJX;AAKDC,IAAAA,KAAK,EAAE,SALN;AAMDC,IAAAA,OAAO,EAAE,SANR;AAODC,IAAAA,UAAU,EAAE,WAPX;AAQDC,IAAAA,YAAY,EAAE;AARb;AADM,CAAf","sourcesContent":["import React from 'react'\nimport * as XLSX from 'xlsx'\nimport * as FileSaver from 'file-saver'\n\nconst Index = ({ csvData, fileName }) => {\n    const fileType = 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8'\n    const fileExtension = '.xlsx';\n\n    const exportToCSV = (csvData, fileName) => {\n        const ws = XLSX.utils.json_to_sheet(csvData)\n        const wb = { Sheets: { 'data': ws }, SheetNames: ['data'] }\n        const excelBuffer = XLSX.write(wb, { bookType: 'xlsx', type: 'array' })\n        const data = new Blob([excelBuffer], { type: fileType })\n        FileSaver.saveAs(data, fileName + fileExtension)\n    }\n    return (\n        <div>\n            <button\n                type=\"button\"\n                style={styles.btn}\n                className=\"btn shadow-none\"\n                onClick={(e) => exportToCSV(csvData, fileName)}\n            >Export to XLSX</button>\n        </div>\n    );\n};\n\nexport default Index;\n\nconst styles = {\n    btn: {\n        minWidth: 150,\n        height: 37,\n        fontSize: 14,\n        fontWeight: 600,\n        color: '#7367f0',\n        padding: '8px 0px',\n        background: '#7267f02f',\n        borderRadius: 25\n    }\n}"]},"metadata":{},"sourceType":"module"}