{"ast":null,"code":"import Axios from 'axios';\nimport { api } from '../api';\nimport { toast, Slide } from 'react-toastify';\nimport { errorHandeller } from './Error';\nimport 'react-toastify/dist/ReactToastify.css';\nconst toastSetting = {\n  autoClose: 2000,\n  transition: Slide,\n  position: \"bottom-right\",\n  hideProgressBar: false,\n  closeOnClick: true,\n  pauseOnHover: true,\n  draggable: true,\n  progress: undefined\n}; // Index of items\n\nconst Index = async header => {\n  try {\n    const response = await Axios.get(`${api}category`, header);\n    if (response.status === 200) return response.data;\n  } catch (error) {\n    if (error) return errorHandeller(error);\n  }\n}; // Show specific item\n\n\n_c = Index;\n\nconst Show = async (id, type, header) => {\n  try {\n    const response = await Axios.get(`${api}category/${type}/${id}`, header);\n    if (response.status === 200) return response.data;\n  } catch (error) {\n    if (error) return errorHandeller(error);\n  }\n}; // Store item\n\n\n_c2 = Show;\n\nconst Store = async (data, header) => {\n  try {\n    const response = await Axios.post(`${api}category`, data, header);\n\n    if (response.status === 201) {\n      toast.success(response.data.message, { ...toastSetting\n      });\n      return true;\n    }\n  } catch (error) {\n    if (error) return errorHandeller(error);\n  }\n}; // Update specific item\n\n\n_c3 = Store;\n\nconst Update = async (id, type, data, header) => {\n  try {\n    const response = await Axios.put(`${api}category/${type}/${id}`, data, header);\n\n    if (response.status === 201) {\n      toast.success(response.data.message, { ...toastSetting\n      });\n      return true;\n    }\n  } catch (error) {\n    if (error) return errorHandeller(error);\n  }\n}; // Update item image\n\n\n_c4 = Update;\n\nconst UpdateImage = async (id, type, data, header) => {\n  try {\n    const response = await Axios.put(`${api}category/image/${type}/${id}`, data, header);\n\n    if (response.status === 201) {\n      toast.success(response.data.message, { ...toastSetting\n      });\n      return true;\n    }\n  } catch (error) {\n    if (error) return errorHandeller(error);\n  }\n}; // Update item index\n\n\n_c5 = UpdateImage;\n\nconst UpdateIndex = async (data, header) => {\n  try {\n    const response = await Axios.put(`${api}category/update-index`, {\n      data\n    }, header);\n    if (response.status === 201) return response;\n  } catch (error) {\n    if (error) return errorHandeller(error);\n  }\n};\n\n_c6 = UpdateIndex;\nconst Category = {\n  Index,\n  Show,\n  Store,\n  Update,\n  UpdateImage,\n  UpdateIndex\n};\nexport default Category;\n\nvar _c, _c2, _c3, _c4, _c5, _c6;\n\n$RefreshReg$(_c, \"Index\");\n$RefreshReg$(_c2, \"Show\");\n$RefreshReg$(_c3, \"Store\");\n$RefreshReg$(_c4, \"Update\");\n$RefreshReg$(_c5, \"UpdateImage\");\n$RefreshReg$(_c6, \"UpdateIndex\");","map":{"version":3,"sources":["D:/previous/src/utils/Requests/Category.js"],"names":["Axios","api","toast","Slide","errorHandeller","toastSetting","autoClose","transition","position","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","Index","header","response","get","status","data","error","Show","id","type","Store","post","success","message","Update","put","UpdateImage","UpdateIndex","Category"],"mappings":"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","sourcesContent":["import Axios from 'axios'\nimport { api } from '../api'\nimport { toast, Slide } from 'react-toastify'\nimport { errorHandeller } from './Error'\nimport 'react-toastify/dist/ReactToastify.css'\n\nconst toastSetting = {\n    autoClose: 2000,\n    transition: Slide,\n    position: \"bottom-right\",\n    hideProgressBar: false,\n    closeOnClick: true,\n    pauseOnHover: true,\n    draggable: true,\n    progress: undefined\n}\n\n// Index of items\nconst Index = async (header) => {\n    try {\n        const response = await Axios.get(`${api}category`, header)\n        if (response.status === 200) return response.data\n    } catch (error) {\n        if (error) return errorHandeller(error)\n    }\n}\n\n// Show specific item\nconst Show = async (id, type, header) => {\n    try {\n        const response = await Axios.get(`${api}category/${type}/${id}`, header)\n        if (response.status === 200) return response.data\n    } catch (error) {\n        if (error) return errorHandeller(error)\n    }\n}\n\n// Store item\nconst Store = async (data, header) => {\n    try {\n        const response = await Axios.post(`${api}category`, data, header)\n        if (response.status === 201) {\n            toast.success(response.data.message, { ...toastSetting })\n            return true\n        }\n    } catch (error) {\n        if (error) return errorHandeller(error)\n    }\n}\n\n// Update specific item\nconst Update = async (id, type, data, header) => {\n    try {\n        const response = await Axios.put(`${api}category/${type}/${id}`, data, header)\n        if (response.status === 201) {\n            toast.success(response.data.message, { ...toastSetting })\n            return true\n        }\n    } catch (error) {\n        if (error) return errorHandeller(error)\n    }\n}\n\n// Update item image\nconst UpdateImage = async (id, type, data, header) => {\n    try {\n        const response = await Axios.put(`${api}category/image/${type}/${id}`, data, header)\n        if (response.status === 201) {\n            toast.success(response.data.message, { ...toastSetting })\n            return true\n        }\n    } catch (error) {\n        if (error) return errorHandeller(error)\n    }\n}\n\n// Update item index\nconst UpdateIndex = async (data, header) => {\n    try {\n        const response = await Axios.put(`${api}category/update-index`, { data }, header)\n        if (response.status === 201) return response\n    } catch (error) {\n        if (error) return errorHandeller(error)\n    }\n}\n\nconst Category = {\n    Index,\n    Show,\n    Store,\n    Update,\n    UpdateImage,\n    UpdateIndex\n}\n\nexport default Category"]},"metadata":{},"sourceType":"module"}