{"ast":null,"code":"var _jsxFileName = \"D:\\\\previous\\\\src\\\\pages\\\\university\\\\category\\\\Edit.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useCallback } from 'react';\nimport Icon from 'react-icons-kit';\nimport { useForm } from 'react-hook-form';\nimport { Link, useParams } from 'react-router-dom';\nimport { chevronLeft, edit2 } from 'react-icons-kit/feather';\nimport { Container } from '../../../components/container';\nimport { Card } from '../../../components/card/Index';\nimport { CustomButton } from '../../../components/button';\nimport { PreLoader } from '../../../components/loading/Index';\nimport { ImageCard } from '../../../components/image/imageCard';\nimport { FileUploaderModal } from '../../../components/fileUploader/Index';\nimport Requests from '../../../utils/Requests/Index';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CategoryEdit = () => {\n  _s();\n\n  const {\n    register,\n    handleSubmit,\n    errors\n  } = useForm();\n  const {\n    id\n  } = useParams();\n  const [category, setCategory] = useState(null);\n  const [isLoading, setLoading] = useState(true);\n  const [isUpdate, setUpdate] = useState({\n    form: false,\n    image: false\n  });\n  const [show, setShow] = useState(false);\n  const [image, setImage] = useState(null);\n  const [header] = useState({\n    headers: {\n      Authorization: \"Bearer \" + localStorage.getItem('token')\n    }\n  }); // Fetch data\n\n  const fetchData = useCallback(async () => {\n    const response = await Requests.University.CategoryShow(id, header);\n    if (response) setCategory(response.data);\n    setLoading(false);\n  }, [id, header]);\n  useEffect(() => {\n    fetchData();\n  }, [id, header, fetchData]); // handle image update\n\n  const handleImageUpdate = async file => {\n    let formData = new FormData();\n    formData.append(\"image\", file);\n    setUpdate({ ...isUpdate,\n      image: true\n    });\n    await Requests.University.UpdateCategoryImage(id, formData, header);\n    setImage(URL.createObjectURL(file));\n    setUpdate({ ...isUpdate,\n      image: false\n    });\n    setShow(false);\n  }; // Submit Form\n\n\n  const onSubmit = async data => {\n    setUpdate({\n      form: true,\n      image: false\n    });\n    await Requests.University.CategoryUpdate(id, data, header);\n    setUpdate({\n      form: false,\n      image: false\n    });\n  };\n\n  if (isLoading) return /*#__PURE__*/_jsxDEV(PreLoader, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 27\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"pb-4\",\n    children: [/*#__PURE__*/_jsxDEV(Container.Fluid, {\n      children: /*#__PURE__*/_jsxDEV(Container.Row, {\n        children: /*#__PURE__*/_jsxDEV(Container.Column, {\n          className: \"col-padding\",\n          children: /*#__PURE__*/_jsxDEV(Card.Simple, {\n            className: \"border-0\",\n            children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n              className: \"bg-white border-0 p-3 p-lg-4\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"d-flex\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  children: /*#__PURE__*/_jsxDEV(\"h6\", {\n                    className: \"mb-0\",\n                    children: \"Edit Category\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 68,\n                    columnNumber: 42\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 68,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"ml-auto\",\n                  children: /*#__PURE__*/_jsxDEV(Link, {\n                    to: \"/dashboard/university/category\",\n                    children: /*#__PURE__*/_jsxDEV(CustomButton, {\n                      className: \"btn-primary border-0 rounded-circle circle__padding\",\n                      children: /*#__PURE__*/_jsxDEV(Icon, {\n                        icon: chevronLeft,\n                        size: 22\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 72,\n                        columnNumber: 49\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 71,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 70,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 69,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n              className: \"px-4 pt-0\",\n              children: /*#__PURE__*/_jsxDEV(\"form\", {\n                onSubmit: handleSubmit(onSubmit),\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"form-group mb-4\",\n                  children: [errors.name && errors.name.message ? /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"text-danger\",\n                    children: errors.name && errors.name.message\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 85,\n                    columnNumber: 45\n                  }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: \"Name\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 86,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    name: \"name\",\n                    defaultValue: category ? category.name : null,\n                    className: \"form-control shadow-none\",\n                    placeholder: \"Enter category name\",\n                    ref: register({\n                      required: \"Name is required\"\n                    })\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 88,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 83,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"form-group mb-4\",\n                  children: /*#__PURE__*/_jsxDEV(ImageCard, {\n                    width: 200,\n                    height: 100,\n                    imgSrc: image || category.image,\n                    imgAlt: \"...\",\n                    actionBtn: true,\n                    btnType: \"edit-btn\",\n                    btnIcon: /*#__PURE__*/_jsxDEV(Icon, {\n                      icon: edit2,\n                      size: 20\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 107,\n                      columnNumber: 54\n                    }, this),\n                    onClick: () => setShow(true)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 100,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 99,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text-right\",\n                  children: /*#__PURE__*/_jsxDEV(CustomButton, {\n                    type: \"submit\",\n                    className: \"btn btn-success border-0 shadow-none\",\n                    disabled: isUpdate.form,\n                    children: isUpdate.form ? 'Updating ...' : 'Update'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 113,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 112,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FileUploaderModal, {\n      show: show,\n      loading: isUpdate.image,\n      title: \"Change Category Image\",\n      onHide: () => setShow(false),\n      upload: file => handleImageUpdate(file)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CategoryEdit, \"b1ffgMlOQtwxPk8iKidWAaViEPE=\", false, function () {\n  return [useForm, useParams];\n});\n\n_c = CategoryEdit;\nexport default CategoryEdit;\n\nvar _c;\n\n$RefreshReg$(_c, \"CategoryEdit\");","map":{"version":3,"sources":["D:/previous/src/pages/university/category/Edit.js"],"names":["React","useState","useEffect","useCallback","Icon","useForm","Link","useParams","chevronLeft","edit2","Container","Card","CustomButton","PreLoader","ImageCard","FileUploaderModal","Requests","CategoryEdit","register","handleSubmit","errors","id","category","setCategory","isLoading","setLoading","isUpdate","setUpdate","form","image","show","setShow","setImage","header","headers","Authorization","localStorage","getItem","fetchData","response","University","CategoryShow","data","handleImageUpdate","file","formData","FormData","append","UpdateCategoryImage","URL","createObjectURL","onSubmit","CategoryUpdate","name","message","required"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useCallback } from 'react'\nimport Icon from 'react-icons-kit'\nimport { useForm } from 'react-hook-form'\nimport { Link, useParams } from 'react-router-dom'\nimport { chevronLeft, edit2 } from 'react-icons-kit/feather'\nimport { Container } from '../../../components/container'\nimport { Card } from '../../../components/card/Index'\nimport { CustomButton } from '../../../components/button'\nimport { PreLoader } from '../../../components/loading/Index'\nimport { ImageCard } from '../../../components/image/imageCard'\nimport { FileUploaderModal } from '../../../components/fileUploader/Index'\nimport Requests from '../../../utils/Requests/Index'\n\n\nconst CategoryEdit = () => {\n    const { register, handleSubmit, errors } = useForm()\n    const { id } = useParams()\n    const [category, setCategory] = useState(null)\n    const [isLoading, setLoading] = useState(true)\n    const [isUpdate, setUpdate] = useState({ form: false, image: false })\n\n    const [show, setShow] = useState(false)\n    const [image, setImage] = useState(null)\n    const [header] = useState({\n        headers: { Authorization: \"Bearer \" + localStorage.getItem('token') }\n    })\n\n    // Fetch data\n    const fetchData = useCallback(async () => {\n        const response = await Requests.University.CategoryShow(id, header)\n        if (response) setCategory(response.data)\n        setLoading(false)\n    }, [id, header])\n\n    useEffect(() => {\n        fetchData()\n    }, [id, header, fetchData])\n\n    // handle image update\n    const handleImageUpdate = async (file) => {\n        let formData = new FormData()\n        formData.append(\"image\", file)\n        setUpdate({ ...isUpdate, image: true })\n\n        await Requests.University.UpdateCategoryImage(id, formData, header)\n        setImage(URL.createObjectURL(file))\n        setUpdate({ ...isUpdate, image: false })\n        setShow(false)\n    }\n\n    // Submit Form\n    const onSubmit = async (data) => {\n        setUpdate({ form: true, image: false })\n        await Requests.University.CategoryUpdate(id, data, header)\n        setUpdate({ form: false, image: false })\n    }\n\n    if (isLoading) return <PreLoader />\n\n    return (\n        <div className=\"pb-4\">\n            <Container.Fluid>\n                <Container.Row>\n                    <Container.Column className=\"col-padding\">\n                        <Card.Simple className=\"border-0\">\n                            <Card.Header className=\"bg-white border-0 p-3 p-lg-4\">\n                                <div className=\"d-flex\">\n                                    <div><h6 className=\"mb-0\">Edit Category</h6></div>\n                                    <div className=\"ml-auto\">\n                                        <Link to=\"/dashboard/university/category\">\n                                            <CustomButton className=\"btn-primary border-0 rounded-circle circle__padding\">\n                                                <Icon icon={chevronLeft} size={22} />\n                                            </CustomButton>\n                                        </Link>\n                                    </div>\n                                </div>\n                            </Card.Header>\n\n                            <Card.Body className=\"px-4 pt-0\">\n                                <form onSubmit={handleSubmit(onSubmit)}>\n\n                                    {/* Name */}\n                                    <div className=\"form-group mb-4\">\n                                        {errors.name && errors.name.message ? (\n                                            <p className=\"text-danger\">{errors.name && errors.name.message}</p>\n                                        ) : <p>Name</p>}\n\n                                        <input\n                                            type=\"text\"\n                                            name=\"name\"\n                                            defaultValue={category ? category.name : null}\n                                            className=\"form-control shadow-none\"\n                                            placeholder=\"Enter category name\"\n                                            ref={register({ required: \"Name is required\" })}\n                                        />\n                                    </div>\n\n                                    {/* Image show card */}\n                                    <div className=\"form-group mb-4\">\n                                        <ImageCard\n                                            width={200}\n                                            height={100}\n                                            imgSrc={image || category.image}\n                                            imgAlt={\"...\"}\n                                            actionBtn\n                                            btnType=\"edit-btn\"\n                                            btnIcon={<Icon icon={edit2} size={20} />}\n                                            onClick={() => setShow(true)}\n                                        />\n                                    </div>\n\n                                    <div className=\"text-right\">\n                                        <CustomButton\n                                            type=\"submit\"\n                                            className=\"btn btn-success border-0 shadow-none\"\n                                            disabled={isUpdate.form}\n                                        >{isUpdate.form ? 'Updating ...' : 'Update'}</CustomButton>\n                                    </div>\n                                </form>\n                            </Card.Body>\n                        </Card.Simple>\n                    </Container.Column>\n                </Container.Row>\n            </Container.Fluid>\n\n            {/* Image uploader modal*/}\n            <FileUploaderModal\n                show={show}\n                loading={isUpdate.image}\n                title=\"Change Category Image\"\n                onHide={() => setShow(false)}\n                upload={file => handleImageUpdate(file)}\n            />\n        </div>\n    );\n}\n\nexport default CategoryEdit;\n"]},"metadata":{},"sourceType":"module"}