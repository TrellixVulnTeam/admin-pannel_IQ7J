{"ast":null,"code":"var _jsxFileName = \"D:\\\\previous\\\\src\\\\pages\\\\campaign\\\\Edit.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useCallback, useRef } from 'react';\nimport './style.scss';\nimport Icon from 'react-icons-kit';\nimport { Link, useParams } from 'react-router-dom';\nimport { chevronLeft } from 'react-icons-kit/feather';\nimport { Toastify } from '../../components/toastify';\nimport { PreLoader } from '../../components/loading/Index';\nimport { CampaignForm } from '../../components/form/campaign';\nimport Requests from '../../utils/Requests/Index';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Edit = () => {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  const [data, setData] = useState({});\n  const [isLoading, setLoading] = useState(true);\n  const [isUpdate, setUpdate] = useState(false);\n  const [isImgLoading, setImgLoading] = useState(false); // Fetch data\n\n  const fetchData = useCallback(async () => {\n    try {\n      const response = await Requests.Services.Campaign.Show(id);\n\n      if (response && response.status === 200) {\n        setData(response.data.data);\n        console.log(response.data.data);\n      }\n\n      setLoading(false);\n    } catch (error) {\n      if (error) {\n        setLoading(false);\n        console.log(error.response);\n      }\n    }\n  }, [id]);\n  useEffect(() => {\n    fetchData();\n  }, [id, fetchData]);\n  /* handle data form */\n\n  const handleSubmit = async data => {\n    try {\n      setUpdate(true);\n      const response = await Requests.Services.Campaign.Update(id, data);\n\n      if (response && response.status === 201) {\n        Toastify.Success(response.data.message);\n      }\n\n      setUpdate(false);\n    } catch (error) {\n      if (error) {\n        setUpdate(false);\n        console.log(error.response);\n\n        if (error.response && error.response.data && error.response.data.message) {\n          Toastify.Error(error.response.data.message);\n        }\n      }\n    }\n  };\n  /* handle image update */\n\n\n  const handleImgSubmit = async data => {\n    try {\n      setImgLoading(true);\n      const response = await Requests.Services.Campaign.EditBanner(id, data);\n\n      if (response && response.status === 201) {\n        Toastify.Success(response.data.message);\n      }\n\n      setImgLoading(false);\n    } catch (error) {\n      if (error) {\n        setImgLoading(false);\n        console.log(error.response);\n\n        if (error.response && error.response.data && error.response.data.message) {\n          Toastify.Error(error.response.data.message);\n        }\n      }\n    }\n  };\n\n  if (isLoading) return /*#__PURE__*/_jsxDEV(PreLoader, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 27\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"edit-campaign pb-4\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-fluid\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-12 col-padding\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card border-0 shadow-sm\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-header p-3 p-lg-4 bg-white\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"d-flex\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n                    className: \"mb-0\",\n                    children: \"Edit campaign\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 97,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                    className: \"text-muted\",\n                    children: /*#__PURE__*/_jsxDEV(\"i\", {\n                      children: \"Select item/options if you want to apply unless no need to select.\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 99,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 98,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 96,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"ml-auto pt-2\",\n                  children: /*#__PURE__*/_jsxDEV(Link, {\n                    to: \"/dashboard/campaign\",\n                    type: \"button\",\n                    className: \"btn shadow-none rounded-circle\",\n                    children: /*#__PURE__*/_jsxDEV(Icon, {\n                      icon: chevronLeft,\n                      size: 22\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 108,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 103,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 102,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-body p-4\",\n              children: /*#__PURE__*/_jsxDEV(CampaignForm, {\n                formType: \"edit\",\n                data: data,\n                loading: isUpdate,\n                imgLoading: isImgLoading,\n                onSubmit: data => handleSubmit(data),\n                onImgSubmit: data => handleImgSubmit(data)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Edit, \"FxVyx1msLWeRSSfA2F72w1657mM=\", false, function () {\n  return [useParams];\n});\n\n_c = Edit;\nexport default Edit;\n\nvar _c;\n\n$RefreshReg$(_c, \"Edit\");","map":{"version":3,"sources":["D:/previous/src/pages/campaign/Edit.js"],"names":["React","useState","useEffect","useCallback","useRef","Icon","Link","useParams","chevronLeft","Toastify","PreLoader","CampaignForm","Requests","Edit","id","data","setData","isLoading","setLoading","isUpdate","setUpdate","isImgLoading","setImgLoading","fetchData","response","Services","Campaign","Show","status","console","log","error","handleSubmit","Update","Success","message","Error","handleImgSubmit","EditBanner"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useCallback, useRef } from 'react'\nimport './style.scss'\nimport Icon from 'react-icons-kit'\nimport { Link, useParams } from 'react-router-dom'\nimport { chevronLeft } from 'react-icons-kit/feather'\n\nimport { Toastify } from '../../components/toastify'\nimport { PreLoader } from '../../components/loading/Index'\nimport { CampaignForm } from '../../components/form/campaign'\nimport Requests from '../../utils/Requests/Index'\n\n\n\nconst Edit = () => {\n    const { id } = useParams()\n    const [data, setData] = useState({})\n    const [isLoading, setLoading] = useState(true)\n    const [isUpdate, setUpdate] = useState(false)\n    const [isImgLoading, setImgLoading] = useState(false)\n\n    // Fetch data\n    const fetchData = useCallback(async () => {\n        try {\n            const response = await Requests.Services.Campaign.Show(id)\n            if (response && response.status === 200) {\n                setData(response.data.data)\n\n                console.log(response.data.data);\n            }\n            setLoading(false)\n        } catch (error) {\n            if (error) {\n                setLoading(false)\n                console.log(error.response);\n            }\n        }\n    }, [id])\n\n    useEffect(() => {\n        fetchData()\n    }, [id, fetchData])\n\n\n    /* handle data form */\n    const handleSubmit = async (data) => {\n        try {\n            setUpdate(true)\n            const response = await Requests.Services.Campaign.Update(id, data)\n            if (response && response.status === 201) {\n                Toastify.Success(response.data.message)\n            }\n\n            setUpdate(false)\n        } catch (error) {\n            if (error) {\n                setUpdate(false)\n                console.log(error.response)\n                if (error.response && error.response.data && error.response.data.message) {\n                    Toastify.Error(error.response.data.message)\n                }\n            }\n        }\n    }\n\n    /* handle image update */\n    const handleImgSubmit = async (data) => {\n        try {\n            setImgLoading(true)\n            const response = await Requests.Services.Campaign.EditBanner(id, data)\n            if (response && response.status === 201) {\n                Toastify.Success(response.data.message)\n            }\n\n            setImgLoading(false)\n        } catch (error) {\n            if (error) {\n                setImgLoading(false)\n                console.log(error.response)\n                if (error.response && error.response.data && error.response.data.message) {\n                    Toastify.Error(error.response.data.message)\n                }\n            }\n        }\n    }\n\n    if (isLoading) return <PreLoader />\n\n    return (\n        <div className=\"edit-campaign pb-4\">\n            <div className=\"container-fluid\">\n                <div className=\"row\">\n                    <div className=\"col-12 col-padding\">\n                        <div className=\"card border-0 shadow-sm\">\n                            <div className=\"card-header p-3 p-lg-4 bg-white\">\n                                <div className=\"d-flex\">\n                                    <div>\n                                        <h6 className=\"mb-0\">Edit campaign</h6>\n                                        <small className=\"text-muted\">\n                                            <i>Select item/options if you want to apply unless no need to select.</i>\n                                        </small>\n                                    </div>\n                                    <div className=\"ml-auto pt-2\">\n                                        <Link\n                                            to=\"/dashboard/campaign\"\n                                            type=\"button\"\n                                            className=\"btn shadow-none rounded-circle\"\n                                        >\n                                            <Icon icon={chevronLeft} size={22} />\n                                        </Link>\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"card-body p-4\">\n                                <CampaignForm\n                                    formType=\"edit\"\n                                    data={data}\n                                    loading={isUpdate}\n                                    imgLoading={isImgLoading}\n                                    onSubmit={data => handleSubmit(data)}\n                                    onImgSubmit={data => handleImgSubmit(data)}\n                                />\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Edit;\n"]},"metadata":{},"sourceType":"module"}