{"ast":null,"code":"import Axios from 'axios';\nimport { api } from '../api';\nimport { toast } from 'react-toastify';\nimport { errorHandeller } from './Error';\nimport 'react-toastify/dist/ReactToastify.css';\ntoast.configure({\n  autoClose: 2000\n}); // List of vendors\n\nconst Index = async (page, limit, header) => {\n  try {\n    const response = await Axios.get(`${api}vendor?page=${page}&limit=${limit}`, header);\n\n    if (response.status === 200) {\n      return response.data;\n    }\n  } catch (error) {\n    if (error) return errorHandeller(error);\n  }\n}; // List of all vendors\n\n\n_c = Index;\n\nconst IndexAll = async header => {\n  try {\n    const response = await Axios.get(`${api}vendor/all`, header);\n\n    if (response.status === 200) {\n      return response.data;\n    }\n  } catch (error) {\n    if (error) return errorHandeller(error);\n  }\n}; // Store vendor\n\n\n_c2 = IndexAll;\n\nconst Store = async (data, header) => {\n  try {\n    const response = await Axios.post(`${api}vendor`, data, header);\n\n    if (response.status === 201) {\n      toast.success(response.data.message);\n      return true;\n    }\n  } catch (error) {\n    if (error) return errorHandeller(error);\n  }\n}; // Show specific vendor\n\n\n_c3 = Store;\n\nconst Show = async (id, header) => {\n  try {\n    const response = await Axios.get(`${api}vendor/${id}`, header);\n\n    if (response.status === 200) {\n      return response.data;\n    }\n  } catch (error) {\n    if (error) return errorHandeller(error);\n  }\n}; // Update specific vendor\n\n\n_c4 = Show;\n\nconst Update = async (id, data, header) => {\n  try {\n    const response = await Axios.put(`${api}vendor/${id}`, data, header);\n\n    if (response.status === 201) {\n      toast.success(response.data.message);\n      return true;\n    }\n  } catch (error) {\n    if (error) return errorHandeller(error);\n  }\n}; // Search vendor\n\n\n_c5 = Update;\n\nconst Search = async (data, header) => {\n  try {\n    const response = await Axios.get(`${api}vendor/search/items?query=${data}`, header);\n    if (response.status === 200) return response.data;\n  } catch (error) {\n    if (error) return errorHandeller(error);\n  }\n}; // Upload xlsx\n\n\n_c6 = Search;\n\nconst UploadXlsx = async (data, header) => {\n  try {\n    const response = await Axios.post(`${api}vendor/upload/xlsx`, data, header);\n\n    if (response.status === 201) {\n      toast.success(response.data.message);\n      return true;\n    }\n  } catch (error) {\n    if (error) return errorHandeller(error);\n  }\n};\n\n_c7 = UploadXlsx;\n\nconst UpdateImage = async (id, data, header) => {\n  try {\n    const response = await Axios.put(`${api}vendor/image/${id}`, data, header);\n\n    if (response.status === 201) {\n      toast.success(response.data.message);\n      return true;\n    }\n  } catch (error) {\n    if (error) return errorHandeller(error);\n  }\n};\n\n_c8 = UpdateImage;\nconst Vendor = {\n  Index,\n  IndexAll,\n  Show,\n  Store,\n  Update,\n  Search,\n  UploadXlsx,\n  UpdateImage\n};\nexport default Vendor;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8;\n\n$RefreshReg$(_c, \"Index\");\n$RefreshReg$(_c2, \"IndexAll\");\n$RefreshReg$(_c3, \"Store\");\n$RefreshReg$(_c4, \"Show\");\n$RefreshReg$(_c5, \"Update\");\n$RefreshReg$(_c6, \"Search\");\n$RefreshReg$(_c7, \"UploadXlsx\");\n$RefreshReg$(_c8, \"UpdateImage\");","map":{"version":3,"sources":["D:/previous/src/utils/Requests/Vendor.js"],"names":["Axios","api","toast","errorHandeller","configure","autoClose","Index","page","limit","header","response","get","status","data","error","IndexAll","Store","post","success","message","Show","id","Update","put","Search","UploadXlsx","UpdateImage","Vendor"],"mappings":"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","sourcesContent":["import Axios from 'axios'\nimport { api } from '../api'\nimport { toast } from 'react-toastify'\nimport { errorHandeller } from './Error'\nimport 'react-toastify/dist/ReactToastify.css'\ntoast.configure({ autoClose: 2000 })\n\n// List of vendors\nconst Index = async (page, limit, header) => {\n    try {\n        const response = await Axios.get(`${api}vendor?page=${page}&limit=${limit}`, header)\n        if (response.status === 200) {\n            return response.data\n        }\n    } catch (error) {\n        if (error) return errorHandeller(error)\n    }\n}\n\n// List of all vendors\nconst IndexAll = async (header) => {\n    try {\n        const response = await Axios.get(`${api}vendor/all`, header)\n        if (response.status === 200) {\n            return response.data\n        }\n    } catch (error) {\n        if (error) return errorHandeller(error)\n    }\n}\n\n// Store vendor\nconst Store = async (data, header) => {\n    try {\n        const response = await Axios.post(`${api}vendor`, data, header)\n        if (response.status === 201) {\n            toast.success(response.data.message)\n            return true\n        }\n    } catch (error) {\n        if (error) return errorHandeller(error)\n    }\n}\n\n// Show specific vendor\nconst Show = async (id, header) => {\n    try {\n        const response = await Axios.get(`${api}vendor/${id}`, header)\n        if (response.status === 200) {\n            return response.data\n        }\n    } catch (error) {\n        if (error) return errorHandeller(error)\n    }\n}\n\n// Update specific vendor\nconst Update = async (id, data, header) => {\n    try {\n        const response = await Axios.put(`${api}vendor/${id}`, data, header)\n        if (response.status === 201) {\n            toast.success(response.data.message)\n            return true\n        }\n    } catch (error) {\n        if (error) return errorHandeller(error)\n    }\n}\n\n// Search vendor\nconst Search = async (data, header) => {\n    try {\n        const response = await Axios.get(`${api}vendor/search/items?query=${data}`, header)\n        if (response.status === 200) return response.data\n    } catch (error) {\n        if (error) return errorHandeller(error)\n    }\n}\n\n// Upload xlsx\nconst UploadXlsx = async (data, header) => {\n    try {\n        const response = await Axios.post(`${api}vendor/upload/xlsx`, data, header)\n        if (response.status === 201) {\n            toast.success(response.data.message)\n            return true\n        }\n    } catch (error) {\n        if (error) return errorHandeller(error)\n    }\n}\n\nconst UpdateImage = async (id, data, header) => {\n    try {\n        const response = await Axios.put(`${api}vendor/image/${id}`, data, header)\n        if (response.status === 201) {\n            toast.success(response.data.message)\n            return true\n        }\n    } catch (error) {\n        if (error) return errorHandeller(error)\n    }\n}\n\nconst Vendor = {\n    Index,\n    IndexAll,\n    Show,\n    Store,\n    Update,\n    Search,\n    UploadXlsx,\n    UpdateImage\n}\n\nexport default Vendor"]},"metadata":{},"sourceType":"module"}