{"ast":null,"code":"var _jsxFileName = \"D:\\\\previous\\\\src\\\\pages\\\\university\\\\category\\\\Create.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Icon from 'react-icons-kit';\nimport { Link } from 'react-router-dom';\nimport { useForm } from 'react-hook-form';\nimport { chevronLeft } from 'react-icons-kit/feather';\nimport { Container } from '../../../components/container';\nimport { Card } from '../../../components/card/Index';\nimport { CustomButton } from '../../../components/button';\nimport { SingleFileUploader } from '../../../components/fileUploader/Index';\nimport Requests from '../../../utils/Requests/Index';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Create = () => {\n  _s();\n\n  const {\n    register,\n    handleSubmit,\n    errors\n  } = useForm();\n  const [isLoading, setLoading] = useState(false);\n  const [image, setImage] = useState({\n    value: null,\n    error: null\n  });\n  const [header] = useState({\n    headers: {\n      Authorization: \"Bearer \" + localStorage.getItem('token')\n    }\n  }); // Submit Form\n\n  const onSubmit = async data => {\n    if (!image.value) return setImage({ ...image,\n      error: \"Image is required\"\n    });\n    setLoading(true);\n    let formData = new FormData();\n    formData.append('name', data.name);\n    formData.append('image', image.value);\n    await Requests.University.CategoryStore(formData, header);\n    setLoading(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"pb-4\",\n    children: /*#__PURE__*/_jsxDEV(Container.Fluid, {\n      children: /*#__PURE__*/_jsxDEV(Container.Row, {\n        children: /*#__PURE__*/_jsxDEV(Container.Column, {\n          className: \"col-padding\",\n          children: /*#__PURE__*/_jsxDEV(Card.Simple, {\n            className: \"border-0\",\n            children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n              className: \"bg-white border-0 p-3 p-lg-4\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"d-flex\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  children: /*#__PURE__*/_jsxDEV(\"h6\", {\n                    className: \"mb-0\",\n                    children: \"Create Eazybest University Category\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 43,\n                    columnNumber: 42\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 43,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"ml-auto\",\n                  children: /*#__PURE__*/_jsxDEV(Link, {\n                    to: \"/dashboard/university/category\",\n                    children: /*#__PURE__*/_jsxDEV(CustomButton, {\n                      className: \"btn-primary border-0 rounded-circle circle__padding\",\n                      children: /*#__PURE__*/_jsxDEV(Icon, {\n                        icon: chevronLeft,\n                        size: 22\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 47,\n                        columnNumber: 49\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 46,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 45,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 44,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 42,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n              className: \"px-4 pt-0\",\n              children: /*#__PURE__*/_jsxDEV(\"form\", {\n                onSubmit: handleSubmit(onSubmit),\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"form-group mb-4\",\n                  children: [errors.name && errors.name.message ? /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"text-danger\",\n                    children: errors.name && errors.name.message\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 60,\n                    columnNumber: 45\n                  }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: \"Name\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 61,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    name: \"name\",\n                    className: \"form-control shadow-none\",\n                    placeholder: \"Enter category name\",\n                    ref: register({\n                      required: \"Name is required\"\n                    })\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 63,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 58,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"form-group mb-4\",\n                  children: [image.error ? /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"text-danger\",\n                    children: image.error\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 74,\n                    columnNumber: 56\n                  }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: \"Image\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 74,\n                    columnNumber: 103\n                  }, this), /*#__PURE__*/_jsxDEV(SingleFileUploader, {\n                    width: 200,\n                    height: 100,\n                    limit: 100,\n                    dataHandeller: data => setImage({\n                      value: data.image,\n                      error: data.error || null\n                    })\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 75,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 73,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text-right\",\n                  children: /*#__PURE__*/_jsxDEV(CustomButton, {\n                    type: \"submit\",\n                    className: \"btn btn-success border-0 shadow-none\",\n                    disabled: isLoading,\n                    children: isLoading ? 'Submitting...' : 'Submit'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 84,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 83,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Create, \"P/VkbxqxQ1kbC36TRD/UiKPd3lY=\", false, function () {\n  return [useForm];\n});\n\n_c = Create;\nexport default Create;\n\nvar _c;\n\n$RefreshReg$(_c, \"Create\");","map":{"version":3,"sources":["D:/previous/src/pages/university/category/Create.js"],"names":["React","useState","Icon","Link","useForm","chevronLeft","Container","Card","CustomButton","SingleFileUploader","Requests","Create","register","handleSubmit","errors","isLoading","setLoading","image","setImage","value","error","header","headers","Authorization","localStorage","getItem","onSubmit","data","formData","FormData","append","name","University","CategoryStore","message","required"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport Icon from 'react-icons-kit'\nimport { Link } from 'react-router-dom'\nimport { useForm } from 'react-hook-form'\nimport { chevronLeft } from 'react-icons-kit/feather'\nimport { Container } from '../../../components/container'\nimport { Card } from '../../../components/card/Index'\nimport { CustomButton } from '../../../components/button'\nimport { SingleFileUploader } from '../../../components/fileUploader/Index'\n\nimport Requests from '../../../utils/Requests/Index'\n\n\nconst Create = () => {\n    const { register, handleSubmit, errors } = useForm()\n    const [isLoading, setLoading] = useState(false)\n    const [image, setImage] = useState({ value: null, error: null })\n    const [header] = useState({\n        headers: { Authorization: \"Bearer \" + localStorage.getItem('token') }\n    })\n\n    // Submit Form\n    const onSubmit = async (data) => {\n        if (!image.value) return setImage({ ...image, error: \"Image is required\" })\n\n        setLoading(true)\n        let formData = new FormData()\n        formData.append('name', data.name)\n        formData.append('image', image.value)\n\n        await Requests.University.CategoryStore(formData, header)\n        setLoading(false)\n    }\n\n    return (\n        <div className=\"pb-4\">\n            <Container.Fluid>\n                <Container.Row>\n                    <Container.Column className=\"col-padding\">\n                        <Card.Simple className=\"border-0\">\n                            <Card.Header className=\"bg-white border-0 p-3 p-lg-4\">\n                                <div className=\"d-flex\">\n                                    <div><h6 className=\"mb-0\">Create Eazybest University Category</h6></div>\n                                    <div className=\"ml-auto\">\n                                        <Link to=\"/dashboard/university/category\">\n                                            <CustomButton className=\"btn-primary border-0 rounded-circle circle__padding\">\n                                                <Icon icon={chevronLeft} size={22} />\n                                            </CustomButton>\n                                        </Link>\n                                    </div>\n                                </div>\n                            </Card.Header>\n\n                            <Card.Body className=\"px-4 pt-0\">\n                                <form onSubmit={handleSubmit(onSubmit)}>\n\n                                    {/* Name */}\n                                    <div className=\"form-group mb-4\">\n                                        {errors.name && errors.name.message ? (\n                                            <p className=\"text-danger\">{errors.name && errors.name.message}</p>\n                                        ) : <p>Name</p>}\n\n                                        <input\n                                            type=\"text\"\n                                            name=\"name\"\n                                            className=\"form-control shadow-none\"\n                                            placeholder=\"Enter category name\"\n                                            ref={register({ required: \"Name is required\" })}\n                                        />\n                                    </div>\n\n                                    {/* File upload */}\n                                    <div className=\"form-group mb-4\">\n                                        {image.error ? <p className=\"text-danger\">{image.error}</p> : <p>Image</p>}\n                                        <SingleFileUploader\n                                            width={200}\n                                            height={100}\n                                            limit={100}\n                                            dataHandeller={data => setImage({ value: data.image, error: data.error || null })}\n                                        />\n                                    </div>\n\n                                    <div className=\"text-right\">\n                                        <CustomButton\n                                            type=\"submit\"\n                                            className=\"btn btn-success border-0 shadow-none\"\n                                            disabled={isLoading}\n                                        >{isLoading ? 'Submitting...' : 'Submit'}</CustomButton>\n                                    </div>\n                                </form>\n                            </Card.Body>\n                        </Card.Simple>\n                    </Container.Column>\n                </Container.Row>\n            </Container.Fluid>\n        </div>\n    );\n}\n\nexport default Create;"]},"metadata":{},"sourceType":"module"}