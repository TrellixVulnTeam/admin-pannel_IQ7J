{"ast":null,"code":"import Axios from 'axios';\nimport { api } from '../api';\nimport { toast } from 'react-toastify';\nimport { errorHandeller } from './Error';\nimport 'react-toastify/dist/ReactToastify.css';\ntoast.configure({\n  autoClose: 2000\n}); // List of products\n\nconst Index = async (query, header) => {\n  try {\n    const response = await Axios.get(`${api}`, header);\n    if (response.status === 200) return response.data;\n  } catch (error) {\n    if (error) return errorHandeller(error);\n  }\n}; // Store product\n\n/* const Store = async (data, header) => {\n    try {\n        const response = await Axios.post(`${api}`, data, header)\n        if (response.status === 201) {\n            toast.success(response.data.message)\n            return true\n        }\n    } catch (error) {\n        if (error) return errorHandeller(error);\n    }\n} */\n\n\n_c = Index;\nconst Product = {\n  Index,\n  Store\n};\nexport default Product;\n\nvar _c;\n\n$RefreshReg$(_c, \"Index\");","map":{"version":3,"sources":["D:/previous/src/utils/Requests/Product.js"],"names":["Axios","api","toast","errorHandeller","configure","autoClose","Index","query","header","response","get","status","data","error","Product","Store"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,QAAoB,QAApB;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,SAASC,cAAT,QAA+B,SAA/B;AACA,OAAO,uCAAP;AACAD,KAAK,CAACE,SAAN,CAAgB;AAAEC,EAAAA,SAAS,EAAE;AAAb,CAAhB,E,CAEA;;AACA,MAAMC,KAAK,GAAG,OAAOC,KAAP,EAAcC,MAAd,KAAyB;AACnC,MAAI;AACA,UAAMC,QAAQ,GAAG,MAAMT,KAAK,CAACU,GAAN,CAAW,GAAET,GAAI,EAAjB,EAAoBO,MAApB,CAAvB;AACA,QAAIC,QAAQ,CAACE,MAAT,KAAoB,GAAxB,EAA6B,OAAOF,QAAQ,CAACG,IAAhB;AAChC,GAHD,CAGE,OAAOC,KAAP,EAAc;AACZ,QAAIA,KAAJ,EAAW,OAAOV,cAAc,CAACU,KAAD,CAArB;AACd;AACJ,CAPD,C,CASA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;KApBMP,K;AAwBN,MAAMQ,OAAO,GAAG;AACZR,EAAAA,KADY;AAEZS,EAAAA;AAFY,CAAhB;AAKA,eAAeD,OAAf","sourcesContent":["import Axios from 'axios'\nimport { api } from '../api'\nimport { toast } from 'react-toastify'\nimport { errorHandeller } from './Error'\nimport 'react-toastify/dist/ReactToastify.css'\ntoast.configure({ autoClose: 2000 })\n\n// List of products\nconst Index = async (query, header) => {\n    try {\n        const response = await Axios.get(`${api}`, header)\n        if (response.status === 200) return response.data\n    } catch (error) {\n        if (error) return errorHandeller(error)\n    }\n}\n\n// Store product\n/* const Store = async (data, header) => {\n    try {\n        const response = await Axios.post(`${api}`, data, header)\n        if (response.status === 201) {\n            toast.success(response.data.message)\n            return true\n        }\n    } catch (error) {\n        if (error) return errorHandeller(error);\n    }\n} */\n\n\n\nconst Product = {\n    Index,\n    Store,\n}\n\nexport default Product"]},"metadata":{},"sourceType":"module"}