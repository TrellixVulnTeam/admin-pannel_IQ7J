{"ast":null,"code":"var _jsxFileName = \"D:\\\\previous\\\\src\\\\pages\\\\reports\\\\bestCategory\\\\Index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useEffect, useState } from 'react';\nimport './style.scss';\nimport { DataTable } from '../../../components/table/Index';\nimport Requests from '../../../utils/Requests/Index';\nimport ExportCSV from '../../../components/exportCSV/Index';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Index = () => {\n  _s();\n\n  const [isLoading, setLoading] = useState(true);\n  const [limit, setLimit] = useState(10);\n  const [totalItems, setTotalItems] = useState(0);\n  const [data, setData] = useState([]);\n  const [sheetData, setSheetData] = useState([]);\n  const [header] = useState({\n    headers: {\n      Authorization: \"Bearer \" + localStorage.getItem('token')\n    }\n  }); // Fetch data\n\n  const fetchData = useCallback(async page => {\n    setLoading(true);\n    const response = await Requests.PerformedCategory.Index(page, limit, header);\n\n    if (response) {\n      let xlsxData = [];\n      setData(response.data);\n      setTotalItems(response.pagination ? response.pagination.items : 0);\n\n      if (response.data && response.data.length) {\n        for (let i = 0; i < response.data.length; i++) {\n          const element = response.data[i];\n          xlsxData.push({\n            name: element.name,\n            salesTime: element.salesTime,\n            salesQuantity: element.salesQuantity\n          });\n        }\n\n        setSheetData(xlsxData);\n      }\n    }\n\n    setLoading(false);\n  }, [limit, header]);\n\n  const handlePageChange = page => fetchData(page);\n\n  const handleLimitChange = async (newLimit, page) => {\n    setLoading(true);\n    const response = await Requests.PerformedCategory.Index(page, newLimit, header);\n    setData(response.data);\n    setLimit(newLimit);\n    setLoading(false);\n  };\n\n  useEffect(() => {\n    fetchData(1);\n  }, [header, fetchData]);\n  const columns = [{\n    name: 'Name',\n    grow: 1,\n    sortable: true,\n    selector: row => row.name\n  }, {\n    name: 'Sales Time',\n    sortable: true,\n    selector: row => row.salesTime\n  }, {\n    name: 'Sales Qunt.',\n    sortable: true,\n    selector: row => row.salesQuantity\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"report-index\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-fluid\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-12 col-padding\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card border-0 shadow-sm\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-header p-3 p-lg-4 bg-white\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"d-flex\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  children: /*#__PURE__*/_jsxDEV(\"h6\", {\n                    className: \"mt-2 mb-0\",\n                    children: \"Best performed category\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 86,\n                    columnNumber: 42\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 86,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"ml-auto\",\n                  children: /*#__PURE__*/_jsxDEV(ExportCSV, {\n                    csvData: sheetData,\n                    fileName: 'Best_performed_category'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 88,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 87,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-body p-0\",\n              children: /*#__PURE__*/_jsxDEV(DataTable, {\n                fixedHeader: true,\n                fixedHeaderScrollHeight: \"580px\",\n                columns: columns,\n                data: data,\n                loading: isLoading,\n                totalRows: totalItems,\n                pagination: true,\n                paginationServer: true,\n                handlePerRowsChange: handleLimitChange,\n                handlePageChange: handlePageChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Index, \"QbDqLBXqtRw/iypAmtfqCYxkSoo=\");\n\n_c = Index;\nexport default Index;\n\nvar _c;\n\n$RefreshReg$(_c, \"Index\");","map":{"version":3,"sources":["D:/previous/src/pages/reports/bestCategory/Index.js"],"names":["React","useCallback","useEffect","useState","DataTable","Requests","ExportCSV","Index","isLoading","setLoading","limit","setLimit","totalItems","setTotalItems","data","setData","sheetData","setSheetData","header","headers","Authorization","localStorage","getItem","fetchData","page","response","PerformedCategory","xlsxData","pagination","items","length","i","element","push","name","salesTime","salesQuantity","handlePageChange","handleLimitChange","newLimit","columns","grow","sortable","selector","row"],"mappings":"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","sourcesContent":["import React, { useCallback, useEffect, useState } from 'react'\nimport './style.scss'\nimport { DataTable } from '../../../components/table/Index'\nimport Requests from '../../../utils/Requests/Index'\nimport ExportCSV from '../../../components/exportCSV/Index'\n\nconst Index = () => {\n    const [isLoading, setLoading] = useState(true)\n    const [limit, setLimit] = useState(10)\n    const [totalItems, setTotalItems] = useState(0)\n\n    const [data, setData] = useState([])\n    const [sheetData, setSheetData] = useState([])\n    const [header] = useState({\n        headers: { Authorization: \"Bearer \" + localStorage.getItem('token') }\n    })\n\n    // Fetch data\n    const fetchData = useCallback(async (page) => {\n        setLoading(true)\n        const response = await Requests.PerformedCategory.Index(page, limit, header)\n\n        if (response) {\n            let xlsxData = []\n            setData(response.data)\n            setTotalItems(response.pagination ? response.pagination.items : 0)\n\n            if (response.data && response.data.length) {\n                for (let i = 0; i < response.data.length; i++) {\n                    const element = response.data[i]\n                    xlsxData.push({\n                        name: element.name,\n                        salesTime: element.salesTime,\n                        salesQuantity: element.salesQuantity\n                    })\n                }\n                setSheetData(xlsxData)\n            }\n        }\n\n        setLoading(false)\n    }, [limit, header])\n\n    const handlePageChange = page => fetchData(page)\n\n    const handleLimitChange = async (newLimit, page) => {\n        setLoading(true)\n        const response = await Requests.PerformedCategory.Index(page, newLimit, header)\n\n        setData(response.data)\n        setLimit(newLimit)\n        setLoading(false)\n    }\n\n    useEffect(() => {\n        fetchData(1)\n    }, [header, fetchData])\n\n    const columns = [\n        {\n            name: 'Name',\n            grow: 1,\n            sortable: true,\n            selector: row => row.name\n        },\n        {\n            name: 'Sales Time',\n            sortable: true,\n            selector: row => row.salesTime\n        },\n        {\n            name: 'Sales Qunt.',\n            sortable: true,\n            selector: row => row.salesQuantity\n        }\n    ]\n\n    return (\n        <div className=\"report-index\">\n            <div className=\"container-fluid\">\n                <div className=\"row\">\n                    <div className=\"col-12 col-padding\">\n                        <div className=\"card border-0 shadow-sm\">\n                            <div className=\"card-header p-3 p-lg-4 bg-white\">\n                                <div className=\"d-flex\">\n                                    <div><h6 className=\"mt-2 mb-0\">Best performed category</h6></div>\n                                    <div className=\"ml-auto\">\n                                        <ExportCSV csvData={sheetData} fileName={'Best_performed_category'} />\n                                    </div>\n                                </div>\n                            </div>\n\n                            {/* Data table component for show data */}\n                            <div className=\"card-body p-0\">\n                                <DataTable\n                                    fixedHeader\n                                    fixedHeaderScrollHeight=\"580px\"\n                                    columns={columns}\n                                    data={data}\n                                    loading={isLoading}\n                                    totalRows={totalItems}\n                                    pagination={true}\n                                    paginationServer={true}\n                                    handlePerRowsChange={handleLimitChange}\n                                    handlePageChange={handlePageChange}\n                                />\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default Index;"]},"metadata":{},"sourceType":"module"}