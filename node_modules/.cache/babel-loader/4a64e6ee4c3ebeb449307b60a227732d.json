{"ast":null,"code":"var _jsxFileName = \"D:\\\\previous\\\\src\\\\components\\\\search\\\\Index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './style.scss';\nimport Icon from 'react-icons-kit';\nimport { search } from 'react-icons-kit/feather';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Index = props => {\n  _s();\n\n  const [isTyping, setTyping] = useState(false);\n  const [query, setQuery] = useState({\n    value: null,\n    error: false\n  });\n  const [result, setResult] = useState({\n    values: [],\n    message: null\n  }); // Handle search suggestion\n\n  const handleSuggestion = async event => {\n    const value = event.target.value;\n    setTyping(true);\n    setQuery({\n      value: value,\n      error: false\n    });\n\n    if (!value) {\n      setTyping(false);\n      setResult({\n        values: [],\n        message: null\n      });\n      props.clear();\n    } else {\n      setResult({\n        values: [],\n        message: \"Searching ...\"\n      });\n    }\n\n    const response = await props.suggestion(value);\n    setResult({\n      values: response.results,\n      message: response.message\n    });\n  }; // Submit Form\n\n\n  const onSubmit = event => {\n    event.preventDefault();\n    setTyping(false);\n    props.search(query.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"search-component\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmit,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: props.placeholder,\n          onChange: handleSuggestion,\n          className: query.error ? \"form-control form-control-sm shadow-none error\" : \"form-control form-control-sm shadow-none\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-sm shadow-none\",\n          disabled: props.searchLoading,\n          children: props.searchLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"btn-loader\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 48\n          }, this) : /*#__PURE__*/_jsxDEV(Icon, {\n            icon: search,\n            size: 18\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 85\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: isTyping ? \"suggestion-container\" : \"suggestion-container d-none\",\n      children: result.message ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center py-3\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-danger text-capitalize mb-0\",\n          children: result.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 21\n      }, this) : result.values && result.values.length ? /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: result.values.map((item, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n          onClick: () => {\n            setTyping(false);\n            props.search(item);\n          },\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-capitalize m-0\",\n            children: item\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 37\n          }, this)\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 33\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 25\n      }, this) : null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Index, \"4+U17meG7Y2e32V+wuaVPTQaWkY=\");\n\n_c = Index;\nexport default Index;\n\nvar _c;\n\n$RefreshReg$(_c, \"Index\");","map":{"version":3,"sources":["D:/previous/src/components/search/Index.js"],"names":["React","useState","Icon","search","Index","props","isTyping","setTyping","query","setQuery","value","error","result","setResult","values","message","handleSuggestion","event","target","clear","response","suggestion","results","onSubmit","preventDefault","placeholder","searchLoading","length","map","item","i"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport './style.scss'\nimport Icon from 'react-icons-kit'\nimport { search } from 'react-icons-kit/feather'\n\nconst Index = (props) => {\n    const [isTyping, setTyping] = useState(false)\n    const [query, setQuery] = useState({ value: null, error: false })\n    const [result, setResult] = useState({ values: [], message: null })\n\n    // Handle search suggestion\n    const handleSuggestion = async event => {\n        const value = event.target.value\n        setTyping(true)\n        setQuery({ value: value, error: false })\n\n        if (!value) {\n            setTyping(false)\n            setResult({ values: [], message: null })\n            props.clear()\n        } else {\n            setResult({ values: [], message: \"Searching ...\" })\n        }\n\n        const response = await props.suggestion(value)\n        setResult({ values: response.results, message: response.message })\n    }\n\n    // Submit Form\n    const onSubmit = event => {\n        event.preventDefault()\n        setTyping(false)\n        props.search(query.value)\n    }\n\n    return (\n        <div className=\"search-component\">\n\n            {/* Input form */}\n            <form onSubmit={onSubmit}>\n                <div className=\"input-container\">\n                    <input\n                        type=\"text\"\n                        placeholder={props.placeholder}\n                        onChange={handleSuggestion}\n                        className={query.error ? \"form-control form-control-sm shadow-none error\" : \"form-control form-control-sm shadow-none\"}\n                    />\n\n                    <button type=\"submit\" className=\"btn btn-sm shadow-none\" disabled={props.searchLoading}>\n                        {props.searchLoading ? <div className=\"btn-loader\"></div> : <Icon icon={search} size={18} />}\n                    </button>\n                </div>\n            </form>\n\n            {/* Suggestion container */}\n            <div className={isTyping ? \"suggestion-container\" : \"suggestion-container d-none\"}>\n                {result.message ?\n                    <div className=\"text-center py-3\">\n                        <p className=\"text-danger text-capitalize mb-0\">{result.message}</p>\n                    </div>\n\n                    : result.values && result.values.length ?\n                        <ul>\n                            {result.values.map((item, i) =>\n                                <li\n                                    key={i}\n                                    onClick={() => {\n                                        setTyping(false)\n                                        props.search(item)\n                                    }}\n                                >\n                                    <p className=\"text-capitalize m-0\">{item}</p>\n                                </li>\n                            )}\n                        </ul>\n                        : null\n                }\n            </div>\n        </div>\n    );\n};\n\nexport default Index;\n"]},"metadata":{},"sourceType":"module"}