{"ast":null,"code":"var _jsxFileName = \"D:\\\\previous\\\\src\\\\pages\\\\auth\\\\Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport \"./style.scss\";\nimport jwtDecode from \"jwt-decode\";\nimport { useForm } from \"react-hook-form\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { Images } from \"../../utils/Images\";\nimport { routes } from \"../../routes/Index\";\nimport Requests from \"../../utils/Requests/Index\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Login = () => {\n  _s();\n\n  const history = useHistory();\n  const {\n    register,\n    handleSubmit,\n    errors\n  } = useForm();\n  const [isLogging, setLogging] = useState(false); // Handle redirect\n\n  const handleRedirect = token => {\n    let redirecPath = null;\n    const decode = jwtDecode(token);\n    const permissions = decode.permissions; // Filter permitted routes from given permissions\n\n    if (routes && routes.length) {\n      const isAll = permissions.find(item => item === \"all\");\n\n      if (isAll) {\n        redirecPath = \"/dashboard/\";\n      } else {\n        const permittedRoutes = routes.filter(_ref => {\n          let {\n            name: routeName\n          } = _ref;\n          return permissions.some(x => x === routeName);\n        });\n        const redirec = permittedRoutes[0];\n\n        if (redirec.path) {\n          redirecPath = redirec.path;\n        } else {\n          redirecPath = redirec.child[0].path;\n        }\n      }\n    }\n\n    return redirecPath;\n  };\n\n  useEffect(() => {\n    const token = localStorage.getItem(\"token\");\n\n    if (token) {\n      const path = handleRedirect(token);\n      if (path) return history.push(path);\n    }\n  }, [history]); // Submit Form\n\n  const onSubmit = async data => {\n    console.log(data);\n    setLogging(true);\n    setLogging(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"auth\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-fluid\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-12 col-lg-6 d-none d-lg-block p-0\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"image-container\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"overlay\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex-center flex-column\",\n                children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                  children: \"New Admin panel\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 68,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 69,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-12 col-lg-6 py-3 credential-container\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex-center flex-column\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card border-0\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-center text-lg-left\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"d-lg-none\",\n                  children: /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: Images.Logo,\n                    className: \"img-fluid\",\n                    alt: \"...\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 80,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 79,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n                  className: \"mb-0 mb-lg-4\",\n                  children: \"Login First\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 82,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"d-lg-none mb-4\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 83,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n                onSubmit: handleSubmit(onSubmit),\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"form-group mb-4\",\n                  children: [errors.email && errors.email.message ? /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"text-danger\",\n                    children: errors.email && errors.email.message\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 90,\n                    columnNumber: 23\n                  }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: \"E-mail\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 94,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    name: \"email\",\n                    className: \"form-control shadow-none\",\n                    placeholder: \"Enter e-mail\",\n                    ref: register({\n                      required: \"E-mail is required\",\n                      pattern: {\n                        value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\n                        message: \"Invalid email address\"\n                      }\n                    })\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 97,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 88,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"form-group mb-4\",\n                  children: [errors.password && errors.password.message ? /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"text-danger\",\n                    children: errors.password && errors.password.message\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 115,\n                    columnNumber: 23\n                  }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: \"Password\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 119,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"password\",\n                    name: \"password\",\n                    className: \"form-control shadow-none\",\n                    placeholder: \"Enter password\",\n                    ref: register({\n                      required: \"Please enter password\",\n                      minLength: {\n                        value: 8,\n                        message: \"Minimun length 8 character\"\n                      }\n                    })\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 122,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 113,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"d-flex\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    children: /*#__PURE__*/_jsxDEV(Link, {\n                      to: \"/reset\",\n                      children: \"Forgot password ?\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 139,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 138,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"ml-auto\",\n                    children: /*#__PURE__*/_jsxDEV(\"button\", {\n                      type: \"submit\",\n                      className: \"btn shadow-none\",\n                      disabled: isLogging,\n                      children: isLogging ? /*#__PURE__*/_jsxDEV(\"span\", {\n                        children: \"Logging in...\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 143,\n                        columnNumber: 62\n                      }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n                        children: \"Login\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 143,\n                        columnNumber: 91\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 142,\n                      columnNumber: 24\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 141,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 137,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"yZWrPCf/cSBK5cIm+CNlcHd2Co4=\", false, function () {\n  return [useHistory, useForm];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["D:/previous/src/pages/auth/Login.js"],"names":["React","useEffect","useState","jwtDecode","useForm","Link","useHistory","Images","routes","Requests","Login","history","register","handleSubmit","errors","isLogging","setLogging","handleRedirect","token","redirecPath","decode","permissions","length","isAll","find","item","permittedRoutes","filter","name","routeName","some","x","redirec","path","child","localStorage","getItem","push","onSubmit","data","console","log","Logo","email","message","required","pattern","value","password","minLength"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"./style.scss\";\nimport jwtDecode from \"jwt-decode\";\nimport { useForm } from \"react-hook-form\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { Images } from \"../../utils/Images\";\nimport { routes } from \"../../routes/Index\";\nimport Requests from \"../../utils/Requests/Index\";\n\nconst Login = () => {\n  const history = useHistory();\n  const { register, handleSubmit, errors } = useForm();\n  const [isLogging, setLogging] = useState(false);\n\n  // Handle redirect\n  const handleRedirect = (token) => {\n    let redirecPath = null;\n    const decode = jwtDecode(token);\n    const permissions = decode.permissions;\n\n    // Filter permitted routes from given permissions\n    if (routes && routes.length) {\n      const isAll = permissions.find((item) => item === \"all\");\n\n      if (isAll) {\n        redirecPath = \"/dashboard/\";\n      } else {\n        const permittedRoutes = routes.filter(({ name: routeName }) =>\n          permissions.some((x) => x === routeName)\n        );\n        const redirec = permittedRoutes[0];\n\n        if (redirec.path) {\n          redirecPath = redirec.path;\n        } else {\n          redirecPath = redirec.child[0].path;\n        }\n      }\n    }\n    return redirecPath;\n  };\n\n  useEffect(() => {\n    const token = localStorage.getItem(\"token\");\n    if (token) {\n      const path = handleRedirect(token);\n      if (path) return history.push(path);\n    }\n  }, [history]);\n\n  // Submit Form\n  const onSubmit = async (data) => {\n      console.log(data)\n    setLogging(true);\n\n    setLogging(false);\n  };\n\n  return (\n    <div className=\"auth\">\n      <div className=\"container-fluid\">\n        <div className=\"row\">\n          <div className=\"col-12 col-lg-6 d-none d-lg-block p-0\">\n            <div className=\"image-container\">\n              <div className=\"overlay\">\n                <div className=\"flex-center flex-column\">\n                  {/* <img src={Images.Logo} className=\"img-fluid\" alt=\"...\" /> */}\n                  <h2>New Admin panel</h2>\n                  <p></p>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"col-12 col-lg-6 py-3 credential-container\">\n            <div className=\"flex-center flex-column\">\n              <div className=\"card border-0\">\n                <div className=\"text-center text-lg-left\">\n                  <div className=\"d-lg-none\">\n                    <img src={Images.Logo} className=\"img-fluid\" alt=\"...\" />\n                  </div>\n                  <h3 className=\"mb-0 mb-lg-4\">Login First</h3>\n                  <p className=\"d-lg-none mb-4\"></p>\n                </div>\n\n                <form onSubmit={handleSubmit(onSubmit)}>\n                  {/* E-mail */}\n                  <div className=\"form-group mb-4\">\n                    {errors.email && errors.email.message ? (\n                      <p className=\"text-danger\">\n                        {errors.email && errors.email.message}\n                      </p>\n                    ) : (\n                      <p>E-mail</p>\n                    )}\n\n                    <input\n                      type=\"text\"\n                      name=\"email\"\n                      className=\"form-control shadow-none\"\n                      placeholder=\"Enter e-mail\"\n                      ref={register({\n                        required: \"E-mail is required\",\n                        pattern: {\n                          value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\n                          message: \"Invalid email address\",\n                        },\n                      })}\n                    />\n                  </div>\n\n                  {/* Password */}\n                  <div className=\"form-group mb-4\">\n                    {errors.password && errors.password.message ? (\n                      <p className=\"text-danger\">\n                        {errors.password && errors.password.message}\n                      </p>\n                    ) : (\n                      <p>Password</p>\n                    )}\n\n                    <input\n                      type=\"password\"\n                      name=\"password\"\n                      className=\"form-control shadow-none\"\n                      placeholder=\"Enter password\"\n                      ref={register({\n                        required: \"Please enter password\",\n                        minLength: {\n                          value: 8,\n                          message: \"Minimun length 8 character\",\n                        },\n                      })}\n                    />\n                  </div>\n\n                  <div className=\"d-flex\">\n                    <div>\n                      <Link to=\"/reset\">Forgot password ?</Link>\n                    </div>\n                    <div className=\"ml-auto\">\n                       <button type=\"submit\" className=\"btn shadow-none\" disabled={isLogging}>\n                                                {isLogging ? <span>Logging in...</span> : <span>Login</span>}\n                                            </button>\n                    </div>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}