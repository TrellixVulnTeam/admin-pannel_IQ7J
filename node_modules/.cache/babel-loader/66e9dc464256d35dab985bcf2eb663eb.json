{"ast":null,"code":"import Axios from 'axios';\nimport { api } from '../api';\nimport { toast } from 'react-toastify';\nimport { errorHandeller } from './Error';\nimport 'react-toastify/dist/ReactToastify.css';\ntoast.configure({\n  autoClose: 2000\n}); // Index of items\n\nconst Index = async header => {\n  try {\n    const response = await Axios.get(`${api}options`, header);\n\n    if (response.status === 200) {\n      return response.data;\n    }\n  } catch (error) {\n    if (error) return errorHandeller(error);\n  }\n}; // Category search\n\n\n_c = Index;\n\nconst Category = async (query, header) => {\n  try {\n    const response = await Axios.get(`${api}options/category/${query}`, header);\n    if (response.status === 200) return response.data;\n  } catch (error) {\n    if (error) return errorHandeller(error);\n  }\n}; // Sub-Category search\n\n\n_c2 = Category;\n\nconst SubCategory = async (query, header) => {\n  try {\n    const response = await Axios.get(`${api}options/sub-category/${query}`, header);\n    if (response.status === 200) return response.data;\n  } catch (error) {\n    if (error) return errorHandeller(error);\n  }\n}; // Leaf-Category search\n\n\n_c3 = SubCategory;\n\nconst LeafCategory = async (query, header) => {\n  try {\n    const response = await Axios.get(`${api}options/leaf-category/${query}`, header);\n    if (response.status === 200) return response.data;\n  } catch (error) {\n    if (error) return errorHandeller(error);\n  }\n}; // Brand search\n\n\n_c4 = LeafCategory;\n\nconst Brand = async (query, header) => {\n  try {\n    const response = await Axios.get(`${api}options/brand/${query}`, header);\n    if (response.status === 200) return response.data;\n  } catch (error) {\n    if (error) return errorHandeller(error);\n  }\n}; // Vendor search\n\n\n_c5 = Brand;\n\nconst Vendor = async (query, header) => {\n  try {\n    const response = await Axios.get(`${api}options/vendor/${query}`, header);\n    if (response.status === 200) return response.data;\n  } catch (error) {\n    if (error) return errorHandeller(error);\n  }\n}; // Customer search\n\n\n_c6 = Vendor;\n\nconst Customer = async (query, header) => {\n  try {\n    const response = await Axios.get(`${api}options/customer/${query}`, header);\n    if (response.status === 200) return response.data;\n  } catch (error) {\n    if (error) return errorHandeller(error);\n  }\n}; // Product search\n\n\n_c7 = Customer;\n\nconst Product = async (query, header) => {\n  try {\n    const response = await Axios.get(`${api}options/product/${query}`, header);\n    if (response.status === 200) return response.data;\n  } catch (error) {\n    if (error) return errorHandeller(error);\n  }\n};\n\n_c8 = Product;\nconst Options = {\n  Index,\n  Category,\n  SubCategory,\n  LeafCategory,\n  Brand,\n  Vendor,\n  Customer,\n  Product\n};\nexport default Options;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8;\n\n$RefreshReg$(_c, \"Index\");\n$RefreshReg$(_c2, \"Category\");\n$RefreshReg$(_c3, \"SubCategory\");\n$RefreshReg$(_c4, \"LeafCategory\");\n$RefreshReg$(_c5, \"Brand\");\n$RefreshReg$(_c6, \"Vendor\");\n$RefreshReg$(_c7, \"Customer\");\n$RefreshReg$(_c8, \"Product\");","map":{"version":3,"sources":["D:/previous/src/utils/Requests/Options.js"],"names":["Axios","api","toast","errorHandeller","configure","autoClose","Index","header","response","get","status","data","error","Category","query","SubCategory","LeafCategory","Brand","Vendor","Customer","Product","Options"],"mappings":"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","sourcesContent":["import Axios from 'axios'\nimport { api } from '../api'\nimport { toast } from 'react-toastify'\nimport { errorHandeller } from './Error'\nimport 'react-toastify/dist/ReactToastify.css'\ntoast.configure({ autoClose: 2000 })\n\n// Index of items\nconst Index = async (header) => {\n    try {\n        const response = await Axios.get(`${api}options`, header)\n        if (response.status === 200) {\n            return response.data\n        }\n    } catch (error) {\n        if (error) return errorHandeller(error)\n    }\n}\n\n// Category search\nconst Category = async (query, header) => {\n    try {\n        const response = await Axios.get(`${api}options/category/${query}`, header)\n        if (response.status === 200) return response.data\n    } catch (error) {\n        if (error) return errorHandeller(error)\n    }\n}\n\n// Sub-Category search\nconst SubCategory = async (query, header) => {\n    try {\n        const response = await Axios.get(`${api}options/sub-category/${query}`, header)\n        if (response.status === 200) return response.data\n    } catch (error) {\n        if (error) return errorHandeller(error)\n    }\n}\n\n// Leaf-Category search\nconst LeafCategory = async (query, header) => {\n    try {\n        const response = await Axios.get(`${api}options/leaf-category/${query}`, header)\n        if (response.status === 200) return response.data\n    } catch (error) {\n        if (error) return errorHandeller(error)\n    }\n}\n\n// Brand search\nconst Brand = async (query, header) => {\n    try {\n        const response = await Axios.get(`${api}options/brand/${query}`, header)\n        if (response.status === 200) return response.data\n    } catch (error) {\n        if (error) return errorHandeller(error)\n    }\n}\n\n// Vendor search\nconst Vendor = async (query, header) => {\n    try {\n        const response = await Axios.get(`${api}options/vendor/${query}`, header)\n        if (response.status === 200) return response.data\n    } catch (error) {\n        if (error) return errorHandeller(error)\n    }\n}\n\n// Customer search\nconst Customer = async (query, header) => {\n    try {\n        const response = await Axios.get(`${api}options/customer/${query}`, header)\n        if (response.status === 200) return response.data\n    } catch (error) {\n        if (error) return errorHandeller(error)\n    }\n}\n\n// Product search\nconst Product = async (query, header) => {\n    try {\n        const response = await Axios.get(`${api}options/product/${query}`, header)\n        if (response.status === 200) return response.data\n    } catch (error) {\n        if (error) return errorHandeller(error)\n    }\n}\n\nconst Options = {\n    Index,\n    Category,\n    SubCategory,\n    LeafCategory,\n    Brand,\n    Vendor,\n    Customer,\n    Product\n}\n\nexport default Options"]},"metadata":{},"sourceType":"module"}