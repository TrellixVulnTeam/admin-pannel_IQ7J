{"ast":null,"code":"import _slicedToArray from\"D:/previous/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{useState,useEffect}from'react';// Hook\nexport var useWindowSize=function useWindowSize(){// Initialize state with undefined width/height so server and client renders match\n// Learn more here: https://joshwcomeau.com/react/the-perils-of-rehydration/\nvar _useState=useState({width:undefined,height:undefined}),_useState2=_slicedToArray(_useState,2),windowSize=_useState2[0],setWindowSize=_useState2[1];useEffect(function(){// only execute all the code below in client side\nif(typeof window!=='undefined'){// Handler to call on window resize\nvar handleResize=function handleResize(){// Set window width/height to state\nsetWindowSize({width:window.innerWidth,height:window.innerHeight});};// Add event listener\nwindow.addEventListener(\"resize\",handleResize);// Call handler right away so state gets updated with initial window size\nhandleResize();// Remove event listener on cleanup\nreturn function(){return window.removeEventListener(\"resize\",handleResize);};}},[]);// Empty array ensures that effect is only run on mount\nreturn windowSize;};","map":{"version":3,"sources":["D:/previous/src/components/window/windowSize.js"],"names":["useState","useEffect","useWindowSize","width","undefined","height","windowSize","setWindowSize","window","handleResize","innerWidth","innerHeight","addEventListener","removeEventListener"],"mappings":"iGAAA,OAASA,QAAT,CAAmBC,SAAnB,KAAoC,OAApC,CAEA;AACA,MAAO,IAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,EAAM,CAC/B;AACA;AACA,cAAoCF,QAAQ,CAAC,CACzCG,KAAK,CAAEC,SADkC,CAEzCC,MAAM,CAAED,SAFiC,CAAD,CAA5C,wCAAOE,UAAP,eAAmBC,aAAnB,eAKAN,SAAS,CAAC,UAAM,CACZ;AACA,GAAI,MAAOO,CAAAA,MAAP,GAAkB,WAAtB,CAAmC,CAC/B;AAD+B,GAEtBC,CAAAA,YAFsB,CAE/B,QAASA,CAAAA,YAAT,EAAwB,CACpB;AACAF,aAAa,CAAC,CACVJ,KAAK,CAAEK,MAAM,CAACE,UADJ,CAEVL,MAAM,CAAEG,MAAM,CAACG,WAFL,CAAD,CAAb,CAIH,CAR8B,CAU/B;AACAH,MAAM,CAACI,gBAAP,CAAwB,QAAxB,CAAkCH,YAAlC,EAEA;AACAA,YAAY,GAEZ;AACA,MAAO,kBAAMD,CAAAA,MAAM,CAACK,mBAAP,CAA2B,QAA3B,CAAqCJ,YAArC,CAAN,EAAP,CACH,CACJ,CArBQ,CAqBN,EArBM,CAAT,CAqBQ;AACR,MAAOH,CAAAA,UAAP,CACH,CA/BM","sourcesContent":["import { useState, useEffect } from 'react'\n\n// Hook\nexport const useWindowSize = () => {\n    // Initialize state with undefined width/height so server and client renders match\n    // Learn more here: https://joshwcomeau.com/react/the-perils-of-rehydration/\n    const [windowSize, setWindowSize] = useState({\n        width: undefined,\n        height: undefined,\n    });\n\n    useEffect(() => {\n        // only execute all the code below in client side\n        if (typeof window !== 'undefined') {\n            // Handler to call on window resize\n            function handleResize() {\n                // Set window width/height to state\n                setWindowSize({\n                    width: window.innerWidth,\n                    height: window.innerHeight,\n                });\n            }\n\n            // Add event listener\n            window.addEventListener(\"resize\", handleResize);\n\n            // Call handler right away so state gets updated with initial window size\n            handleResize();\n\n            // Remove event listener on cleanup\n            return () => window.removeEventListener(\"resize\", handleResize);\n        }\n    }, []); // Empty array ensures that effect is only run on mount\n    return windowSize;\n}"]},"metadata":{},"sourceType":"module"}