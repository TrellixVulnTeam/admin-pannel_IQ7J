{"ast":null,"code":"import Axios from 'axios';\nimport { api } from '../api';\nimport { toast } from 'react-toastify';\nimport { errorHandeller } from './Error';\nimport 'react-toastify/dist/ReactToastify.css';\ntoast.configure({\n  autoClose: 2000\n}); // List of products\n\nconst Index = async (query, header) => {\n  try {\n    const response = await Axios.get(`${api}product?${query}`, header);\n    if (response.status === 200) return response.data;\n  } catch (error) {\n    if (error) return errorHandeller(error);\n  }\n}; // Store product\n\n\n_c = Index;\n\nconst Store = async (data, header) => {\n  try {\n    const response = await Axios.post(`${api}product`, data, header);\n\n    if (response.status === 201) {\n      toast.success(response.data.message);\n      return true;\n    }\n  } catch (error) {\n    if (error) return errorHandeller(error);\n  }\n}; // Show specific product\n\n\n_c2 = Store;\n\nconst Show = async (id, header) => {\n  // const response = await Axios.get(`${api}product/${id}`, header)\n  // return response\n  try {\n    const response = await Axios.get(`${api}product/${id}`, header);\n\n    if (response.status === 200) {\n      return response;\n    }\n  } catch (error) {\n    if (error) return errorHandeller(error);\n  }\n}; // Update specific product\n\n\n_c3 = Show;\n\nconst Update = async (id, data, header) => {\n  try {\n    const response = await Axios.put(`${api}product/${id}`, data, header);\n\n    if (response.status === 201) {\n      toast.success(response.data.message);\n      return true;\n    }\n  } catch (error) {\n    if (error) return errorHandeller(error);\n  }\n}; // Update specific product thumbnail\n\n\n_c4 = Update;\n\nconst UpdateThumb = async (id, data, header) => {\n  try {\n    const response = await Axios.put(`${api}product/thumb/update/${id}`, data, header);\n\n    if (response.status === 201) {\n      toast.success(response.data.message);\n      return true;\n    }\n  } catch (error) {\n    if (error) return errorHandeller(error);\n  }\n}; // Add product additional thumbnails\n\n\n_c5 = UpdateThumb;\n\nconst AddThumb = async (id, data, header) => {\n  try {\n    const response = await Axios.put(`${api}product/thumb/additional/${id}`, data, header);\n\n    if (response.status === 201) {\n      toast.success(response.data.message);\n      return true;\n    }\n  } catch (error) {\n    if (error) return errorHandeller(error);\n  }\n}; // Remove product additional thumbnail\n\n\n_c6 = AddThumb;\n\nconst RemoveAdditionalThumb = async (id, data, header) => {\n  try {\n    const response = await Axios.delete(`${api}product/thumb/additional/remove/${data}/${id}`, header);\n\n    if (response.status === 200) {\n      toast.success(response.data.message);\n      return true;\n    }\n  } catch (error) {\n    if (error) return errorHandeller(error);\n  }\n}; // Search product with name or sku\n\n\n_c7 = RemoveAdditionalThumb;\n\nconst Search = async (data, header) => {\n  try {\n    const response = await Axios.get(`${api}product/search/items?query=${data}`, header);\n    if (response.status === 200) return response.data;\n  } catch (error) {\n    if (error) return errorHandeller(error);\n  }\n}; // Update active / deactive\n\n\n_c8 = Search;\n\nconst UpdateStatus = async (id, header) => {\n  try {\n    const response = await Axios.get(`${api}product/active/${id}`, header);\n\n    if (response.status === 201) {\n      toast.success(response.data.message);\n      return true;\n    }\n  } catch (error) {\n    if (error) return errorHandeller(error);\n  }\n}; // Filter Item\n\n\n_c9 = UpdateStatus;\n\nconst FilterItem = async (data, header) => {\n  try {\n    const response = await Axios.post(`${api}product/search/${data.field}`, {\n      query: data.query\n    }, header);\n    if (response.status === 200) return response.data;\n  } catch (error) {\n    if (error) return errorHandeller(error);\n  }\n}; // Filter Products\n\n\n_c10 = FilterItem;\n\nconst FilterProducts = async (data, header) => {\n  try {\n    const response = await Axios.get(`${api}product/filter/${data.value}/${data.field}`, header);\n    if (response.status === 200) return response.data;\n  } catch (error) {\n    if (error) return errorHandeller(error);\n  }\n}; // Upload description images\n\n\n_c11 = FilterProducts;\n\nconst UploadDescImage = async (id, data, header) => {\n  try {\n    const response = await Axios.put(`${api}product/desc-image/${id}`, data, header);\n\n    if (response.status === 201) {\n      toast.success(response.data.message);\n      return true;\n    }\n  } catch (error) {\n    if (error) return errorHandeller(error);\n  }\n}; // Audit specific item\n\n\n_c12 = UploadDescImage;\n\nconst Audit = async (id, header) => {\n  try {\n    const response = await Axios.get(`${api}product/audit/${id}`, header);\n\n    if (response.status === 201) {\n      toast.success(response.data.message);\n      return true;\n    }\n  } catch (error) {\n    if (error) return errorHandeller(error);\n  }\n}; // Change product slug\n\n/* const ChangeSlug = async (id, data, header) => {\n    try {\n        const response = await Axios.put(`${api}product/change-slug/${id}`, data, header)\n        if (response.status === 201) {\n            toast.success(response.data.message)\n            return true\n        }\n    } catch (error) {\n        if (error) return errorHandeller(error)\n    }\n} */\n\n\n_c13 = Audit;\nconst Product = {\n  Index,\n  Show,\n  Store,\n  Update,\n  UpdateThumb,\n  AddThumb,\n  RemoveAdditionalThumb,\n  Search,\n  UpdateStatus,\n  FilterItem,\n  FilterProducts,\n  UploadDescImage,\n  Audit,\n  ChangeSlug\n};\nexport default Product;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11, _c12, _c13;\n\n$RefreshReg$(_c, \"Index\");\n$RefreshReg$(_c2, \"Store\");\n$RefreshReg$(_c3, \"Show\");\n$RefreshReg$(_c4, \"Update\");\n$RefreshReg$(_c5, \"UpdateThumb\");\n$RefreshReg$(_c6, \"AddThumb\");\n$RefreshReg$(_c7, \"RemoveAdditionalThumb\");\n$RefreshReg$(_c8, \"Search\");\n$RefreshReg$(_c9, \"UpdateStatus\");\n$RefreshReg$(_c10, \"FilterItem\");\n$RefreshReg$(_c11, \"FilterProducts\");\n$RefreshReg$(_c12, \"UploadDescImage\");\n$RefreshReg$(_c13, \"Audit\");","map":{"version":3,"sources":["D:/previous/src/utils/Requests/Product.js"],"names":["Axios","api","toast","errorHandeller","configure","autoClose","Index","query","header","response","get","status","data","error","Store","post","success","message","Show","id","Update","put","UpdateThumb","AddThumb","RemoveAdditionalThumb","delete","Search","UpdateStatus","FilterItem","field","FilterProducts","value","UploadDescImage","Audit","Product","ChangeSlug"],"mappings":"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","sourcesContent":["import Axios from 'axios'\nimport { api } from '../api'\nimport { toast } from 'react-toastify'\nimport { errorHandeller } from './Error'\nimport 'react-toastify/dist/ReactToastify.css'\ntoast.configure({ autoClose: 2000 })\n\n// List of products\nconst Index = async (query, header) => {\n    try {\n        const response = await Axios.get(`${api}product?${query}`, header)\n        if (response.status === 200) return response.data\n    } catch (error) {\n        if (error) return errorHandeller(error)\n    }\n}\n\n// Store product\nconst Store = async (data, header) => {\n    try {\n        const response = await Axios.post(`${api}product`, data, header)\n        if (response.status === 201) {\n            toast.success(response.data.message)\n            return true\n        }\n    } catch (error) {\n        if (error) return errorHandeller(error)\n    }\n}\n\n// Show specific product\nconst Show = async (id, header) => {\n    // const response = await Axios.get(`${api}product/${id}`, header)\n    // return response\n\n    try {\n        const response = await Axios.get(`${api}product/${id}`, header)\n        if (response.status === 200) {\n            return response\n        }\n    } catch (error) {\n        if (error) return errorHandeller(error)\n    }\n}\n\n// Update specific product\nconst Update = async (id, data, header) => {\n    try {\n        const response = await Axios.put(`${api}product/${id}`, data, header)\n        if (response.status === 201) {\n            toast.success(response.data.message)\n            return true\n        }\n    } catch (error) {\n        if (error) return errorHandeller(error)\n    }\n}\n\n// Update specific product thumbnail\nconst UpdateThumb = async (id, data, header) => {\n    try {\n        const response = await Axios.put(`${api}product/thumb/update/${id}`, data, header)\n        if (response.status === 201) {\n            toast.success(response.data.message)\n            return true\n        }\n    } catch (error) {\n        if (error) return errorHandeller(error)\n    }\n}\n\n// Add product additional thumbnails\nconst AddThumb = async (id, data, header) => {\n    try {\n        const response = await Axios.put(`${api}product/thumb/additional/${id}`, data, header)\n        if (response.status === 201) {\n            toast.success(response.data.message)\n            return true\n        }\n    } catch (error) {\n        if (error) return errorHandeller(error)\n    }\n}\n\n// Remove product additional thumbnail\nconst RemoveAdditionalThumb = async (id, data, header) => {\n    try {\n        const response = await Axios.delete(`${api}product/thumb/additional/remove/${data}/${id}`, header)\n        if (response.status === 200) {\n            toast.success(response.data.message)\n            return true\n        }\n    } catch (error) {\n        if (error) return errorHandeller(error)\n    }\n}\n\n// Search product with name or sku\nconst Search = async (data, header) => {\n    try {\n        const response = await Axios.get(`${api}product/search/items?query=${data}`, header)\n        if (response.status === 200) return response.data\n    } catch (error) {\n        if (error) return errorHandeller(error)\n    }\n}\n\n// Update active / deactive\nconst UpdateStatus = async (id, header) => {\n    try {\n        const response = await Axios.get(`${api}product/active/${id}`, header)\n        if (response.status === 201) {\n            toast.success(response.data.message)\n            return true\n        }\n    } catch (error) {\n        if (error) return errorHandeller(error)\n    }\n}\n\n// Filter Item\nconst FilterItem = async (data, header) => {\n    try {\n        const response = await Axios.post(`${api}product/search/${data.field}`, { query: data.query }, header)\n        if (response.status === 200) return response.data\n    } catch (error) {\n        if (error) return errorHandeller(error)\n    }\n}\n\n// Filter Products\nconst FilterProducts = async (data, header) => {\n    try {\n        const response = await Axios.get(`${api}product/filter/${data.value}/${data.field}`, header)\n        if (response.status === 200) return response.data\n    } catch (error) {\n        if (error) return errorHandeller(error)\n    }\n}\n\n// Upload description images\nconst UploadDescImage = async (id, data, header) => {\n    try {\n        const response = await Axios.put(`${api}product/desc-image/${id}`, data, header)\n        if (response.status === 201) {\n            toast.success(response.data.message)\n            return true\n        }\n    } catch (error) {\n        if (error) return errorHandeller(error)\n    }\n}\n\n// Audit specific item\nconst Audit = async (id, header) => {\n    try {\n        const response = await Axios.get(`${api}product/audit/${id}`, header)\n        if (response.status === 201) {\n            toast.success(response.data.message)\n            return true\n        }\n    } catch (error) {\n        if (error) return errorHandeller(error)\n    }\n}\n\n// Change product slug\n/* const ChangeSlug = async (id, data, header) => {\n    try {\n        const response = await Axios.put(`${api}product/change-slug/${id}`, data, header)\n        if (response.status === 201) {\n            toast.success(response.data.message)\n            return true\n        }\n    } catch (error) {\n        if (error) return errorHandeller(error)\n    }\n} */\n\n\nconst Product = {\n    Index,\n    Show,\n    Store,\n    Update,\n    UpdateThumb,\n    AddThumb,\n    RemoveAdditionalThumb,\n    Search,\n    UpdateStatus,\n    FilterItem,\n    FilterProducts,\n    UploadDescImage,\n    Audit,\n    ChangeSlug\n}\n\nexport default Product"]},"metadata":{},"sourceType":"module"}