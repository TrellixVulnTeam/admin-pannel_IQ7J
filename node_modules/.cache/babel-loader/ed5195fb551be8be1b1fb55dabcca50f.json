{"ast":null,"code":"import Axios from 'axios';\nimport { api } from '../api';\nimport { toast } from 'react-toastify';\nimport { errorHandeller } from './Error';\nimport 'react-toastify/dist/ReactToastify.css';\ntoast.configure({\n  autoClose: 2000\n}); // Index of items\n\nconst Index = async header => {\n  try {\n    const response = await Axios.get(`${api}banner`, header);\n    if (response.status === 200) return response.data;\n  } catch (error) {\n    if (error) return errorHandeller(error);\n  }\n}; // Store item\n\n\n_c = Index;\n\nconst Store = async (data, header) => {\n  try {\n    const response = await Axios.post(`${api}banner`, data, header);\n\n    if (response.status === 201) {\n      toast.success(response.data.message);\n      return true;\n    }\n  } catch (error) {\n    if (error) {\n      console.log(error.response);\n      return errorHandeller(error);\n    }\n  }\n}; // Show specific item\n\n\n_c2 = Store;\n\nconst Show = async (id, header) => {\n  try {\n    const response = await Axios.get(`${api}banner/${id}`, header);\n    if (response.status === 200) return response.data;\n  } catch (error) {\n    if (error) return errorHandeller(error);\n  }\n}; // Update specific item\n\n\n_c3 = Show;\n\nconst Update = async (id, data, header) => {\n  try {\n    const response = await Axios.put(`${api}banner/${id}`, data, header);\n\n    if (response.status === 201) {\n      toast.success(response.data.message);\n      return true;\n    }\n  } catch (error) {\n    if (error) return errorHandeller(error);\n  }\n}; // Delete item\n\n\n_c4 = Update;\n\nconst Delete = async (id, header) => {\n  try {\n    const response = await Axios.delete(`${api}banner/${id}`, header);\n\n    if (response.status === 200) {\n      toast.success(response.data.message);\n      return true;\n    }\n  } catch (error) {\n    if (error) return errorHandeller(error);\n  }\n};\n\n_c5 = Delete;\nconst Banner = {\n  Index,\n  Store,\n  Show,\n  Update,\n  Delete\n};\nexport default Banner;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"Index\");\n$RefreshReg$(_c2, \"Store\");\n$RefreshReg$(_c3, \"Show\");\n$RefreshReg$(_c4, \"Update\");\n$RefreshReg$(_c5, \"Delete\");","map":{"version":3,"sources":["D:/previous/src/utils/Requests/Banner.js"],"names":["Axios","api","toast","errorHandeller","configure","autoClose","Index","header","response","get","status","data","error","Store","post","success","message","console","log","Show","id","Update","put","Delete","delete","Banner"],"mappings":"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","sourcesContent":["import Axios from 'axios'\nimport { api } from '../api'\nimport { toast } from 'react-toastify'\nimport { errorHandeller } from './Error'\nimport 'react-toastify/dist/ReactToastify.css'\ntoast.configure({ autoClose: 2000 })\n\n// Index of items\nconst Index = async (header) => {\n    try {\n        const response = await Axios.get(`${api}banner`, header)\n        if (response.status === 200) return response.data\n    } catch (error) {\n        if (error) return errorHandeller(error)\n    }\n}\n\n// Store item\nconst Store = async (data, header) => {\n    try {\n        const response = await Axios.post(`${api}banner`, data, header)\n        if (response.status === 201) {\n            toast.success(response.data.message)\n            return true\n        }\n    } catch (error) {\n        if (error) {\n            console.log(error.response)\n            return errorHandeller(error)\n        }\n    }\n}\n\n// Show specific item\nconst Show = async (id, header) => {\n    try {\n        const response = await Axios.get(`${api}banner/${id}`, header)\n        if (response.status === 200) return response.data\n    } catch (error) {\n        if (error) return errorHandeller(error)\n    }\n}\n\n// Update specific item\nconst Update = async (id, data, header) => {\n    try {\n        const response = await Axios.put(`${api}banner/${id}`, data, header)\n        if (response.status === 201) {\n            toast.success(response.data.message)\n            return true\n        }\n    } catch (error) {\n        if (error) return errorHandeller(error)\n    }\n}\n\n// Delete item\nconst Delete = async (id, header) => {\n    try {\n        const response = await Axios.delete(`${api}banner/${id}`, header)\n        if (response.status === 200) {\n            toast.success(response.data.message)\n            return true\n        }\n    } catch (error) {\n        if (error) return errorHandeller(error)\n    }\n}\n\nconst Banner = {\n    Index,\n    Store,\n    Show,\n    Update,\n    Delete\n}\n\nexport default Banner"]},"metadata":{},"sourceType":"module"}