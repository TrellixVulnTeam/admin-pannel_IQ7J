{"ast":null,"code":"var _jsxFileName = \"D:\\\\previous\\\\src\\\\pages\\\\university\\\\post\\\\Edit.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useCallback } from 'react';\nimport 'react-quill/dist/quill.snow.css';\nimport Icon from 'react-icons-kit';\nimport ReactQuill from 'react-quill';\nimport { useForm } from 'react-hook-form';\nimport { Link, useParams } from 'react-router-dom';\nimport { chevronLeft, edit2 } from 'react-icons-kit/feather';\nimport { Container } from '../../../components/container';\nimport { Card } from '../../../components/card/Index';\nimport { CustomButton } from '../../../components/button';\nimport { ImageCard } from '../../../components/image/imageCard';\nimport { FileUploaderModal } from '../../../components/fileUploader/Index';\nimport { SearchableSelect } from '../../../components/select';\nimport { PreLoader } from '../../../components/loading/Index';\nimport Requests from '../../../utils/Requests/Index';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CategoryEdit = () => {\n  _s();\n\n  const {\n    register,\n    handleSubmit,\n    errors\n  } = useForm();\n  const {\n    id\n  } = useParams();\n  const [post, setPost] = useState(null);\n  const [text, setText] = useState(null);\n  const [category, setCategory] = useState({\n    value: null,\n    error: false\n  });\n  const [image, setImage] = useState({\n    value: null,\n    show: false\n  });\n  const [isLoading, setLoading] = useState(true);\n  const [isUpdate, setUpdate] = useState({\n    form: false,\n    image: false\n  });\n  const [header] = useState({\n    headers: {\n      Authorization: \"Bearer \" + localStorage.getItem('token')\n    }\n  });\n  const modules = {\n    toolbar: [[{\n      'header': [1, 2, false]\n    }], ['bold', 'italic', 'underline', 'strike', 'blockquote'], [{\n      'list': 'ordered'\n    }, {\n      'list': 'bullet'\n    }, {\n      'indent': '-1'\n    }, {\n      'indent': '+1'\n    }], ['link'], ['clean']]\n  };\n  const formats = ['header', 'bold', 'italic', 'underline', 'strike', 'blockquote', 'list', 'bullet', 'indent', 'link']; // Fetch data\n\n  const fetchData = useCallback(async () => {\n    const response = await Requests.University.PostShow(id, header);\n\n    if (response) {\n      setPost(response.data);\n      setText(response.data.description);\n      setCategory(exCat => ({ ...exCat,\n        value: response.data.category\n      }));\n    }\n\n    setLoading(false);\n  }, [id, header]);\n  useEffect(() => {\n    fetchData();\n  }, [id, header, fetchData]); // Handle search category\n\n  const handleSearchCategory = async inputValue => {\n    let results = [];\n    const response = await Requests.University.CategorySearch(inputValue, header);\n\n    if (response.data && response.data.length) {\n      for (let i = 0; i < response.data.length; i++) {\n        const element = response.data[i];\n        results.push({\n          value: element._id,\n          label: element.name\n        });\n      }\n    }\n\n    return results;\n  }; // handle image update\n\n\n  const handleImageUpdate = async file => {\n    let formData = new FormData();\n    formData.append(\"image\", file);\n    setUpdate({ ...isUpdate,\n      image: true\n    });\n    await Requests.University.UpdatePostImage(id, formData, header);\n    setImage({ ...image,\n      value: URL.createObjectURL(file)\n    });\n    setUpdate({ ...isUpdate,\n      image: false\n    });\n  }; // Submit Form\n\n\n  const onSubmit = async data => {\n    try {\n      if (!category.value) return setCategory({ ...category,\n        error: \"Category is required.\"\n      });\n      setUpdate({\n        form: true,\n        image: false\n      });\n      const formData = { ...data,\n        category: post.category._id,\n        text: text\n      };\n      await Requests.University.PostUpdate(id, formData, header);\n      setUpdate({\n        form: false,\n        image: false\n      });\n    } catch (error) {\n      if (error) console.log(error);\n    }\n  };\n\n  if (isLoading) return /*#__PURE__*/_jsxDEV(PreLoader, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 27\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"pb-4\",\n    children: [/*#__PURE__*/_jsxDEV(Container.Fluid, {\n      children: /*#__PURE__*/_jsxDEV(Container.Row, {\n        children: /*#__PURE__*/_jsxDEV(Container.Column, {\n          className: \"col-padding\",\n          children: /*#__PURE__*/_jsxDEV(Card.Simple, {\n            className: \"bg-white border-0\",\n            children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n              className: \"bg-white border-0 p-3 p-lg-4\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"d-flex\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  children: /*#__PURE__*/_jsxDEV(\"h6\", {\n                    className: \"mb-0\",\n                    children: \"Edit Post\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 123,\n                    columnNumber: 42\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 123,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"ml-auto\",\n                  children: /*#__PURE__*/_jsxDEV(Link, {\n                    to: \"/dashboard/university/post\",\n                    children: /*#__PURE__*/_jsxDEV(CustomButton, {\n                      className: \"btn-primary border-0 rounded-circle circle__padding\",\n                      children: /*#__PURE__*/_jsxDEV(Icon, {\n                        icon: chevronLeft,\n                        size: 22\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 127,\n                        columnNumber: 49\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 126,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 125,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 124,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n              className: \"px-4 pt-0\",\n              children: /*#__PURE__*/_jsxDEV(\"form\", {\n                onSubmit: handleSubmit(onSubmit),\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"form-group mb-4\",\n                  children: [errors.title && errors.title.message ? /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"text-danger\",\n                    children: errors.title && errors.title.message\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 139,\n                    columnNumber: 45\n                  }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: \"Title\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 140,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    name: \"title\",\n                    className: \"form-control shadow-none\",\n                    placeholder: \"Enter post title\",\n                    defaultValue: post.title,\n                    ref: register({\n                      required: \"Title is required\"\n                    })\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 142,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 137,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"form-group mb-4\",\n                  children: [category.error ? /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"text-danger\",\n                    children: category.error\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 154,\n                    columnNumber: 59\n                  }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: \"Category\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 154,\n                    columnNumber: 109\n                  }, this), /*#__PURE__*/_jsxDEV(SearchableSelect, {\n                    borderRadius: 4,\n                    placeholder: \"Select category\",\n                    defaultValue: {\n                      label: post.category.name,\n                      value: post.category._id\n                    },\n                    search: inputValue => handleSearchCategory(inputValue),\n                    values: event => setCategory({ ...category,\n                      value: event.value,\n                      error: false\n                    })\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 156,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 153,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"form-group mb-4\",\n                  children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                    children: \"Video\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 167,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    name: \"video\",\n                    className: \"form-control shadow-none\",\n                    placeholder: \"Enter video link\",\n                    defaultValue: post.video,\n                    ref: register()\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 169,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 166,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"form-group mb-4\",\n                  children: /*#__PURE__*/_jsxDEV(ImageCard, {\n                    width: 200,\n                    height: 100,\n                    imgSrc: image.value || post.image,\n                    imgAlt: \"...\",\n                    actionBtn: true,\n                    btnType: \"edit-btn\",\n                    btnIcon: /*#__PURE__*/_jsxDEV(Icon, {\n                      icon: edit2,\n                      size: 20\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 188,\n                      columnNumber: 54\n                    }, this),\n                    onClick: () => setImage({ ...image,\n                      show: true\n                    })\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 181,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 180,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"form-group mb-4\",\n                  children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                    children: \"Description\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 195,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(ReactQuill, {\n                    theme: \"snow\",\n                    value: text,\n                    modules: modules,\n                    formats: formats,\n                    onChange: value => setText(value)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 196,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 194,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text-right\",\n                  children: /*#__PURE__*/_jsxDEV(CustomButton, {\n                    type: \"submit\",\n                    className: \"btn btn-success border-0 shadow-none\",\n                    disabled: isUpdate.form,\n                    children: isUpdate.form ? 'Updating ...' : 'Update'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 206,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 205,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FileUploaderModal, {\n      show: image.show,\n      loading: isUpdate.image,\n      title: \"Change Post Image\",\n      onHide: () => setImage({ ...image,\n        show: false\n      }),\n      upload: file => handleImageUpdate(file)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CategoryEdit, \"sWLG+GeHgODBXP2uCCfFJrCpx+o=\", false, function () {\n  return [useForm, useParams];\n});\n\n_c = CategoryEdit;\nexport default CategoryEdit;\n\nvar _c;\n\n$RefreshReg$(_c, \"CategoryEdit\");","map":{"version":3,"sources":["D:/previous/src/pages/university/post/Edit.js"],"names":["React","useState","useEffect","useCallback","Icon","ReactQuill","useForm","Link","useParams","chevronLeft","edit2","Container","Card","CustomButton","ImageCard","FileUploaderModal","SearchableSelect","PreLoader","Requests","CategoryEdit","register","handleSubmit","errors","id","post","setPost","text","setText","category","setCategory","value","error","image","setImage","show","isLoading","setLoading","isUpdate","setUpdate","form","header","headers","Authorization","localStorage","getItem","modules","toolbar","formats","fetchData","response","University","PostShow","data","description","exCat","handleSearchCategory","inputValue","results","CategorySearch","length","i","element","push","_id","label","name","handleImageUpdate","file","formData","FormData","append","UpdatePostImage","URL","createObjectURL","onSubmit","PostUpdate","console","log","title","message","required","event","video"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useCallback } from 'react'\nimport 'react-quill/dist/quill.snow.css'\nimport Icon from 'react-icons-kit'\nimport ReactQuill from 'react-quill'\nimport { useForm } from 'react-hook-form'\nimport { Link, useParams } from 'react-router-dom'\nimport { chevronLeft, edit2 } from 'react-icons-kit/feather'\nimport { Container } from '../../../components/container'\nimport { Card } from '../../../components/card/Index'\nimport { CustomButton } from '../../../components/button'\nimport { ImageCard } from '../../../components/image/imageCard'\nimport { FileUploaderModal } from '../../../components/fileUploader/Index'\nimport { SearchableSelect } from '../../../components/select'\nimport { PreLoader } from '../../../components/loading/Index'\nimport Requests from '../../../utils/Requests/Index'\n\n\n\nconst CategoryEdit = () => {\n    const { register, handleSubmit, errors } = useForm()\n    const { id } = useParams()\n    const [post, setPost] = useState(null)\n    const [text, setText] = useState(null)\n    const [category, setCategory] = useState({ value: null, error: false })\n    const [image, setImage] = useState({ value: null, show: false })\n\n    const [isLoading, setLoading] = useState(true)\n    const [isUpdate, setUpdate] = useState({ form: false, image: false })\n    const [header] = useState({\n        headers: { Authorization: \"Bearer \" + localStorage.getItem('token') }\n    })\n\n    const modules = {\n        toolbar: [\n            [{ 'header': [1, 2, false] }],\n            ['bold', 'italic', 'underline', 'strike', 'blockquote'],\n            [{ 'list': 'ordered' }, { 'list': 'bullet' }, { 'indent': '-1' }, { 'indent': '+1' }],\n            ['link'],\n            ['clean']\n        ],\n    }\n\n    const formats = [\n        'header',\n        'bold', 'italic', 'underline', 'strike', 'blockquote',\n        'list', 'bullet', 'indent',\n        'link'\n    ]\n\n    // Fetch data\n    const fetchData = useCallback(async () => {\n        const response = await Requests.University.PostShow(id, header)\n        if (response) {\n            setPost(response.data)\n            setText(response.data.description)\n            setCategory(exCat => ({ ...exCat, value: response.data.category }))\n        }\n        setLoading(false)\n    }, [id, header])\n\n    useEffect(() => {\n        fetchData()\n    }, [id, header, fetchData])\n\n    // Handle search category\n    const handleSearchCategory = async (inputValue) => {\n        let results = []\n        const response = await Requests.University.CategorySearch(inputValue, header)\n\n        if (response.data && response.data.length) {\n            for (let i = 0; i < response.data.length; i++) {\n                const element = response.data[i]\n                results.push({\n                    value: element._id,\n                    label: element.name\n                })\n            }\n        }\n\n        return results\n    }\n\n    // handle image update\n    const handleImageUpdate = async (file) => {\n        let formData = new FormData()\n        formData.append(\"image\", file)\n        setUpdate({ ...isUpdate, image: true })\n\n        await Requests.University.UpdatePostImage(id, formData, header)\n        setImage({ ...image, value: URL.createObjectURL(file) })\n        setUpdate({ ...isUpdate, image: false })\n    }\n\n    // Submit Form\n    const onSubmit = async (data) => {\n        try {\n            if (!category.value) return setCategory({ ...category, error: \"Category is required.\" })\n\n            setUpdate({ form: true, image: false })\n            const formData = {\n                ...data,\n                category: post.category._id,\n                text: text\n            }\n\n            await Requests.University.PostUpdate(id, formData, header)\n            setUpdate({ form: false, image: false })\n        } catch (error) {\n            if (error) console.log(error)\n        }\n    }\n\n    if (isLoading) return <PreLoader />\n\n    return (\n        <div className=\"pb-4\">\n            <Container.Fluid>\n                <Container.Row>\n                    <Container.Column className=\"col-padding\">\n                        <Card.Simple className=\"bg-white border-0\">\n                            <Card.Header className=\"bg-white border-0 p-3 p-lg-4\">\n                                <div className=\"d-flex\">\n                                    <div><h6 className=\"mb-0\">Edit Post</h6></div>\n                                    <div className=\"ml-auto\">\n                                        <Link to=\"/dashboard/university/post\">\n                                            <CustomButton className=\"btn-primary border-0 rounded-circle circle__padding\">\n                                                <Icon icon={chevronLeft} size={22} />\n                                            </CustomButton>\n                                        </Link>\n                                    </div>\n                                </div>\n                            </Card.Header>\n                            <Card.Body className=\"px-4 pt-0\">\n                                <form onSubmit={handleSubmit(onSubmit)}>\n\n                                    {/* Title */}\n                                    <div className=\"form-group mb-4\">\n                                        {errors.title && errors.title.message ? (\n                                            <p className=\"text-danger\">{errors.title && errors.title.message}</p>\n                                        ) : <p>Title</p>}\n\n                                        <input\n                                            type=\"text\"\n                                            name=\"title\"\n                                            className=\"form-control shadow-none\"\n                                            placeholder=\"Enter post title\"\n                                            defaultValue={post.title}\n                                            ref={register({ required: \"Title is required\" })}\n                                        />\n                                    </div>\n\n                                    {/* Category */}\n                                    <div className=\"form-group mb-4\">\n                                        {category.error ? <p className=\"text-danger\">{category.error}</p> : <p>Category</p>}\n\n                                        <SearchableSelect\n                                            borderRadius={4}\n                                            placeholder=\"Select category\"\n                                            defaultValue={{ label: post.category.name, value: post.category._id }}\n                                            search={inputValue => handleSearchCategory(inputValue)}\n                                            values={(event) => setCategory({ ...category, value: event.value, error: false })}\n                                        />\n                                    </div>\n\n                                    {/* Video */}\n                                    <div className=\"form-group mb-4\">\n                                        <p>Video</p>\n\n                                        <input\n                                            type=\"text\"\n                                            name=\"video\"\n                                            className=\"form-control shadow-none\"\n                                            placeholder=\"Enter video link\"\n                                            defaultValue={post.video}\n                                            ref={register()}\n                                        />\n                                    </div>\n\n                                    {/* File upload */}\n                                    <div className=\"form-group mb-4\">\n                                        <ImageCard\n                                            width={200}\n                                            height={100}\n                                            imgSrc={image.value || post.image}\n                                            imgAlt={\"...\"}\n                                            actionBtn\n                                            btnType=\"edit-btn\"\n                                            btnIcon={<Icon icon={edit2} size={20} />}\n                                            onClick={() => setImage({ ...image, show: true })}\n                                        />\n                                    </div>\n\n                                    {/* Description */}\n                                    <div className=\"form-group mb-4\">\n                                        <p>Description</p>\n                                        <ReactQuill\n                                            theme=\"snow\"\n                                            value={text}\n                                            modules={modules}\n                                            formats={formats}\n                                            onChange={value => setText(value)}\n                                        />\n                                    </div>\n\n                                    <div className=\"text-right\">\n                                        <CustomButton\n                                            type=\"submit\"\n                                            className=\"btn btn-success border-0 shadow-none\"\n                                            disabled={isUpdate.form}\n                                        >{isUpdate.form ? 'Updating ...' : 'Update'}</CustomButton>\n                                    </div>\n                                </form>\n                            </Card.Body>\n                        </Card.Simple>\n                    </Container.Column>\n                </Container.Row>\n            </Container.Fluid>\n\n            {/* Image uploader modal*/}\n            <FileUploaderModal\n                show={image.show}\n                loading={isUpdate.image}\n                title=\"Change Post Image\"\n                onHide={() => setImage({ ...image, show: false })}\n                upload={file => handleImageUpdate(file)}\n            />\n        </div>\n    );\n}\n\nexport default CategoryEdit;\n"]},"metadata":{},"sourceType":"module"}