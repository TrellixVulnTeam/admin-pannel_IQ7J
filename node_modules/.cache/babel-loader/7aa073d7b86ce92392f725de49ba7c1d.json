{"ast":null,"code":"import Axios from 'axios';\nimport { api } from '../api';\nimport { toast } from 'react-toastify';\nimport { errorHandeller } from './Error';\nimport 'react-toastify/dist/ReactToastify.css';\ntoast.configure({\n  autoClose: 2000\n}); // List of Campaign\n\nconst Index = async (page, limit, header) => {\n  try {\n    const response = await Axios.get(`${api}campaign?page=${page}&limit=${limit}`, header);\n    if (response.status === 200) return response.data;\n  } catch (error) {\n    if (error) return errorHandeller(error);\n  }\n}; // Store Campaign \n\n\n_c = Index;\n\nconst Store = async (data, header) => {\n  try {\n    const response = await Axios.post(`${api}campaign`, data, header);\n\n    if (response.status === 201) {\n      toast.success(response.data.message);\n      return true;\n    }\n  } catch (error) {\n    if (error) return errorHandeller(error);\n  }\n}; // Show specific campaign\n\n\n_c2 = Store;\n\nconst Show = async (id, header) => {\n  try {\n    const response = await Axios.get(`${api}campaign/${id}`, header);\n\n    if (response.status === 200) {\n      return response.data.campaign;\n    }\n  } catch (error) {\n    if (error) return errorHandeller(error);\n  }\n}; // Update specific campaign\n\n\n_c3 = Show;\n\nconst Update = async (id, data, header) => {\n  try {\n    const response = await Axios.put(`${api}campaign/${id}`, data, header);\n\n    if (response.status === 201) {\n      toast.success(response.data.message);\n      return true;\n    }\n  } catch (error) {\n    if (error) return errorHandeller(error);\n  }\n}; // Update SM banner\n\n\n_c4 = Update;\n\nconst UpdateSmBanner = async (id, data, header) => {\n  try {\n    const response = await Axios.put(`${api}campaign/sm/banner/${id}`, data, header);\n\n    if (response.status === 201) {\n      toast.success(response.data.message);\n      return true;\n    }\n  } catch (error) {\n    if (error) return errorHandeller(error);\n  }\n}; // Update LG banner\n\n\n_c5 = UpdateSmBanner;\n\nconst UpdateLgBanner = async (id, data, header) => {\n  try {\n    const response = await Axios.put(`${api}campaign/lg/banner/${id}`, data, header);\n\n    if (response.status === 201) {\n      toast.success(response.data.message);\n      return true;\n    }\n  } catch (error) {\n    if (error) return errorHandeller(error);\n  }\n}; // Delete Campaign \n\n\n_c6 = UpdateLgBanner;\n\nconst Delete = async (id, header) => {\n  try {\n    const response = await Axios.delete(`${api}campaign/${id}`, header);\n\n    if (response.status === 200) {\n      toast.success(response.data.message);\n      return true;\n    }\n  } catch (error) {\n    if (error) return errorHandeller(error);\n  }\n}; // Search item\n\n\n_c7 = Delete;\n\nconst Search = async (data, header) => {\n  try {\n    const response = await Axios.get(`${api}campaign/search/items?query=${data}`, header);\n    if (response.status === 200) return response.data;\n  } catch (error) {\n    if (error) return errorHandeller(error);\n  }\n}; // Filter by date\n\n\n_c8 = Search;\n\nconst FilterByDateRange = async (data, header) => {\n  try {\n    const response = await Axios.post(`${api}campaign/date-range-filter`, data, header);\n    if (response.status === 200) return response.data;\n  } catch (error) {\n    if (error) return errorHandeller(error);\n  }\n}; // Filter by assign\n\n\n_c9 = FilterByDateRange;\n\nconst FilterByAssign = async (data, header) => {\n  try {\n    const response = await Axios.post(`${api}campaign/filter-by-assign`, data, header);\n    if (response.status === 200) return response.data;\n  } catch (error) {\n    if (error) return errorHandeller(error);\n  }\n};\n\n_c10 = FilterByAssign;\nconst Campaign = {\n  Index,\n  Store,\n  Show,\n  Update,\n  UpdateSmBanner,\n  UpdateLgBanner,\n  Delete,\n  Search,\n  FilterByDateRange,\n  FilterByAssign\n};\nexport default Campaign;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10;\n\n$RefreshReg$(_c, \"Index\");\n$RefreshReg$(_c2, \"Store\");\n$RefreshReg$(_c3, \"Show\");\n$RefreshReg$(_c4, \"Update\");\n$RefreshReg$(_c5, \"UpdateSmBanner\");\n$RefreshReg$(_c6, \"UpdateLgBanner\");\n$RefreshReg$(_c7, \"Delete\");\n$RefreshReg$(_c8, \"Search\");\n$RefreshReg$(_c9, \"FilterByDateRange\");\n$RefreshReg$(_c10, \"FilterByAssign\");","map":{"version":3,"sources":["D:/previous/src/utils/Requests/Campaign.js"],"names":["Axios","api","toast","errorHandeller","configure","autoClose","Index","page","limit","header","response","get","status","data","error","Store","post","success","message","Show","id","campaign","Update","put","UpdateSmBanner","UpdateLgBanner","Delete","delete","Search","FilterByDateRange","FilterByAssign","Campaign"],"mappings":"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","sourcesContent":["import Axios from 'axios'\nimport { api } from '../api'\nimport { toast } from 'react-toastify'\nimport { errorHandeller } from './Error'\nimport 'react-toastify/dist/ReactToastify.css'\ntoast.configure({ autoClose: 2000 })\n\n// List of Campaign\nconst Index = async (page, limit, header) => {\n    try {\n        const response = await Axios.get(`${api}campaign?page=${page}&limit=${limit}`, header)\n        if (response.status === 200) return response.data\n    } catch (error) {\n        if (error) return errorHandeller(error)\n    }\n}\n\n// Store Campaign \nconst Store = async (data, header) => {\n    try {\n        const response = await Axios.post(`${api}campaign`, data, header)\n        if (response.status === 201) {\n            toast.success(response.data.message)\n            return true\n        }\n    } catch (error) {\n        if (error) return errorHandeller(error)\n    }\n}\n\n// Show specific campaign\nconst Show = async (id, header) => {\n    try {\n        const response = await Axios.get(`${api}campaign/${id}`, header)\n        if (response.status === 200) {\n            return response.data.campaign\n        }\n    } catch (error) {\n        if (error) return errorHandeller(error)\n    }\n}\n\n// Update specific campaign\nconst Update = async (id, data, header) => {\n    try {\n        const response = await Axios.put(`${api}campaign/${id}`, data, header)\n        if (response.status === 201) {\n            toast.success(response.data.message)\n            return true\n        }\n    } catch (error) {\n        if (error) return errorHandeller(error)\n    }\n}\n\n// Update SM banner\nconst UpdateSmBanner = async (id, data, header) => {\n    try {\n        const response = await Axios.put(`${api}campaign/sm/banner/${id}`, data, header)\n        if (response.status === 201) {\n            toast.success(response.data.message)\n            return true\n        }\n    } catch (error) {\n        if (error) return errorHandeller(error)\n    }\n}\n\n// Update LG banner\nconst UpdateLgBanner = async (id, data, header) => {\n    try {\n        const response = await Axios.put(`${api}campaign/lg/banner/${id}`, data, header)\n        if (response.status === 201) {\n            toast.success(response.data.message)\n            return true\n        }\n    } catch (error) {\n        if (error) return errorHandeller(error)\n    }\n}\n\n// Delete Campaign \nconst Delete = async (id, header) => {\n    try {\n        const response = await Axios.delete(`${api}campaign/${id}`, header)\n        if (response.status === 200) {\n            toast.success(response.data.message)\n            return true\n        }\n    } catch (error) {\n        if (error) return errorHandeller(error)\n    }\n}\n\n// Search item\nconst Search = async (data, header) => {\n    try {\n        const response = await Axios.get(`${api}campaign/search/items?query=${data}`, header)\n        if (response.status === 200) return response.data\n    } catch (error) {\n        if (error) return errorHandeller(error)\n    }\n}\n\n// Filter by date\nconst FilterByDateRange = async (data, header) => {\n    try {\n        const response = await Axios.post(`${api}campaign/date-range-filter`, data, header)\n        if (response.status === 200) return response.data\n    } catch (error) {\n        if (error) return errorHandeller(error)\n    }\n}\n\n// Filter by assign\nconst FilterByAssign = async (data, header) => {\n    try {\n        const response = await Axios.post(`${api}campaign/filter-by-assign`, data, header)\n        if (response.status === 200) return response.data\n    } catch (error) {\n        if (error) return errorHandeller(error)\n    }\n}\n\nconst Campaign = {\n    Index,\n    Store,\n    Show,\n    Update,\n    UpdateSmBanner,\n    UpdateLgBanner,\n    Delete,\n    Search,\n    FilterByDateRange,\n    FilterByAssign\n}\n\nexport default Campaign"]},"metadata":{},"sourceType":"module"}