{"ast":null,"code":"var _jsxFileName = \"D:\\\\previous\\\\src\\\\pages\\\\reports\\\\bestSales\\\\Index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useEffect, useState } from 'react';\nimport './style.scss';\nimport Icon from 'react-icons-kit';\nimport { x } from 'react-icons-kit/feather';\nimport { Link } from 'react-router-dom';\nimport { DataTable } from '../../../components/table/Index';\nimport { RangeFilter } from '../../../components/rangeFilter/Index';\nimport { Container } from '../../../components/container';\nimport { Card } from '../../../components/card/Index';\nimport { SearchableSelect } from '../../../components/select';\nimport { CustomButton } from '../../../components/button';\nimport Requests from '../../../utils/Requests/Index';\nimport ExportCSV from '../../../components/exportCSV/Index';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Index = () => {\n  _s();\n\n  const [isFilter, setFilter] = useState(false);\n  const [isLoading, setLoading] = useState(true);\n  const [limit, setLimit] = useState(10);\n  const [totalItems, setTotalItems] = useState(0);\n  const [data, setData] = useState([]);\n  const [sheetData, setSheetData] = useState([]);\n  const [closeFilter, setCloseFilter] = useState(false);\n  const [header] = useState({\n    headers: {\n      Authorization: \"Bearer \" + localStorage.getItem('token')\n    }\n  }); // Fetch data\n\n  const fetchData = useCallback(async page => {\n    setLoading(true);\n    const response = await Requests.BestSale.Index(page, limit, header);\n\n    if (response) {\n      let xlsxData = [];\n      setData(response.data);\n      setTotalItems(response.pagination ? response.pagination.items : 0);\n\n      if (response.data && response.data.length) {\n        for (let i = 0; i < response.data.length; i++) {\n          const element = response.data[i];\n          xlsxData.push({\n            name: element.name,\n            sku: element.sku,\n            sales_time: element.salesTime,\n            sales_quantity: element.salesQuantity\n          });\n        }\n\n        setSheetData(xlsxData);\n      }\n    }\n\n    setLoading(false);\n  }, [limit, header]);\n  useEffect(() => {\n    fetchData(1);\n  }, [header, fetchData]); // handle page change\n\n  const handlePageChange = page => fetchData(page); // handle limit change\n\n\n  const handleLimitChange = async (newLimit, page) => {\n    setLoading(true);\n    const response = await Requests.BestSale.Index(page, newLimit, header);\n    setData(response.data);\n    setLimit(newLimit);\n    setLoading(false);\n  }; // handle filter fields\n\n\n  const handleFilterField = async _ref => {\n    let {\n      inputValue,\n      field\n    } = _ref;\n    let response;\n    if (!field) response = {\n      data: []\n    };\n    if (field === \"vendor\") response = await Requests.Options.Vendor(inputValue, header);\n    if (field === \"brand\") response = await Requests.Options.Brand(inputValue, header);\n    if (field === \"leaf-category\") response = await Requests.Options.LeafCategory(inputValue, header);\n    if (response.data && response.data.length) return response.data;\n    return [];\n  }; // Handle filter by selected item\n\n\n  const filterBySelectedItem = async data => {\n    setLoading(true);\n    setCloseFilter(true);\n    const response = await Requests.BestSale.FilterByFields(data, header);\n    setData(response.data);\n    setLoading(false);\n  }; // FIlter items\n\n\n  const handleFilterByDate = async data => {\n    setFilter(true);\n    setCloseFilter(true);\n    const response = await Requests.BestSale.FilterByDate(data, header);\n    setData(response.data);\n    setFilter(false);\n  }; // data coulmns\n\n\n  const columns = [{\n    name: 'Product',\n    sortable: true,\n    grow: 1,\n    minWidth: '300px',\n    cell: row => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"my-2\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: `/dashboard/product/${row._id}/show`,\n          children: row.name && row.name.length > 40 ? row.name.slice(0, 40) + ' ...' : row.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 41\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"mb-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"SKU: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 41\n        }, this), row.sku]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 17\n    }, this)\n  }, {\n    name: 'Brand',\n    sortable: true,\n    selector: row => row.brand\n  }, {\n    name: 'Vendor',\n    sortable: true,\n    selector: row => row.vendor\n  }, {\n    name: 'Leaf-Category',\n    sortable: true,\n    selector: row => row.leafCategory\n  }, {\n    name: 'Sales Time',\n    sortable: true,\n    selector: row => row.salesTime\n  }, {\n    name: 'Sales Qunt.',\n    sortable: true,\n    selector: row => row.salesQuantity\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"pb-4\",\n    children: /*#__PURE__*/_jsxDEV(Container.Fluid, {\n      children: /*#__PURE__*/_jsxDEV(Container.Row, {\n        children: /*#__PURE__*/_jsxDEV(Container.Column, {\n          className: \"col-padding\",\n          children: /*#__PURE__*/_jsxDEV(Card.Simple, {\n            className: \"border-0\",\n            children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n              className: \"bg-white border-0 p-3 p-lg-4\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"d-flex\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  children: /*#__PURE__*/_jsxDEV(\"h6\", {\n                    className: \"mt-0 mb-3\",\n                    children: \"Best selling products.\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 156,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 155,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"ml-auto\",\n                  children: /*#__PURE__*/_jsxDEV(ExportCSV, {\n                    csvData: sheetData,\n                    fileName: 'Best_selling_products'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 159,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 158,\n                  columnNumber: 37\n                }, this), closeFilter ? /*#__PURE__*/_jsxDEV(CustomButton, {\n                  className: \"btn-danger border-0 rounded-circle circle__padding ml-2\",\n                  onClick: () => {\n                    fetchData(1);\n                    setCloseFilter(false);\n                  },\n                  children: /*#__PURE__*/_jsxDEV(Icon, {\n                    icon: x,\n                    size: 22\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 173,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 166,\n                  columnNumber: 41\n                }, this) : null]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 154,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Container.Row, {\n                className: \"pt-2 px-2\",\n                children: [/*#__PURE__*/_jsxDEV(Container.Column, {\n                  className: \"col-6 col-sm-4 col-xl-2 px-1 mb-2\",\n                  children: /*#__PURE__*/_jsxDEV(SearchableSelect, {\n                    isMulti: false,\n                    placeholder: \"Vendor\",\n                    search: inputValue => handleFilterField({\n                      inputValue,\n                      field: \"vendor\"\n                    }),\n                    values: event => filterBySelectedItem({\n                      value: event.value,\n                      field: \"vendor\"\n                    })\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 184,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 183,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Container.Column, {\n                  className: \"col-6 col-sm-4 col-xl-2 px-1 mb-2\",\n                  children: /*#__PURE__*/_jsxDEV(SearchableSelect, {\n                    isMulti: false,\n                    placeholder: \"Brand\",\n                    search: inputValue => handleFilterField({\n                      inputValue,\n                      field: \"brand\"\n                    }),\n                    values: event => filterBySelectedItem({\n                      value: event.value,\n                      field: \"brand\"\n                    })\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 194,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 193,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Container.Column, {\n                  className: \"col-6 col-sm-4 col-xl-2 px-1 mb-2\",\n                  children: /*#__PURE__*/_jsxDEV(SearchableSelect, {\n                    isMulti: false,\n                    placeholder: \"Leaf-Category\",\n                    search: inputValue => handleFilterField({\n                      inputValue,\n                      field: \"leaf-category\"\n                    }),\n                    values: event => filterBySelectedItem({\n                      value: event.value,\n                      field: \"leaf-category\"\n                    })\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 204,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 203,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Container.Column, {\n                  className: \"col-xl-6 px-1 mb-2\",\n                  children: /*#__PURE__*/_jsxDEV(RangeFilter, {\n                    loading: isFilter,\n                    filter: handleFilterByDate\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 214,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 213,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 180,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n              className: \"p-0\",\n              children: /*#__PURE__*/_jsxDEV(DataTable, {\n                fixedHeader: true,\n                fixedHeaderScrollHeight: \"580px\",\n                columns: columns,\n                data: data,\n                loading: isLoading,\n                totalRows: totalItems,\n                pagination: true,\n                paginationServer: true,\n                handlePerRowsChange: handleLimitChange,\n                handlePageChange: handlePageChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 223,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 146,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Index, \"USIxSTQTD5aA/bsZjsI2VysbN7A=\");\n\n_c = Index;\nexport default Index;\n\nvar _c;\n\n$RefreshReg$(_c, \"Index\");","map":{"version":3,"sources":["D:/previous/src/pages/reports/bestSales/Index.js"],"names":["React","useCallback","useEffect","useState","Icon","x","Link","DataTable","RangeFilter","Container","Card","SearchableSelect","CustomButton","Requests","ExportCSV","Index","isFilter","setFilter","isLoading","setLoading","limit","setLimit","totalItems","setTotalItems","data","setData","sheetData","setSheetData","closeFilter","setCloseFilter","header","headers","Authorization","localStorage","getItem","fetchData","page","response","BestSale","xlsxData","pagination","items","length","i","element","push","name","sku","sales_time","salesTime","sales_quantity","salesQuantity","handlePageChange","handleLimitChange","newLimit","handleFilterField","inputValue","field","Options","Vendor","Brand","LeafCategory","filterBySelectedItem","FilterByFields","handleFilterByDate","FilterByDate","columns","sortable","grow","minWidth","cell","row","_id","slice","selector","brand","vendor","leafCategory","event","value"],"mappings":"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","sourcesContent":["import React, { useCallback, useEffect, useState } from 'react'\nimport './style.scss'\nimport Icon from 'react-icons-kit'\nimport { x } from 'react-icons-kit/feather'\nimport { Link } from 'react-router-dom'\nimport { DataTable } from '../../../components/table/Index'\nimport { RangeFilter } from '../../../components/rangeFilter/Index'\nimport { Container } from '../../../components/container'\nimport { Card } from '../../../components/card/Index'\nimport { SearchableSelect } from '../../../components/select'\nimport { CustomButton } from '../../../components/button'\n\nimport Requests from '../../../utils/Requests/Index'\nimport ExportCSV from '../../../components/exportCSV/Index'\n\nconst Index = () => {\n    const [isFilter, setFilter] = useState(false)\n    const [isLoading, setLoading] = useState(true)\n    const [limit, setLimit] = useState(10)\n    const [totalItems, setTotalItems] = useState(0)\n\n    const [data, setData] = useState([])\n    const [sheetData, setSheetData] = useState([])\n    const [closeFilter, setCloseFilter] = useState(false)\n    const [header] = useState({\n        headers: { Authorization: \"Bearer \" + localStorage.getItem('token') }\n    })\n\n    // Fetch data\n    const fetchData = useCallback(async (page) => {\n        setLoading(true)\n        const response = await Requests.BestSale.Index(page, limit, header)\n\n        if (response) {\n            let xlsxData = []\n            setData(response.data)\n            setTotalItems(response.pagination ? response.pagination.items : 0)\n\n            if (response.data && response.data.length) {\n                for (let i = 0; i < response.data.length; i++) {\n                    const element = response.data[i]\n                    xlsxData.push({\n                        name: element.name,\n                        sku: element.sku,\n                        sales_time: element.salesTime,\n                        sales_quantity: element.salesQuantity\n                    })\n                }\n                setSheetData(xlsxData)\n            }\n        }\n\n        setLoading(false)\n    }, [limit, header])\n\n    useEffect(() => {\n        fetchData(1)\n    }, [header, fetchData])\n\n    // handle page change\n    const handlePageChange = page => fetchData(page)\n\n    // handle limit change\n    const handleLimitChange = async (newLimit, page) => {\n        setLoading(true)\n        const response = await Requests.BestSale.Index(page, newLimit, header)\n\n        setData(response.data)\n        setLimit(newLimit)\n        setLoading(false)\n    }\n\n    // handle filter fields\n    const handleFilterField = async ({ inputValue, field }) => {\n        let response\n\n        if (!field) response = { data: [] }\n        if (field === \"vendor\") response = await Requests.Options.Vendor(inputValue, header)\n        if (field === \"brand\") response = await Requests.Options.Brand(inputValue, header)\n        if (field === \"leaf-category\") response = await Requests.Options.LeafCategory(inputValue, header)\n\n        if (response.data && response.data.length) return response.data\n        return []\n    }\n\n    // Handle filter by selected item\n    const filterBySelectedItem = async data => {\n        setLoading(true)\n        setCloseFilter(true)\n        const response = await Requests.BestSale.FilterByFields(data, header)\n\n        setData(response.data)\n        setLoading(false)\n    }\n\n    // FIlter items\n    const handleFilterByDate = async data => {\n        setFilter(true)\n        setCloseFilter(true)\n        const response = await Requests.BestSale.FilterByDate(data, header)\n        setData(response.data)\n        setFilter(false)\n    }\n\n    // data coulmns\n    const columns = [\n        {\n            name: 'Product',\n            sortable: true,\n            grow: 1,\n            minWidth: '300px',\n            cell: row =>\n                <div>\n                    <p className=\"my-2\"><Link to={`/dashboard/product/${row._id}/show`}>{row.name && row.name.length > 40 ? row.name.slice(0, 40) + ' ...' : row.name}</Link></p>\n                    <p className=\"mb-2\"><b>SKU: </b>{row.sku}</p>\n                </div>\n        },\n        {\n            name: 'Brand',\n            sortable: true,\n            selector: row => row.brand\n        },\n        {\n            name: 'Vendor',\n            sortable: true,\n            selector: row => row.vendor\n        },\n        {\n            name: 'Leaf-Category',\n            sortable: true,\n            selector: row => row.leafCategory\n        },\n        {\n            name: 'Sales Time',\n            sortable: true,\n            selector: row => row.salesTime\n        },\n        {\n            name: 'Sales Qunt.',\n            sortable: true,\n            selector: row => row.salesQuantity\n        }\n    ]\n\n    return (\n        <div className=\"pb-4\">\n            <Container.Fluid>\n                <Container.Row>\n                    <Container.Column className=\"col-padding\">\n                        <Card.Simple className=\"border-0\">\n                            <Card.Header className=\"bg-white border-0 p-3 p-lg-4\">\n\n                                {/* page header */}\n                                <div className=\"d-flex\">\n                                    <div>\n                                        <h6 className=\"mt-0 mb-3\">Best selling products.</h6>\n                                    </div>\n                                    <div className=\"ml-auto\">\n                                        <ExportCSV\n                                            csvData={sheetData}\n                                            fileName={'Best_selling_products'}\n                                        />\n                                    </div>\n\n                                    {closeFilter ?\n                                        <CustomButton\n                                            className=\"btn-danger border-0 rounded-circle circle__padding ml-2\"\n                                            onClick={() => {\n                                                fetchData(1)\n                                                setCloseFilter(false)\n                                            }}\n                                        >\n                                            <Icon icon={x} size={22} />\n                                        </CustomButton>\n                                        : null\n                                    }\n                                </div>\n\n                                {/* filter items conatiner */}\n                                <Container.Row className=\"pt-2 px-2\">\n\n                                    {/* Vendor */}\n                                    <Container.Column className=\"col-6 col-sm-4 col-xl-2 px-1 mb-2\">\n                                        <SearchableSelect\n                                            isMulti={false}\n                                            placeholder=\"Vendor\"\n                                            search={inputValue => handleFilterField({ inputValue, field: \"vendor\" })}\n                                            values={event => filterBySelectedItem({ value: event.value, field: \"vendor\" })}\n                                        />\n                                    </Container.Column>\n\n                                    {/* Brand */}\n                                    <Container.Column className=\"col-6 col-sm-4 col-xl-2 px-1 mb-2\">\n                                        <SearchableSelect\n                                            isMulti={false}\n                                            placeholder=\"Brand\"\n                                            search={inputValue => handleFilterField({ inputValue, field: \"brand\" })}\n                                            values={event => filterBySelectedItem({ value: event.value, field: \"brand\" })}\n                                        />\n                                    </Container.Column>\n\n                                    {/* Leaf-Category */}\n                                    <Container.Column className=\"col-6 col-sm-4 col-xl-2 px-1 mb-2\">\n                                        <SearchableSelect\n                                            isMulti={false}\n                                            placeholder=\"Leaf-Category\"\n                                            search={inputValue => handleFilterField({ inputValue, field: \"leaf-category\" })}\n                                            values={event => filterBySelectedItem({ value: event.value, field: \"leaf-category\" })}\n                                        />\n                                    </Container.Column>\n\n                                    {/* Range filter */}\n                                    <Container.Column className=\"col-xl-6 px-1 mb-2\">\n                                        <RangeFilter\n                                            loading={isFilter}\n                                            filter={handleFilterByDate}\n                                        />\n                                    </Container.Column>\n\n                                </Container.Row>\n                            </Card.Header>\n                            <Card.Body className=\"p-0\">\n                                <DataTable\n                                    fixedHeader\n                                    fixedHeaderScrollHeight=\"580px\"\n                                    columns={columns}\n                                    data={data}\n                                    loading={isLoading}\n                                    totalRows={totalItems}\n                                    pagination={true}\n                                    paginationServer={true}\n                                    handlePerRowsChange={handleLimitChange}\n                                    handlePageChange={handlePageChange}\n                                />\n                            </Card.Body>\n                        </Card.Simple>\n                    </Container.Column>\n                </Container.Row>\n            </Container.Fluid>\n        </div>\n    );\n};\n\nexport default Index;"]},"metadata":{},"sourceType":"module"}