{"ast":null,"code":"import Axios from 'axios';\nimport { api } from '../api';\nimport { toast } from 'react-toastify';\nimport { errorHandeller } from './Error';\nimport 'react-toastify/dist/ReactToastify.css';\ntoast.configure({\n  autoClose: 2000\n}); // Index of dashboard\n\nconst Index = async header => {\n  try {\n    const response = await Axios.get(`${api}dashboard`, header);\n\n    if (response.status === 200) {\n      return response.data;\n    }\n  } catch (error) {\n    if (error) return errorHandeller(error);\n  }\n}; // Chart data\n\n\n_c = Index;\n\nconst ChartData = async header => {\n  try {\n    const response = await Axios.get(`${api}dashboard/chart-data`, header);\n\n    if (response.status === 200) {\n      return response.data;\n    }\n  } catch (error) {\n    if (error) return errorHandeller(error);\n  }\n}; // Store credit report Index\n\n\n_c2 = ChartData;\n\nconst StoreCredit = async header => {\n  try {\n    const response = await Axios.get(`${api}dashboard/report/store-credit`, header);\n\n    if (response.status === 200) {\n      return response.data;\n    }\n  } catch (error) {\n    if (error) return errorHandeller(error);\n  }\n};\n\n_c3 = StoreCredit;\nconst Dashboard = {\n  Index,\n  ChartData,\n  StoreCredit\n};\nexport default Dashboard;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Index\");\n$RefreshReg$(_c2, \"ChartData\");\n$RefreshReg$(_c3, \"StoreCredit\");","map":{"version":3,"sources":["D:/previous/src/utils/Requests/Dashboard.js"],"names":["Axios","api","toast","errorHandeller","configure","autoClose","Index","header","response","get","status","data","error","ChartData","StoreCredit","Dashboard"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,QAAoB,QAApB;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,SAASC,cAAT,QAA+B,SAA/B;AACA,OAAO,uCAAP;AACAD,KAAK,CAACE,SAAN,CAAgB;AAAEC,EAAAA,SAAS,EAAE;AAAb,CAAhB,E,CAEA;;AACA,MAAMC,KAAK,GAAG,MAAOC,MAAP,IAAkB;AAC5B,MAAI;AACA,UAAMC,QAAQ,GAAG,MAAMR,KAAK,CAACS,GAAN,CAAW,GAAER,GAAI,WAAjB,EAA6BM,MAA7B,CAAvB;;AACA,QAAIC,QAAQ,CAACE,MAAT,KAAoB,GAAxB,EAA6B;AACzB,aAAOF,QAAQ,CAACG,IAAhB;AACH;AACJ,GALD,CAKE,OAAOC,KAAP,EAAc;AACZ,QAAIA,KAAJ,EAAW,OAAOT,cAAc,CAACS,KAAD,CAArB;AACd;AACJ,CATD,C,CAWA;;;KAXMN,K;;AAYN,MAAMO,SAAS,GAAG,MAAON,MAAP,IAAkB;AAChC,MAAI;AACA,UAAMC,QAAQ,GAAG,MAAMR,KAAK,CAACS,GAAN,CAAW,GAAER,GAAI,sBAAjB,EAAwCM,MAAxC,CAAvB;;AACA,QAAIC,QAAQ,CAACE,MAAT,KAAoB,GAAxB,EAA6B;AACzB,aAAOF,QAAQ,CAACG,IAAhB;AACH;AACJ,GALD,CAKE,OAAOC,KAAP,EAAc;AACZ,QAAIA,KAAJ,EAAW,OAAOT,cAAc,CAACS,KAAD,CAArB;AACd;AACJ,CATD,C,CAWA;;;MAXMC,S;;AAYN,MAAMC,WAAW,GAAG,MAAOP,MAAP,IAAkB;AAClC,MAAI;AACA,UAAMC,QAAQ,GAAG,MAAMR,KAAK,CAACS,GAAN,CAAW,GAAER,GAAI,+BAAjB,EAAiDM,MAAjD,CAAvB;;AACA,QAAIC,QAAQ,CAACE,MAAT,KAAoB,GAAxB,EAA6B;AACzB,aAAOF,QAAQ,CAACG,IAAhB;AACH;AACJ,GALD,CAKE,OAAOC,KAAP,EAAc;AACZ,QAAIA,KAAJ,EAAW,OAAOT,cAAc,CAACS,KAAD,CAArB;AACd;AACJ,CATD;;MAAME,W;AAYN,MAAMC,SAAS,GAAG;AACdT,EAAAA,KADc;AAEdO,EAAAA,SAFc;AAGdC,EAAAA;AAHc,CAAlB;AAMA,eAAeC,SAAf","sourcesContent":["import Axios from 'axios'\nimport { api } from '../api'\nimport { toast } from 'react-toastify'\nimport { errorHandeller } from './Error'\nimport 'react-toastify/dist/ReactToastify.css'\ntoast.configure({ autoClose: 2000 })\n\n// Index of dashboard\nconst Index = async (header) => {\n    try {\n        const response = await Axios.get(`${api}dashboard`, header)\n        if (response.status === 200) {\n            return response.data\n        }\n    } catch (error) {\n        if (error) return errorHandeller(error)\n    }\n}\n\n// Chart data\nconst ChartData = async (header) => {\n    try {\n        const response = await Axios.get(`${api}dashboard/chart-data`, header)\n        if (response.status === 200) {\n            return response.data\n        }\n    } catch (error) {\n        if (error) return errorHandeller(error)\n    }\n}\n\n// Store credit report Index\nconst StoreCredit = async (header) => {\n    try {\n        const response = await Axios.get(`${api}dashboard/report/store-credit`, header)\n        if (response.status === 200) {\n            return response.data\n        }\n    } catch (error) {\n        if (error) return errorHandeller(error)\n    }\n}\n\n\nconst Dashboard = {\n    Index,\n    ChartData,\n    StoreCredit\n}\n\nexport default Dashboard"]},"metadata":{},"sourceType":"module"}