{"ast":null,"code":"var _jsxFileName = \"D:\\\\previous\\\\src\\\\components\\\\table\\\\Index.js\";\nimport React from 'react';\nimport ReactDataTable from 'react-data-table-component';\nimport SearchComponent from '../search/Index';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const DataTable = props => {\n  return /*#__PURE__*/_jsxDEV(ReactDataTable, {\n    fixedHeader: props.fixedHeader,\n    fixedHeaderScrollHeight: props.fixedHeaderScrollHeight,\n    customStyles: props.customStyles,\n    columns: props.columns,\n    data: props.data,\n    progressPending: props.loading,\n    pagination: props.pagination,\n    paginationServer: true,\n    paginationTotalRows: props.totalRows,\n    onChangeRowsPerPage: props.handlePerRowsChange,\n    paginationRowsPerPageOptions: [10, 15, 20, 25, 30, 50, 100, 500, 1000, 5000, 50000, 100000, 1000000, 10000000],\n    onChangePage: props.handlePageChange,\n    subHeader: props.searchable,\n    subHeaderComponent: /*#__PURE__*/_jsxDEV(SearchComponent, {\n      placeholder: props.placeholder,\n      searchLoading: props.searchLoading,\n      search: query => props.search(query),\n      suggestion: props.suggestion,\n      clear: () => props.clearSearch()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 9\n  }, this);\n};\n_c = DataTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"DataTable\");","map":{"version":3,"sources":["D:/previous/src/components/table/Index.js"],"names":["React","ReactDataTable","SearchComponent","DataTable","props","fixedHeader","fixedHeaderScrollHeight","customStyles","columns","data","loading","pagination","totalRows","handlePerRowsChange","handlePageChange","searchable","placeholder","searchLoading","query","search","suggestion","clearSearch"],"mappings":";AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,4BAA3B;AACA,OAAOC,eAAP,MAA4B,iBAA5B;;AAEA,OAAO,MAAMC,SAAS,GAAIC,KAAD,IAAW;AAChC,sBACI,QAAC,cAAD;AACI,IAAA,WAAW,EAAEA,KAAK,CAACC,WADvB;AAEI,IAAA,uBAAuB,EAAED,KAAK,CAACE,uBAFnC;AAGI,IAAA,YAAY,EAAEF,KAAK,CAACG,YAHxB;AAII,IAAA,OAAO,EAAEH,KAAK,CAACI,OAJnB;AAKI,IAAA,IAAI,EAAEJ,KAAK,CAACK,IALhB;AAMI,IAAA,eAAe,EAAEL,KAAK,CAACM,OAN3B;AAOI,IAAA,UAAU,EAAEN,KAAK,CAACO,UAPtB;AAQI,IAAA,gBAAgB,MARpB;AASI,IAAA,mBAAmB,EAAEP,KAAK,CAACQ,SAT/B;AAUI,IAAA,mBAAmB,EAAER,KAAK,CAACS,mBAV/B;AAWI,IAAA,4BAA4B,EAAE,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,EAAiB,EAAjB,EAAqB,EAArB,EAAyB,GAAzB,EAA8B,GAA9B,EAAmC,IAAnC,EAAyC,IAAzC,EAA+C,KAA/C,EAAsD,MAAtD,EAA8D,OAA9D,EAAuE,QAAvE,CAXlC;AAYI,IAAA,YAAY,EAAET,KAAK,CAACU,gBAZxB;AAaI,IAAA,SAAS,EAAEV,KAAK,CAACW,UAbrB;AAcI,IAAA,kBAAkB,eACd,QAAC,eAAD;AACI,MAAA,WAAW,EAAEX,KAAK,CAACY,WADvB;AAEI,MAAA,aAAa,EAAEZ,KAAK,CAACa,aAFzB;AAGI,MAAA,MAAM,EAAEC,KAAK,IAAId,KAAK,CAACe,MAAN,CAAaD,KAAb,CAHrB;AAII,MAAA,UAAU,EAAEd,KAAK,CAACgB,UAJtB;AAKI,MAAA,KAAK,EAAE,MAAMhB,KAAK,CAACiB,WAAN;AALjB;AAAA;AAAA;AAAA;AAAA;AAfR;AAAA;AAAA;AAAA;AAAA,UADJ;AAyBH,CA1BM;KAAMlB,S","sourcesContent":["\nimport React from 'react'\nimport ReactDataTable from 'react-data-table-component'\nimport SearchComponent from '../search/Index'\n\nexport const DataTable = (props) => {\n    return (\n        <ReactDataTable\n            fixedHeader={props.fixedHeader}\n            fixedHeaderScrollHeight={props.fixedHeaderScrollHeight}\n            customStyles={props.customStyles}\n            columns={props.columns}\n            data={props.data}\n            progressPending={props.loading}\n            pagination={props.pagination}\n            paginationServer\n            paginationTotalRows={props.totalRows}\n            onChangeRowsPerPage={props.handlePerRowsChange}\n            paginationRowsPerPageOptions={[10, 15, 20, 25, 30, 50, 100, 500, 1000, 5000, 50000, 100000, 1000000, 10000000]}\n            onChangePage={props.handlePageChange}\n            subHeader={props.searchable}\n            subHeaderComponent={\n                <SearchComponent\n                    placeholder={props.placeholder}\n                    searchLoading={props.searchLoading}\n                    search={query => props.search(query)}\n                    suggestion={props.suggestion}\n                    clear={() => props.clearSearch()}\n                />}\n        />\n    );\n};\n"]},"metadata":{},"sourceType":"module"}