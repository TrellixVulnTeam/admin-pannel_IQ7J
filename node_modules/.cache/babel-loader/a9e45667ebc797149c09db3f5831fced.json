{"ast":null,"code":"var _jsxFileName = \"D:\\\\previous\\\\src\\\\pages\\\\master\\\\Index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport './style.scss';\nimport jwtDecode from 'jwt-decode';\nimport { Switch, Route } from 'react-router-dom';\nimport { routes } from '../../routes/Index';\nimport Layout from '../../components/layout/Index';\nimport FourOFour from '../fourOfour/Index';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Index = () => {\n  _s();\n\n  const [permitted, setPermitted] = useState([]);\n  useEffect(() => {\n    const token = localStorage.getItem(\"token\");\n\n    if (token) {\n      const decode = jwtDecode(token);\n      const permissions = decode.permissions; // Filter permitted routes from given permissions\n\n      if (routes && routes.length) {\n        const isAll = permissions.find(item => item === \"all\");\n\n        if (isAll || tr) {\n          return setPermitted(routes);\n        } else {\n          const permittedRoutes = routes.filter(_ref => {\n            let {\n              name: routeName\n            } = _ref;\n            return permissions.some(x => x === routeName);\n          });\n          setPermitted(permittedRoutes);\n        }\n      }\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"master\",\n    children: [/*#__PURE__*/_jsxDEV(Layout, {\n      routes: permitted\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main\",\n      children: /*#__PURE__*/_jsxDEV(Switch, {\n        children: [permitted && permitted.map((item, i) => item.name && item.path ? /*#__PURE__*/_jsxDEV(Route, {\n          exact: item.exact,\n          path: item.path,\n          component: item.component\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 29\n        }, this) : item.child && item.child.length ? item.child.map((child, j) => child.path ? /*#__PURE__*/_jsxDEV(Route, {\n          exact: child.exact,\n          path: child.path,\n          component: child.component\n        }, j, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 37\n        }, this) : child.child && child.child.length ? child.child.map((leaf, k) => /*#__PURE__*/_jsxDEV(Route, {\n          exact: leaf.exact,\n          path: leaf.path,\n          component: leaf.component\n        }, k, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 41\n        }, this)) : null) : null), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"*\",\n          component: FourOFour\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Index, \"i6oJFq591ApI8zXDOSPp3CSvMP0=\");\n\n_c = Index;\nexport default Index;\n\nvar _c;\n\n$RefreshReg$(_c, \"Index\");","map":{"version":3,"sources":["D:/previous/src/pages/master/Index.js"],"names":["React","useEffect","useState","jwtDecode","Switch","Route","routes","Layout","FourOFour","Index","permitted","setPermitted","token","localStorage","getItem","decode","permissions","length","isAll","find","item","tr","permittedRoutes","filter","name","routeName","some","x","map","i","path","exact","component","child","j","leaf","k"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport './style.scss'\nimport jwtDecode from 'jwt-decode'\nimport { Switch, Route } from 'react-router-dom'\nimport { routes } from '../../routes/Index'\n\nimport Layout from '../../components/layout/Index'\nimport FourOFour from '../fourOfour/Index'\n\nconst Index = () => {\n    const [permitted, setPermitted] = useState([])\n\n    useEffect(() => {\n        const token = localStorage.getItem(\"token\")\n        if (token) {\n            const decode = jwtDecode(token)\n            const permissions = decode.permissions\n\n            // Filter permitted routes from given permissions\n            if (routes && routes.length) {\n                const isAll = permissions.find(item => item === \"all\")\n\n                if (isAll || tr) {\n                    return setPermitted(routes)\n                } else {\n                    const permittedRoutes = routes.filter(({ name: routeName }) => permissions.some(x => x === routeName))\n                    setPermitted(permittedRoutes)\n                }\n            }\n        }\n    }, [])\n\n    return (\n        <div className=\"master\">\n            <Layout routes={permitted} />\n            <div className=\"main\">\n                <Switch>\n\n\n                    {permitted && permitted.map((item, i) =>\n                        item.name && item.path ?\n                            <Route\n                                key={i}\n                                exact={item.exact}\n                                path={item.path}\n                                component={item.component}\n                            />\n                            : item.child && item.child.length ? item.child.map((child, j) =>\n                                child.path ?\n                                    <Route\n                                        key={j}\n                                        exact={child.exact}\n                                        path={child.path}\n                                        component={child.component}\n                                    />\n                                    : child.child && child.child.length ? child.child.map((leaf, k) =>\n                                        <Route\n                                            key={k}\n                                            exact={leaf.exact}\n                                            path={leaf.path}\n                                            component={leaf.component}\n                                        />\n                                    ) : null\n                            )\n                                : null\n                    )}\n\n                    {/* {permitted && permitted.map((item, i) =>\n                        item.name && item.path ?\n                            <Route\n                                key={i}\n                                exact={item.exact}\n                                path={item.path}\n                                component={item.component}\n                            />\n                            : item.child && item.child.length ? item.child.map((child, j) =>\n                                <Route\n                                    key={j}\n                                    exact={child.exact}\n                                    path={child.path}\n                                    component={child.component}\n                                />\n                            ) : null)\n                    } */}\n\n                    <Route path=\"*\" component={FourOFour} />\n\n                </Switch>\n            </div>\n        </div>\n    );\n}\n\nexport default Index;\n\n"]},"metadata":{},"sourceType":"module"}