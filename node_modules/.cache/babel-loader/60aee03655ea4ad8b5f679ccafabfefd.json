{"ast":null,"code":"var _jsxFileName = \"D:\\\\previous\\\\src\\\\pages\\\\customer\\\\Edit.js\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useEffect, useState } from 'react';\nimport './style.scss';\nimport 'react-toastify/dist/ReactToastify.css';\nimport Icon from 'react-icons-kit';\nimport { toast } from 'react-toastify';\nimport { Link, useParams } from 'react-router-dom';\nimport { useForm } from 'react-hook-form';\nimport { chevronLeft } from 'react-icons-kit/feather';\nimport Requests from '../../utils/Requests/Index';\nimport { PreLoader } from '../../components/loading/Index';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\ntoast.configure({\n  autoClose: 2000\n});\n\nconst Edit = () => {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  const {\n    register,\n    handleSubmit,\n    errors\n  } = useForm();\n  const [customer, setCustomer] = useState({});\n  const [isLoading, setLoading] = useState(true);\n  const [isUpdate, setUpdate] = useState(false);\n  const [header] = useState({\n    headers: {\n      Authorization: \"Bearer \" + localStorage.getItem('token')\n    }\n  }); // Fetch data\n\n  const fetchData = useCallback(async () => {\n    const data = await Requests.Customer.Show(id, header);\n    if (data) setCustomer(data);\n    setLoading(false);\n  }, [id, header]);\n  useEffect(() => {\n    fetchData();\n  }, [id, header, fetchData]); // Submit Form\n\n  const onSubmit = async data => {\n    try {\n      setUpdate(true);\n      await Requests.Customer.Update(id, data, header);\n      setUpdate(false);\n    } catch (error) {\n      if (error) console.log(error);\n    }\n  };\n\n  if (isLoading) return /*#__PURE__*/_jsxDEV(PreLoader, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 27\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"store-customer pb-4\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-fluid\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-12 col-padding\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card border-0 shadow-sm\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-header p-3 p-lg-4 bg-white\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"d-flex\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  children: /*#__PURE__*/_jsxDEV(\"h6\", {\n                    className: \"mb-0\",\n                    children: \"Create Customer\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 56,\n                    columnNumber: 42\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 56,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"ml-auto\",\n                  children: /*#__PURE__*/_jsxDEV(Link, {\n                    to: \"/dashboard/customer\",\n                    type: \"button\",\n                    className: \"btn shadow-none rounded-circle\",\n                    children: /*#__PURE__*/_jsxDEV(Icon, {\n                      icon: chevronLeft,\n                      size: 22\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 63,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 58,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 57,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-body p-4\",\n              children: /*#__PURE__*/_jsxDEV(\"form\", {\n                onSubmit: handleSubmit(onSubmit),\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"form-group mb-4\",\n                  children: [errors.name && errors.name.message ? /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"text-danger\",\n                    children: errors.name && errors.name.message\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 74,\n                    columnNumber: 45\n                  }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: \"Name\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 75,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    name: \"name\",\n                    defaultValue: customer ? customer.name : null,\n                    className: \"form-control shadow-none\",\n                    placeholder: \"Enter customer name\",\n                    ref: register({\n                      required: \"Name is required\"\n                    })\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 77,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 72,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"form-group mb-4\",\n                  children: [errors.email && errors.email.message ? /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"text-danger\",\n                    children: errors.email && errors.email.message\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 92,\n                    columnNumber: 45\n                  }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: \"E-mail\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 93,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    name: \"email\",\n                    defaultValue: customer ? customer.email : null,\n                    className: \"form-control shadow-none\",\n                    placeholder: \"Enter e-mail\",\n                    ref: register({\n                      required: \"E-mail is required\",\n                      pattern: {\n                        value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\n                        message: \"Invalid email address\"\n                      }\n                    })\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 96,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 90,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"form-group mb-4\",\n                  children: [errors.phone && errors.phone.message ? /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"text-danger\",\n                    children: errors.phone && errors.phone.message\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 115,\n                    columnNumber: 45\n                  }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: \"Phone\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 116,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    name: \"phone\",\n                    defaultValue: customer ? customer.phone : null,\n                    className: \"form-control shadow-none\",\n                    placeholder: \"Enter phone number\",\n                    ref: register({\n                      required: \"Phone is required\",\n                      pattern: {\n                        value: /^(?:\\+88|01)?\\d+$/,\n                        message: \"Phone number is not valid.\"\n                      }\n                    })\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 118,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 113,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text-right\",\n                  children: /*#__PURE__*/_jsxDEV(\"button\", {\n                    type: \"submit\",\n                    className: \"btn shadow-none\",\n                    disabled: isUpdate,\n                    children: isUpdate ? 'Updating...' : 'Update'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 135,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 134,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Edit, \"VxB2FJdqWy00JMJ/cQPQlQmxKnY=\", false, function () {\n  return [useParams, useForm];\n});\n\n_c = Edit;\nexport default Edit;\n\nvar _c;\n\n$RefreshReg$(_c, \"Edit\");","map":{"version":3,"sources":["D:/previous/src/pages/customer/Edit.js"],"names":["React","useCallback","useEffect","useState","Icon","toast","Link","useParams","useForm","chevronLeft","Requests","PreLoader","configure","autoClose","Edit","id","register","handleSubmit","errors","customer","setCustomer","isLoading","setLoading","isUpdate","setUpdate","header","headers","Authorization","localStorage","getItem","fetchData","data","Customer","Show","onSubmit","Update","error","console","log","name","message","required","email","pattern","value","phone"],"mappings":"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","sourcesContent":["import React, { useCallback, useEffect, useState } from 'react'\nimport './style.scss'\nimport 'react-toastify/dist/ReactToastify.css'\nimport Icon from 'react-icons-kit'\nimport { toast } from 'react-toastify'\nimport { Link, useParams } from 'react-router-dom'\nimport { useForm } from 'react-hook-form'\nimport { chevronLeft } from 'react-icons-kit/feather'\nimport Requests from '../../utils/Requests/Index'\n\nimport { PreLoader } from '../../components/loading/Index'\n\ntoast.configure({ autoClose: 2000 })\nconst Edit = () => {\n    const { id } = useParams()\n    const { register, handleSubmit, errors } = useForm()\n    const [customer, setCustomer] = useState({})\n    const [isLoading, setLoading] = useState(true)\n    const [isUpdate, setUpdate] = useState(false)\n    const [header] = useState({\n        headers: { Authorization: \"Bearer \" + localStorage.getItem('token') }\n    })\n\n    // Fetch data\n    const fetchData = useCallback(async () => {\n        const data = await Requests.Customer.Show(id, header)\n        if (data) setCustomer(data)\n        setLoading(false)\n    }, [id, header])\n\n    useEffect(() => {\n        fetchData()\n    }, [id, header, fetchData])\n\n    // Submit Form\n    const onSubmit = async (data) => {\n        try {\n            setUpdate(true)\n            await Requests.Customer.Update(id, data, header)\n            setUpdate(false)\n        } catch (error) {\n            if (error) console.log(error)\n        }\n    }\n\n    if (isLoading) return <PreLoader />\n\n    return (\n        <div className=\"store-customer pb-4\">\n            <div className=\"container-fluid\">\n                <div className=\"row\">\n                    <div className=\"col-12 col-padding\">\n                        <div className=\"card border-0 shadow-sm\">\n                            <div className=\"card-header p-3 p-lg-4 bg-white\">\n                                <div className=\"d-flex\">\n                                    <div><h6 className=\"mb-0\">Create Customer</h6></div>\n                                    <div className=\"ml-auto\">\n                                        <Link\n                                            to=\"/dashboard/customer\"\n                                            type=\"button\"\n                                            className=\"btn shadow-none rounded-circle\"\n                                        >\n                                            <Icon icon={chevronLeft} size={22} />\n                                        </Link>\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"card-body p-4\">\n                                <form onSubmit={handleSubmit(onSubmit)}>\n\n                                    {/* Name */}\n                                    <div className=\"form-group mb-4\">\n                                        {errors.name && errors.name.message ? (\n                                            <p className=\"text-danger\">{errors.name && errors.name.message}</p>\n                                        ) : <p>Name</p>}\n\n                                        <input\n                                            type=\"text\"\n                                            name=\"name\"\n                                            defaultValue={customer ? customer.name : null}\n                                            className=\"form-control shadow-none\"\n                                            placeholder=\"Enter customer name\"\n                                            ref={register({\n                                                required: \"Name is required\"\n                                            })}\n                                        />\n                                    </div>\n\n                                    {/* E-mail */}\n                                    <div className=\"form-group mb-4\">\n                                        {errors.email && errors.email.message ? (\n                                            <p className=\"text-danger\">{errors.email && errors.email.message}</p>\n                                        ) : <p>E-mail</p>\n                                        }\n\n                                        <input\n                                            type=\"text\"\n                                            name=\"email\"\n                                            defaultValue={customer ? customer.email : null}\n                                            className=\"form-control shadow-none\"\n                                            placeholder=\"Enter e-mail\"\n                                            ref={register({\n                                                required: \"E-mail is required\",\n                                                pattern: {\n                                                    value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\n                                                    message: \"Invalid email address\"\n                                                }\n                                            })}\n                                        />\n                                    </div>\n\n                                    {/* Phone */}\n                                    <div className=\"form-group mb-4\">\n                                        {errors.phone && errors.phone.message ? (\n                                            <p className=\"text-danger\">{errors.phone && errors.phone.message}</p>\n                                        ) : <p>Phone</p>}\n\n                                        <input\n                                            type=\"text\"\n                                            name=\"phone\"\n                                            defaultValue={customer ? customer.phone : null}\n                                            className=\"form-control shadow-none\"\n                                            placeholder=\"Enter phone number\"\n                                            ref={register({\n                                                required: \"Phone is required\",\n                                                pattern: {\n                                                    value: /^(?:\\+88|01)?\\d+$/,\n                                                    message: \"Phone number is not valid.\"\n                                                }\n                                            })}\n                                        />\n                                    </div>\n\n                                    <div className=\"text-right\">\n                                        <button type=\"submit\" className=\"btn shadow-none\" disabled={isUpdate}>\n                                            {isUpdate ? 'Updating...' : 'Update'}\n                                        </button>\n                                    </div>\n\n                                </form>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Edit;\n"]},"metadata":{},"sourceType":"module"}