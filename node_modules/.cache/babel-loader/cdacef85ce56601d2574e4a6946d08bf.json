{"ast":null,"code":"import Axios from 'axios';\nimport { aclApi } from '../api';\nimport { toast } from 'react-toastify';\nimport { errorHandeller } from './Error';\nimport 'react-toastify/dist/ReactToastify.css';\ntoast.configure({\n  autoClose: 2000\n}); // Index of items\n\nconst Index = async header => {\n  try {\n    const response = await Axios.get(`${aclApi}role`, header);\n    if (response.status === 200) return response.data;\n  } catch (error) {\n    if (error) return errorHandeller(error);\n  }\n}; // Index of routes\n\n\n_c = Index;\n\nconst Routes = async header => {\n  try {\n    const response = await Axios.get(`${aclApi}role/route/paths`, header);\n    if (response.status === 200) return response.data;\n  } catch (error) {\n    if (error) return errorHandeller(error);\n  }\n}; // Store item\n\n\n_c2 = Routes;\n\nconst Store = async (data, header) => {\n  try {\n    const response = await Axios.post(`${aclApi}role`, data, header);\n\n    if (response.status === 201) {\n      toast.success(response.data.message);\n      return true;\n    }\n  } catch (error) {\n    if (error) return errorHandeller(error);\n  }\n}; // Show item\n\n\n_c3 = Store;\n\nconst Show = async (id, header) => {\n  try {\n    const response = await Axios.get(`${aclApi}role/${id}`, header);\n    if (response.status === 200) return response.data;\n  } catch (error) {\n    if (error) return errorHandeller(error);\n  }\n}; // Update specific items\n\n\n_c4 = Show;\n\nconst Update = async (id, data, header) => {\n  try {\n    const response = await Axios.put(`${aclApi}role/${id}`, data, header);\n\n    if (response.status === 201) {\n      toast.success(response.data.message);\n      return true;\n    }\n  } catch (error) {\n    if (error) return errorHandeller(error);\n  }\n}; // Delete item\n\n\n_c5 = Update;\n\nconst Delete = async (id, header) => {\n  try {\n    const response = await Axios.delete(`${aclApi}role/${id}`, header);\n\n    if (response.status === 200) {\n      toast.success(response.data.message);\n      return true;\n    }\n  } catch (error) {\n    if (error) return errorHandeller(error);\n  }\n};\n\n_c6 = Delete;\nconst Role = {\n  Index,\n  Routes,\n  Store,\n  Show,\n  Update,\n  Delete\n};\nexport default Role;\n\nvar _c, _c2, _c3, _c4, _c5, _c6;\n\n$RefreshReg$(_c, \"Index\");\n$RefreshReg$(_c2, \"Routes\");\n$RefreshReg$(_c3, \"Store\");\n$RefreshReg$(_c4, \"Show\");\n$RefreshReg$(_c5, \"Update\");\n$RefreshReg$(_c6, \"Delete\");","map":{"version":3,"sources":["D:/previous/src/utils/Requests/Role.js"],"names":["Axios","aclApi","toast","errorHandeller","configure","autoClose","Index","header","response","get","status","data","error","Routes","Store","post","success","message","Show","id","Update","put","Delete","delete","Role"],"mappings":"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","sourcesContent":["import Axios from 'axios'\nimport { aclApi } from '../api'\nimport { toast } from 'react-toastify'\nimport { errorHandeller } from './Error'\nimport 'react-toastify/dist/ReactToastify.css'\ntoast.configure({ autoClose: 2000 })\n\n// Index of items\nconst Index = async (header) => {\n    try {\n        const response = await Axios.get(`${aclApi}role`, header)\n        if (response.status === 200) return response.data\n    } catch (error) {\n        if (error) return errorHandeller(error)\n    }\n}\n\n// Index of routes\nconst Routes = async (header) => {\n    try {\n        const response = await Axios.get(`${aclApi}role/route/paths`, header)\n        if (response.status === 200) return response.data\n    } catch (error) {\n        if (error) return errorHandeller(error)\n    }\n}\n\n\n// Store item\nconst Store = async (data, header) => {\n    try {\n        const response = await Axios.post(`${aclApi}role`, data, header)\n        if (response.status === 201) {\n            toast.success(response.data.message)\n            return true\n        }\n    } catch (error) {\n        if (error) return errorHandeller(error)\n    }\n}\n\n// Show item\nconst Show = async (id, header) => {\n    try {\n        const response = await Axios.get(`${aclApi}role/${id}`, header)\n        if (response.status === 200) return response.data\n    } catch (error) {\n        if (error) return errorHandeller(error)\n    }\n}\n\n// Update specific items\nconst Update = async (id, data, header) => {\n    try {\n        const response = await Axios.put(`${aclApi}role/${id}`, data, header)\n        if (response.status === 201) {\n            toast.success(response.data.message)\n            return true\n        }\n    } catch (error) {\n        if (error) return errorHandeller(error)\n    }\n}\n\n// Delete item\nconst Delete = async (id, header) => {\n    try {\n        const response = await Axios.delete(`${aclApi}role/${id}`, header)\n        if (response.status === 200) {\n            toast.success(response.data.message)\n            return true\n        }\n    } catch (error) {\n        if (error) return errorHandeller(error)\n    }\n}\n\nconst Role = {\n    Index,\n    Routes,\n    Store,\n    Show,\n    Update,\n    Delete\n}\n\nexport default Role"]},"metadata":{},"sourceType":"module"}