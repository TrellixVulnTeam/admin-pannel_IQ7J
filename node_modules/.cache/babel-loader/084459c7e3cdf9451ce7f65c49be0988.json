{"ast":null,"code":"import Axios from 'axios';\nimport { api } from '../api';\nimport { toast } from 'react-toastify';\nimport { errorHandeller } from './Error';\nimport 'react-toastify/dist/ReactToastify.css';\ntoast.configure({\n  autoClose: 2000\n}); // List of admin\n\nconst Index = async (page, limit, header) => {\n  try {\n    const response = await Axios.get(`${api}admin/index?page=${page}&limit=${limit}`, header);\n    if (response.status === 200) return response.data;\n  } catch (error) {\n    if (error) return errorHandeller(error);\n  }\n}; // Show specific admin\n\n\n_c = Index;\n\nconst Show = async (id, header) => {\n  try {\n    const response = await Axios.get(`${api}admin/show/${id}`, header);\n\n    if (response.status === 200) {\n      return response.data;\n    }\n  } catch (error) {\n    if (error) return errorHandeller(error);\n  }\n}; // Store admin\n\n\n_c2 = Show;\n\nconst Store = async (data, header) => {\n  try {\n    const response = await Axios.post(`${api}admin/create`, data, header);\n\n    if (response.status === 201) {\n      toast.success(response.data.message);\n      return true;\n    }\n  } catch (error) {\n    if (error) return errorHandeller(error);\n  }\n}; // Update specific admin\n\n\n_c3 = Store;\n\nconst Update = async (id, data, header) => {\n  try {\n    const response = await Axios.put(`${api}admin/update/${id}`, data, header);\n\n    if (response.status === 201) {\n      toast.success(response.data.message);\n      return true;\n    }\n  } catch (error) {\n    if (error) return errorHandeller(error);\n  }\n}; // Search item\n\n\n_c4 = Update;\n\nconst Search = async (data, header) => {\n  try {\n    const response = await Axios.get(`${api}admin/search/items?query=${data}`, header);\n    if (response.status === 200) return response.data;\n  } catch (error) {\n    if (error) return errorHandeller(error);\n  }\n};\n\n_c5 = Search;\nconst Admin = {\n  Index,\n  Show,\n  Store,\n  Update,\n  Search\n};\nexport default Admin;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"Index\");\n$RefreshReg$(_c2, \"Show\");\n$RefreshReg$(_c3, \"Store\");\n$RefreshReg$(_c4, \"Update\");\n$RefreshReg$(_c5, \"Search\");","map":{"version":3,"sources":["D:/previous/src/utils/Requests/Admin.js"],"names":["Axios","api","toast","errorHandeller","configure","autoClose","Index","page","limit","header","response","get","status","data","error","Show","id","Store","post","success","message","Update","put","Search","Admin"],"mappings":"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","sourcesContent":["import Axios from 'axios'\nimport { api } from '../api'\nimport { toast } from 'react-toastify'\nimport { errorHandeller } from './Error'\nimport 'react-toastify/dist/ReactToastify.css'\ntoast.configure({ autoClose: 2000 })\n\n// List of admin\nconst Index = async (page, limit, header) => {\n    try {\n        const response = await Axios.get(`${api}admin/index?page=${page}&limit=${limit}`, header)\n        if (response.status === 200) return response.data\n    } catch (error) {\n        if (error) return errorHandeller(error)\n    }\n}\n\n// Show specific admin\nconst Show = async (id, header) => {\n    try {\n        const response = await Axios.get(`${api}admin/show/${id}`, header)\n        if (response.status === 200) {\n            return response.data\n        }\n    } catch (error) {\n        if (error) return errorHandeller(error)\n    }\n}\n\n// Store admin\nconst Store = async (data, header) => {\n    try {\n        const response = await Axios.post(`${api}admin/create`, data, header)\n        if (response.status === 201) {\n            toast.success(response.data.message)\n            return true\n        }\n    } catch (error) {\n        if (error) return errorHandeller(error)\n    }\n}\n\n// Update specific admin\nconst Update = async (id, data, header) => {\n    try {\n        const response = await Axios.put(`${api}admin/update/${id}`, data, header)\n        if (response.status === 201) {\n            toast.success(response.data.message)\n            return true\n        }\n    } catch (error) {\n        if (error) return errorHandeller(error)\n    }\n}\n\n// Search item\nconst Search = async (data, header) => {\n    try {\n        const response = await Axios.get(`${api}admin/search/items?query=${data}`, header)\n        if (response.status === 200) return response.data\n    } catch (error) {\n        if (error) return errorHandeller(error)\n    }\n}\n\n\nconst Admin = {\n    Index,\n    Show,\n    Store,\n    Update,\n    Search\n}\n\nexport default Admin"]},"metadata":{},"sourceType":"module"}