{"ast":null,"code":"var _jsxFileName = \"D:\\\\previous\\\\src\\\\pages\\\\admin\\\\Create.js\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useEffect, useState } from 'react';\nimport './style.scss';\nimport _ from 'lodash';\nimport Icon from 'react-icons-kit';\nimport { Link } from 'react-router-dom';\nimport { useForm } from 'react-hook-form';\nimport { chevronLeft } from 'react-icons-kit/feather';\nimport { SingleSelect } from '../../components/select';\nimport Requests from '../../utils/Requests/Index';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Create = () => {\n  _s();\n\n  const {\n    register,\n    handleSubmit,\n    setError,\n    clearErrors,\n    errors\n  } = useForm();\n  const [isLoading, setLoading] = useState(false);\n  const [roles, setRoles] = useState({\n    value: null,\n    options: []\n  });\n  const [header] = useState({\n    headers: {\n      Authorization: \"Bearer \" + localStorage.getItem('token')\n    }\n  }); // Fetch Data\n\n  const fetchData = useCallback(async () => {\n    try {\n      let options = [];\n      const response = await Requests.Role.Index(header);\n\n      if (response && response.status) {\n        if (response.data && response.data.length) {\n          for (let i = 0; i < response.data.length; i++) {\n            const element = response.data[i];\n            options.push({\n              label: _.capitalize(element.role),\n              value: element._id\n            });\n          }\n        }\n      }\n\n      setRoles(exRoles => ({ ...exRoles,\n        options: options\n      }));\n    } catch (error) {\n      if (error) console.log(error);\n    }\n  }, [header]);\n  useEffect(() => {\n    fetchData();\n  }, [header, fetchData]); // Handle role\n\n  const handleRole = event => {\n    setRoles(exRoles => ({ ...exRoles,\n      value: event.value\n    }));\n    clearErrors([\"role\"]);\n  }; // Submit Form\n\n\n  const onSubmit = async data => {\n    if (!roles.value) {\n      return setError(\"role\", {\n        type: \"manual\",\n        message: \"Role is required!\"\n      });\n    }\n\n    let formData = { ...data,\n      role: roles.value\n    };\n    setLoading(true);\n    await Requests.Admin.Store(formData, header);\n    setLoading(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"admin-create pb-4\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-fluid\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-12 col-padding\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card border-0 shadow-sm\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-header p-3 p-lg-4 bg-white\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"d-flex\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  children: /*#__PURE__*/_jsxDEV(\"h6\", {\n                    className: \"mb-0\",\n                    children: \"Create Admin\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 77,\n                    columnNumber: 42\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 77,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"ml-auto\",\n                  children: /*#__PURE__*/_jsxDEV(Link, {\n                    to: \"/dashboard/admin\",\n                    type: \"button\",\n                    className: \"btn shadow-none rounded-circle\",\n                    children: /*#__PURE__*/_jsxDEV(Icon, {\n                      icon: chevronLeft,\n                      size: 22\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 84,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 79,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 78,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-body p-4\",\n              children: /*#__PURE__*/_jsxDEV(\"form\", {\n                onSubmit: handleSubmit(onSubmit),\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"row\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"col-12 col-lg-6\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"form-group mb-4\",\n                      children: [errors.name && errors.name.message ? /*#__PURE__*/_jsxDEV(\"p\", {\n                        className: \"text-danger\",\n                        children: errors.name && errors.name.message\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 98,\n                        columnNumber: 53\n                      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n                        children: \"Name\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 99,\n                        columnNumber: 53\n                      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                        type: \"text\",\n                        name: \"name\",\n                        className: \"form-control shadow-none\",\n                        placeholder: \"Enter name\",\n                        ref: register({\n                          required: \"Name is required\",\n                          minLength: {\n                            value: 5,\n                            message: \"Minimun length 5 character\"\n                          }\n                        })\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 101,\n                        columnNumber: 49\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 96,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 95,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"col-12 col-lg-6\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"form-group mb-4\",\n                      children: [errors.email && errors.email.message ? /*#__PURE__*/_jsxDEV(\"p\", {\n                        className: \"text-danger\",\n                        children: errors.email && errors.email.message\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 121,\n                        columnNumber: 53\n                      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n                        children: \"E-mail\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 122,\n                        columnNumber: 53\n                      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                        type: \"text\",\n                        name: \"email\",\n                        className: \"form-control shadow-none\",\n                        placeholder: \"Enter e-mail\",\n                        ref: register({\n                          required: \"E-mail is required\",\n                          pattern: {\n                            value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\n                            message: \"Invalid email address\"\n                          }\n                        })\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 124,\n                        columnNumber: 49\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 119,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 118,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"col-12\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"form-group mb-4\",\n                      children: [errors.phone && errors.phone.message ? /*#__PURE__*/_jsxDEV(\"p\", {\n                        className: \"text-danger\",\n                        children: errors.phone && errors.phone.message\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 144,\n                        columnNumber: 53\n                      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n                        children: \"Phone\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 145,\n                        columnNumber: 53\n                      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                        type: \"text\",\n                        name: \"phone\",\n                        className: \"form-control shadow-none\",\n                        placeholder: \"Enter phone number\",\n                        ref: register({\n                          required: \"Phone number required\",\n                          pattern: {\n                            value: /^(?:\\+88|01)?\\d+$/,\n                            message: \"Phone number is not valid.\"\n                          }\n                        })\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 147,\n                        columnNumber: 49\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 142,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 141,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"col-12\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"form-group mb-4\",\n                      children: [errors.presentAddress && errors.presentAddress.message ? /*#__PURE__*/_jsxDEV(\"p\", {\n                        className: \"text-danger\",\n                        children: errors.presentAddress && errors.presentAddress.message\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 167,\n                        columnNumber: 53\n                      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n                        children: \"Present address\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 168,\n                        columnNumber: 53\n                      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                        type: \"text\",\n                        name: \"presentAddress\",\n                        className: \"form-control shadow-none\",\n                        placeholder: \"Enter present address\",\n                        ref: register({\n                          required: \"Present address is required\"\n                        })\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 170,\n                        columnNumber: 49\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 165,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 164,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"col-12\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"form-group mb-4\",\n                      children: [errors.permanentAddress && errors.permanentAddress.message ? /*#__PURE__*/_jsxDEV(\"p\", {\n                        className: \"text-danger\",\n                        children: errors.permanentAddress && errors.permanentAddress.message\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 186,\n                        columnNumber: 53\n                      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n                        children: \"Permanent address\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 187,\n                        columnNumber: 53\n                      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                        type: \"text\",\n                        name: \"permanentAddress\",\n                        className: \"form-control shadow-none\",\n                        placeholder: \"Enter permanent address\",\n                        ref: register({\n                          required: \"Permanent address is required\"\n                        })\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 189,\n                        columnNumber: 49\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 184,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 183,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"col-12 col-lg-6\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"form-group mb-4\",\n                      children: [errors.role && errors.role.message ? /*#__PURE__*/_jsxDEV(\"p\", {\n                        className: \"text-danger\",\n                        children: errors.role && errors.role.message\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 206,\n                        columnNumber: 53\n                      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n                        children: \"Role\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 207,\n                        columnNumber: 55\n                      }, this), /*#__PURE__*/_jsxDEV(SingleSelect, {\n                        placeholder: \"role\",\n                        options: roles.options,\n                        value: data => handleRole(data)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 209,\n                        columnNumber: 49\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 204,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 203,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"col-12 col-lg-6\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"form-group mb-4\",\n                      children: [errors.password && errors.password.message ? /*#__PURE__*/_jsxDEV(\"p\", {\n                        className: \"text-danger\",\n                        children: errors.password && errors.password.message\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 222,\n                        columnNumber: 53\n                      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n                        children: \"Password\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 223,\n                        columnNumber: 53\n                      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                        type: \"password\",\n                        name: \"password\",\n                        className: \"form-control shadow-none\",\n                        placeholder: \"Enter password\",\n                        ref: register({\n                          required: \"Please enter password\",\n                          minLength: {\n                            value: 8,\n                            message: \"Minimun length 8 character\"\n                          }\n                        })\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 226,\n                        columnNumber: 49\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 220,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 219,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"col-12 text-right\",\n                    children: /*#__PURE__*/_jsxDEV(\"button\", {\n                      type: \"submit\",\n                      className: \"btn shadow-none\",\n                      disabled: isLoading,\n                      children: isLoading ? /*#__PURE__*/_jsxDEV(\"span\", {\n                        children: \"Submitting...\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 244,\n                        columnNumber: 62\n                      }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n                        children: \"Submit\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 244,\n                        columnNumber: 91\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 243,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 242,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 92,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Create, \"UWiYBqi36ysyF0EdFBRfaasz9s0=\", false, function () {\n  return [useForm];\n});\n\n_c = Create;\nexport default Create;\n\nvar _c;\n\n$RefreshReg$(_c, \"Create\");","map":{"version":3,"sources":["D:/previous/src/pages/admin/Create.js"],"names":["React","useCallback","useEffect","useState","_","Icon","Link","useForm","chevronLeft","SingleSelect","Requests","Create","register","handleSubmit","setError","clearErrors","errors","isLoading","setLoading","roles","setRoles","value","options","header","headers","Authorization","localStorage","getItem","fetchData","response","Role","Index","status","data","length","i","element","push","label","capitalize","role","_id","exRoles","error","console","log","handleRole","event","onSubmit","type","message","formData","Admin","Store","name","required","minLength","email","pattern","phone","presentAddress","permanentAddress","password"],"mappings":"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","sourcesContent":["import React, { useCallback, useEffect, useState } from 'react'\nimport './style.scss'\nimport _ from 'lodash'\nimport Icon from 'react-icons-kit'\nimport { Link } from 'react-router-dom'\nimport { useForm } from 'react-hook-form'\nimport { chevronLeft } from 'react-icons-kit/feather'\n\nimport { SingleSelect } from '../../components/select'\nimport Requests from '../../utils/Requests/Index'\n\nconst Create = () => {\n    const { register, handleSubmit, setError, clearErrors, errors } = useForm()\n    const [isLoading, setLoading] = useState(false)\n    const [roles, setRoles] = useState({ value: null, options: [] })\n    const [header] = useState({\n        headers: { Authorization: \"Bearer \" + localStorage.getItem('token') }\n    })\n\n    // Fetch Data\n    const fetchData = useCallback(async () => {\n        try {\n            let options = []\n\n            const response = await Requests.Role.Index(header)\n            if (response && response.status) {\n                if (response.data && response.data.length) {\n                    for (let i = 0; i < response.data.length; i++) {\n                        const element = response.data[i]\n                        options.push({ label: _.capitalize(element.role), value: element._id })\n                    }\n                }\n            }\n\n            setRoles(exRoles => ({ ...exRoles, options: options }))\n        } catch (error) {\n            if (error) console.log(error)\n        }\n    }, [header])\n\n    useEffect(() => {\n        fetchData()\n    }, [header, fetchData])\n\n    // Handle role\n    const handleRole = event => {\n        setRoles(exRoles => ({ ...exRoles, value: event.value }))\n        clearErrors([\"role\"])\n    }\n\n    // Submit Form\n    const onSubmit = async (data) => {\n\n        if (!roles.value) {\n            return setError(\"role\", {\n                type: \"manual\",\n                message: \"Role is required!\"\n            })\n        }\n\n        let formData = { ...data, role: roles.value }\n\n        setLoading(true)\n        await Requests.Admin.Store(formData, header)\n        setLoading(false)\n    }\n\n\n    return (\n        <div className=\"admin-create pb-4\">\n            <div className=\"container-fluid\">\n                <div className=\"row\">\n                    <div className=\"col-12 col-padding\">\n                        <div className=\"card border-0 shadow-sm\">\n                            <div className=\"card-header p-3 p-lg-4 bg-white\">\n                                <div className=\"d-flex\">\n                                    <div><h6 className=\"mb-0\">Create Admin</h6></div>\n                                    <div className=\"ml-auto\">\n                                        <Link\n                                            to=\"/dashboard/admin\"\n                                            type=\"button\"\n                                            className=\"btn shadow-none rounded-circle\"\n                                        >\n                                            <Icon icon={chevronLeft} size={22} />\n                                        </Link>\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"card-body p-4\">\n                                <form onSubmit={handleSubmit(onSubmit)}>\n\n                                    <div className=\"row\">\n\n                                        {/* Name */}\n                                        <div className=\"col-12 col-lg-6\">\n                                            <div className=\"form-group mb-4\">\n                                                {errors.name && errors.name.message ? (\n                                                    <p className=\"text-danger\">{errors.name && errors.name.message}</p>\n                                                ) : <p>Name</p>}\n\n                                                <input\n                                                    type=\"text\"\n                                                    name=\"name\"\n                                                    className=\"form-control shadow-none\"\n                                                    placeholder=\"Enter name\"\n                                                    ref={register({\n                                                        required: \"Name is required\",\n                                                        minLength: {\n                                                            value: 5,\n                                                            message: \"Minimun length 5 character\"\n                                                        }\n                                                    })}\n                                                />\n                                            </div>\n                                        </div>\n\n                                        {/* E-mail */}\n                                        <div className=\"col-12 col-lg-6\">\n                                            <div className=\"form-group mb-4\">\n                                                {errors.email && errors.email.message ? (\n                                                    <p className=\"text-danger\">{errors.email && errors.email.message}</p>\n                                                ) : <p>E-mail</p>}\n\n                                                <input\n                                                    type=\"text\"\n                                                    name=\"email\"\n                                                    className=\"form-control shadow-none\"\n                                                    placeholder=\"Enter e-mail\"\n                                                    ref={register({\n                                                        required: \"E-mail is required\",\n                                                        pattern: {\n                                                            value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\n                                                            message: \"Invalid email address\"\n                                                        }\n                                                    })}\n                                                />\n                                            </div>\n                                        </div>\n\n                                        {/* Phone */}\n                                        <div className=\"col-12\">\n                                            <div className=\"form-group mb-4\">\n                                                {errors.phone && errors.phone.message ? (\n                                                    <p className=\"text-danger\">{errors.phone && errors.phone.message}</p>\n                                                ) : <p>Phone</p>}\n\n                                                <input\n                                                    type=\"text\"\n                                                    name=\"phone\"\n                                                    className=\"form-control shadow-none\"\n                                                    placeholder=\"Enter phone number\"\n                                                    ref={register({\n                                                        required: \"Phone number required\",\n                                                        pattern: {\n                                                            value: /^(?:\\+88|01)?\\d+$/,\n                                                            message: \"Phone number is not valid.\"\n                                                        }\n                                                    })}\n                                                />\n                                            </div>\n                                        </div>\n\n                                        {/* Present address */}\n                                        <div className=\"col-12\">\n                                            <div className=\"form-group mb-4\">\n                                                {errors.presentAddress && errors.presentAddress.message ? (\n                                                    <p className=\"text-danger\">{errors.presentAddress && errors.presentAddress.message}</p>\n                                                ) : <p>Present address</p>}\n\n                                                <input\n                                                    type=\"text\"\n                                                    name=\"presentAddress\"\n                                                    className=\"form-control shadow-none\"\n                                                    placeholder=\"Enter present address\"\n                                                    ref={register({\n                                                        required: \"Present address is required\"\n                                                    })}\n                                                />\n                                            </div>\n                                        </div>\n\n                                        {/* permanent address */}\n                                        <div className=\"col-12\">\n                                            <div className=\"form-group mb-4\">\n                                                {errors.permanentAddress && errors.permanentAddress.message ? (\n                                                    <p className=\"text-danger\">{errors.permanentAddress && errors.permanentAddress.message}</p>\n                                                ) : <p>Permanent address</p>}\n\n                                                <input\n                                                    type=\"text\"\n                                                    name=\"permanentAddress\"\n                                                    className=\"form-control shadow-none\"\n                                                    placeholder=\"Enter permanent address\"\n                                                    ref={register({\n                                                        required: \"Permanent address is required\"\n                                                    })}\n                                                />\n                                            </div>\n                                        </div>\n\n\n                                        {/* Role */}\n                                        <div className=\"col-12 col-lg-6\">\n                                            <div className=\"form-group mb-4\">\n                                                {errors.role && errors.role.message ?\n                                                    <p className=\"text-danger\">{errors.role && errors.role.message}</p>\n                                                    : <p>Role</p>}\n\n                                                <SingleSelect\n                                                    placeholder=\"role\"\n                                                    options={roles.options}\n                                                    value={data => handleRole(data)}\n                                                />\n                                            </div>\n                                        </div>\n\n\n                                        {/* Password */}\n                                        <div className=\"col-12 col-lg-6\">\n                                            <div className=\"form-group mb-4\">\n                                                {errors.password && errors.password.message ? (\n                                                    <p className=\"text-danger\">{errors.password && errors.password.message}</p>\n                                                ) : <p>Password</p>\n                                                }\n\n                                                <input\n                                                    type=\"password\"\n                                                    name=\"password\"\n                                                    className=\"form-control shadow-none\"\n                                                    placeholder=\"Enter password\"\n                                                    ref={register({\n                                                        required: \"Please enter password\",\n                                                        minLength: {\n                                                            value: 8,\n                                                            message: \"Minimun length 8 character\"\n                                                        }\n                                                    })}\n                                                />\n                                            </div>\n                                        </div>\n\n                                        <div className=\"col-12 text-right\">\n                                            <button type=\"submit\" className=\"btn shadow-none\" disabled={isLoading}>\n                                                {isLoading ? <span>Submitting...</span> : <span>Submit</span>}\n                                            </button>\n                                        </div>\n\n                                    </div>\n                                </form>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n        </div>\n    );\n};\n\nexport default Create;\n"]},"metadata":{},"sourceType":"module"}