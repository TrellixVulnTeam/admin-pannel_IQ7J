{"ast":null,"code":"var _jsxFileName = \"D:\\\\previous\\\\src\\\\pages\\\\category\\\\Edit.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useCallback } from 'react';\nimport Icon from 'react-icons-kit';\nimport { useForm } from 'react-hook-form';\nimport { Link, useParams } from 'react-router-dom';\nimport { chevronLeft, edit2 } from 'react-icons-kit/feather';\nimport { Container } from '../../components/container';\nimport { Card } from '../../components/card/Index';\nimport { CustomButton } from '../../components/button';\nimport { FileUploaderModal } from '../../components/fileUploader/Index';\nimport { ImageCard } from '../../components/image/imageCard';\nimport { PreLoader } from '../../components/loading/Index';\nimport { useWindowSize } from '../../components/window/windowSize';\nimport Requests from '../../utils/Requests/Index';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Edit = () => {\n  _s();\n\n  const {\n    register,\n    handleSubmit,\n    errors\n  } = useForm();\n  const size = useWindowSize();\n  const {\n    id,\n    type\n  } = useParams();\n  const [show, setShow] = useState(false);\n  const [isLoading, setLoading] = useState(true);\n  const [data, setData] = useState(null);\n  const [image, setImage] = useState(null);\n  const [isUpdate, setUpdate] = useState({\n    form: false,\n    image: false\n  });\n  const [header] = useState({\n    headers: {\n      Authorization: \"Bearer \" + localStorage.getItem('token')\n    }\n  }); // Fetch data\n\n  const fetchData = useCallback(async () => {\n    const response = await Requests.Category.Show(id, type, header);\n\n    if (response) {\n      setData(response.data);\n      setLoading(false);\n    }\n\n    setLoading(false);\n  }, [id, type, header]);\n  useEffect(() => {\n    fetchData();\n  }, [id, type, header, fetchData]); // handle banner update\n\n  const handleBannerUpdate = async file => {\n    let formData = new FormData();\n    formData.append(\"image\", file);\n    setUpdate({ ...isUpdate,\n      image: true\n    });\n    await Requests.Category.UpdateImage(id, type, formData, header);\n    setImage(URL.createObjectURL(file));\n    setUpdate({ ...isUpdate,\n      image: false\n    });\n    setShow(false);\n  }; // Submit Form\n\n\n  const onSubmit = async data => {\n    setUpdate({ ...isUpdate,\n      form: true\n    });\n    await Requests.Category.Update(id, type, data, header);\n    setUpdate({ ...isUpdate,\n      form: false\n    });\n  };\n\n  if (isLoading) return /*#__PURE__*/_jsxDEV(PreLoader, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 27\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"pb-4\",\n    children: [/*#__PURE__*/_jsxDEV(Container.Fluid, {\n      children: /*#__PURE__*/_jsxDEV(Container.Row, {\n        children: /*#__PURE__*/_jsxDEV(Container.Column, {\n          className: \"col-padding\",\n          children: /*#__PURE__*/_jsxDEV(Card.Simple, {\n            className: \"border-0\",\n            children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n              className: \"bg-white border-0 p-3 p-lg-4\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"d-flex\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  children: /*#__PURE__*/_jsxDEV(\"h6\", {\n                    className: \"mb-0\",\n                    children: \"Edit Category\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 71,\n                    columnNumber: 42\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 71,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"ml-auto\",\n                  children: /*#__PURE__*/_jsxDEV(Link, {\n                    to: \"/dashboard/category\",\n                    children: /*#__PURE__*/_jsxDEV(CustomButton, {\n                      className: \"btn-primary border-0 rounded-circle circle__padding\",\n                      children: /*#__PURE__*/_jsxDEV(Icon, {\n                        icon: chevronLeft,\n                        size: 22\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 75,\n                        columnNumber: 49\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 74,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 73,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 72,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n              className: \"px-4 pb-4 pt-0\",\n              children: /*#__PURE__*/_jsxDEV(\"form\", {\n                onSubmit: handleSubmit(onSubmit),\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"form-group mb-4\",\n                  children: [errors.name && errors.name.message ? /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"text-danger\",\n                    children: errors.name && errors.name.message\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 87,\n                    columnNumber: 45\n                  }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: \"Name\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 88,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    name: \"name\",\n                    className: \"form-control shadow-none\",\n                    placeholder: \"Enter category name\",\n                    defaultValue: data.name,\n                    ref: register({\n                      required: \"Name is required\"\n                    })\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 90,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 85,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(ImageCard, {\n                  width: size.width >= 576 ? 300 : \"100%\",\n                  height: 150,\n                  imgSrc: image || data.image,\n                  imgAlt: \"...\",\n                  actionBtn: true,\n                  btnType: \"edit-btn\",\n                  btnIcon: /*#__PURE__*/_jsxDEV(Icon, {\n                    icon: edit2,\n                    size: 20\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 108,\n                    columnNumber: 50\n                  }, this),\n                  onClick: () => setShow(true)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 101,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Container.Row, {\n                  children: /*#__PURE__*/_jsxDEV(Container.Column, {\n                    className: \"text-right pt-4\",\n                    children: /*#__PURE__*/_jsxDEV(CustomButton, {\n                      type: \"submit\",\n                      className: \"btn-primary border-0\",\n                      disabled: isUpdate.form,\n                      children: isUpdate.form ? \"Updating ...\" : \"Update\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 115,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 114,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 113,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FileUploaderModal, {\n      show: show,\n      loading: isUpdate.image,\n      title: \"Change Category Banner\",\n      onHide: () => setShow(false),\n      upload: file => handleBannerUpdate(file)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Edit, \"w1qg/t23e9eGKBHU8rKhcwvdGxI=\", false, function () {\n  return [useForm, useWindowSize, useParams];\n});\n\n_c = Edit;\nexport default Edit;\n\nvar _c;\n\n$RefreshReg$(_c, \"Edit\");","map":{"version":3,"sources":["D:/previous/src/pages/category/Edit.js"],"names":["React","useState","useEffect","useCallback","Icon","useForm","Link","useParams","chevronLeft","edit2","Container","Card","CustomButton","FileUploaderModal","ImageCard","PreLoader","useWindowSize","Requests","Edit","register","handleSubmit","errors","size","id","type","show","setShow","isLoading","setLoading","data","setData","image","setImage","isUpdate","setUpdate","form","header","headers","Authorization","localStorage","getItem","fetchData","response","Category","Show","handleBannerUpdate","file","formData","FormData","append","UpdateImage","URL","createObjectURL","onSubmit","Update","name","message","required","width"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useCallback } from 'react'\nimport Icon from 'react-icons-kit'\nimport { useForm } from 'react-hook-form'\nimport { Link, useParams } from 'react-router-dom'\nimport { chevronLeft, edit2 } from 'react-icons-kit/feather'\nimport { Container } from '../../components/container'\nimport { Card } from '../../components/card/Index'\nimport { CustomButton } from '../../components/button'\nimport { FileUploaderModal } from '../../components/fileUploader/Index'\nimport { ImageCard } from '../../components/image/imageCard'\nimport { PreLoader } from '../../components/loading/Index'\nimport { useWindowSize } from '../../components/window/windowSize'\nimport Requests from '../../utils/Requests/Index'\n\nconst Edit = () => {\n    const { register, handleSubmit, errors } = useForm()\n    const size = useWindowSize()\n    const { id, type } = useParams()\n    const [show, setShow] = useState(false)\n    const [isLoading, setLoading] = useState(true)\n    const [data, setData] = useState(null)\n    const [image, setImage] = useState(null)\n    const [isUpdate, setUpdate] = useState({ form: false, image: false })\n    const [header] = useState({\n        headers: { Authorization: \"Bearer \" + localStorage.getItem('token') }\n    })\n\n    // Fetch data\n    const fetchData = useCallback(async () => {\n        const response = await Requests.Category.Show(id, type, header)\n        if (response) {\n            setData(response.data)\n            setLoading(false)\n        }\n        setLoading(false)\n    }, [id, type, header])\n\n    useEffect(() => {\n        fetchData()\n    }, [id, type, header, fetchData])\n\n    // handle banner update\n    const handleBannerUpdate = async (file) => {\n        let formData = new FormData()\n        formData.append(\"image\", file)\n        setUpdate({ ...isUpdate, image: true })\n\n        await Requests.Category.UpdateImage(id, type, formData, header)\n        setImage(URL.createObjectURL(file))\n        setUpdate({ ...isUpdate, image: false })\n        setShow(false)\n    }\n\n    // Submit Form\n    const onSubmit = async (data) => {\n        setUpdate({ ...isUpdate, form: true })\n        await Requests.Category.Update(id, type, data, header)\n        setUpdate({ ...isUpdate, form: false })\n    }\n\n    if (isLoading) return <PreLoader />\n\n    return (\n        <div className=\"pb-4\">\n            <Container.Fluid>\n                <Container.Row>\n                    <Container.Column className=\"col-padding\">\n                        <Card.Simple className=\"border-0\">\n                            <Card.Header className=\"bg-white border-0 p-3 p-lg-4\">\n                                <div className=\"d-flex\">\n                                    <div><h6 className=\"mb-0\">Edit Category</h6></div>\n                                    <div className=\"ml-auto\">\n                                        <Link to=\"/dashboard/category\">\n                                            <CustomButton className=\"btn-primary border-0 rounded-circle circle__padding\">\n                                                <Icon icon={chevronLeft} size={22} />\n                                            </CustomButton>\n                                        </Link>\n                                    </div>\n                                </div>\n                            </Card.Header>\n                            <Card.Body className=\"px-4 pb-4 pt-0\">\n                                <form onSubmit={handleSubmit(onSubmit)}>\n\n                                    {/* Name */}\n                                    <div className=\"form-group mb-4\">\n                                        {errors.name && errors.name.message ? (\n                                            <p className=\"text-danger\">{errors.name && errors.name.message}</p>\n                                        ) : <p>Name</p>}\n\n                                        <input\n                                            type=\"text\"\n                                            name=\"name\"\n                                            className=\"form-control shadow-none\"\n                                            placeholder=\"Enter category name\"\n                                            defaultValue={data.name}\n                                            ref={register({ required: \"Name is required\" })}\n                                        />\n                                    </div>\n\n                                    {/* Image show card */}\n                                    <ImageCard\n                                        width={size.width >= 576 ? 300 : \"100%\"}\n                                        height={150}\n                                        imgSrc={image || data.image}\n                                        imgAlt={\"...\"}\n                                        actionBtn\n                                        btnType=\"edit-btn\"\n                                        btnIcon={<Icon icon={edit2} size={20} />}\n                                        onClick={() => setShow(true)}\n                                    />\n\n                                    {/* Submit button */}\n                                    <Container.Row>\n                                        <Container.Column className=\"text-right pt-4\">\n                                            <CustomButton\n                                                type=\"submit\"\n                                                className=\"btn-primary border-0\"\n                                                disabled={isUpdate.form}\n                                            >{isUpdate.form ? \"Updating ...\" : \"Update\"}</CustomButton>\n                                        </Container.Column>\n                                    </Container.Row>\n                                </form>\n                            </Card.Body>\n                        </Card.Simple>\n                    </Container.Column>\n                </Container.Row>\n            </Container.Fluid>\n\n            {/* Image uploader modal*/}\n            <FileUploaderModal\n                show={show}\n                loading={isUpdate.image}\n                title=\"Change Category Banner\"\n                onHide={() => setShow(false)}\n                upload={file => handleBannerUpdate(file)}\n            />\n        </div>\n    );\n}\n\nexport default Edit;\n"]},"metadata":{},"sourceType":"module"}