{"ast":null,"code":"var _jsxFileName = \"D:\\\\previous\\\\src\\\\pages\\\\product\\\\EditSlug.js\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useState, useEffect } from 'react';\nimport Icon from 'react-icons-kit';\nimport { Form } from 'react-bootstrap';\nimport { useForm } from 'react-hook-form';\nimport { useParams } from 'react-router';\nimport { Link } from 'react-router-dom';\nimport { chevronLeft } from 'react-icons-kit/feather';\nimport { Container } from '../../components/container';\nimport { Card } from '../../components/card/Index';\nimport { CustomButton } from '../../components/button';\nimport { PreLoader } from '../../components/loading/Index';\nimport { NoContent } from '../../components/204/NoContent';\nimport { NetworkError } from '../../components/501/NetworkError';\nimport Requests from '../../utils/Requests/Index';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst EditSlug = () => {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  const {\n    register,\n    handleSubmit,\n    errors\n  } = useForm();\n  const [data, setData] = useState({});\n  const [show, setShow] = useState(false);\n  const [isUpdate, setUpdate] = useState(false);\n  const [isLoading, setLoading] = useState(true);\n  const [serverErr, setServerErr] = useState(false);\n  const [header] = useState({\n    headers: {\n      Authorization: \"Bearer \" + localStorage.getItem('token')\n    }\n  }); // Fetch Data \n\n  const fetchData = useCallback(async () => {\n    try {\n      const response = await Requests.Product.Show(id, header);\n\n      if (response && response.status === 200) {\n        setData(response.data.product);\n      }\n\n      setLoading(false);\n    } catch (error) {\n      if (error) {\n        setLoading(false);\n        setServerErr(true);\n      }\n    }\n  }, [id, header]);\n  useEffect(() => {\n    fetchData();\n  }, [id, header, fetchData]); // handle submit\n\n  const onSubmit = async data => {\n    try {\n      setUpdate(true);\n      await Requests.Product.ChangeSlug(id, data, header);\n      setUpdate(false);\n    } catch (error) {\n      if (error) setUpdate(false);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container.Fluid, {\n    children: /*#__PURE__*/_jsxDEV(Container.Row, {\n      children: [isLoading && !serverErr && !Object.keys(data).length ? /*#__PURE__*/_jsxDEV(PreLoader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 73\n      }, this) : null, !isLoading && !serverErr && !Object.keys(data).length ? /*#__PURE__*/_jsxDEV(NoContent, {\n        message: \"No content availavle!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 74\n      }, this) : null, !isLoading && serverErr && !Object.keys(data).length ? /*#__PURE__*/_jsxDEV(NetworkError, {\n        message: \"Network Error!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 73\n      }, this) : null, !isLoading && !serverErr && Object.keys(data).length ? /*#__PURE__*/_jsxDEV(Container.Column, {\n        className: \"col-padding\",\n        children: /*#__PURE__*/_jsxDEV(Card.Simple, {\n          className: \"border-0 shadow-sm rounded\",\n          children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n            className: \"bg-white rounded border-0 p-4\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"d-flex\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(\"h6\", {\n                  className: \"mb-0\",\n                  children: \"Edit product slug\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 75,\n                  columnNumber: 42\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"ml-auto\",\n                children: /*#__PURE__*/_jsxDEV(Link, {\n                  to: \"/dashboard/product\",\n                  children: /*#__PURE__*/_jsxDEV(CustomButton, {\n                    className: \"btn-primary rounded-circle circle__padding border-0\",\n                    children: /*#__PURE__*/_jsxDEV(Icon, {\n                      icon: chevronLeft,\n                      size: 22\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 79,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 78,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 77,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n            className: \"px-4 pb-4\",\n            children: /*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: handleSubmit(onSubmit),\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group mb-4\",\n                children: [errors.slug && errors.slug.message ? /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text-danger\",\n                  children: errors.slug && errors.slug.message\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 91,\n                  columnNumber: 45\n                }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: \"Slug\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 92,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  name: \"slug\",\n                  defaultValue: data.slug || null,\n                  className: \"form-control shadow-none\",\n                  placeholder: \"Enter custom slug\",\n                  ref: register({\n                    required: \"Slug is required\"\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 95,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n                className: \"pl-3\",\n                children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                  className: \"font-13 text-muted\",\n                  children: /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"mb-0\",\n                    children: \"Don't remove number from slug.\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 107,\n                    columnNumber: 76\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 107,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                  className: \"font-13 text-muted\",\n                  children: /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"mb-0\",\n                    children: \"Don't remove ( - ) from slug.\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 108,\n                    columnNumber: 76\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 108,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                  className: \"font-13 text-muted\",\n                  children: /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"mb-0\",\n                    children: \"Don't use white space in slug.\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 109,\n                    columnNumber: 76\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 109,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                  className: \"font-13 text-muted\",\n                  children: /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"mb-0\",\n                    children: \"Don't use ( /, #, &, *, %, !, ~, (,) @ ) in slug.\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 110,\n                    columnNumber: 76\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 110,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group mb-4\",\n                children: /*#__PURE__*/_jsxDEV(Form.Check, {\n                  type: \"checkbox\",\n                  id: \"slug-change-checkbox\",\n                  label: \"Are you sure? Want to change this slug.\",\n                  className: \"font-14\",\n                  onClick: () => setShow(!show)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 115,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 37\n              }, this), show ? /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-right\",\n                children: /*#__PURE__*/_jsxDEV(CustomButton, {\n                  type: \"submit\",\n                  disabled: isUpdate,\n                  children: isUpdate ? \"Loading...\" : \"Submit Changes\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 127,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 41\n              }, this) : null]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 21\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 9\n  }, this);\n};\n\n_s(EditSlug, \"PKbChbJLKgK3FexlBnYiQVrcFNw=\", false, function () {\n  return [useParams, useForm];\n});\n\n_c = EditSlug;\nexport default EditSlug;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditSlug\");","map":{"version":3,"sources":["D:/previous/src/pages/product/EditSlug.js"],"names":["React","useCallback","useState","useEffect","Icon","Form","useForm","useParams","Link","chevronLeft","Container","Card","CustomButton","PreLoader","NoContent","NetworkError","Requests","EditSlug","id","register","handleSubmit","errors","data","setData","show","setShow","isUpdate","setUpdate","isLoading","setLoading","serverErr","setServerErr","header","headers","Authorization","localStorage","getItem","fetchData","response","Product","Show","status","product","error","onSubmit","ChangeSlug","Object","keys","length","slug","message","required"],"mappings":"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","sourcesContent":["import React, { useCallback, useState, useEffect } from 'react'\nimport Icon from 'react-icons-kit'\nimport { Form } from 'react-bootstrap'\nimport { useForm } from 'react-hook-form'\nimport { useParams } from 'react-router'\nimport { Link } from 'react-router-dom'\nimport { chevronLeft } from 'react-icons-kit/feather'\n\nimport { Container } from '../../components/container'\nimport { Card } from '../../components/card/Index'\nimport { CustomButton } from '../../components/button'\nimport { PreLoader } from '../../components/loading/Index'\nimport { NoContent } from '../../components/204/NoContent'\nimport { NetworkError } from '../../components/501/NetworkError'\nimport Requests from '../../utils/Requests/Index'\n\n\nconst EditSlug = () => {\n    const { id } = useParams()\n    const { register, handleSubmit, errors } = useForm()\n    const [data, setData] = useState({})\n    const [show, setShow] = useState(false)\n    const [isUpdate, setUpdate] = useState(false)\n    const [isLoading, setLoading] = useState(true)\n    const [serverErr, setServerErr] = useState(false)\n    const [header] = useState({\n        headers: { Authorization: \"Bearer \" + localStorage.getItem('token') }\n    })\n\n    // Fetch Data \n    const fetchData = useCallback(async () => {\n        try {\n            const response = await Requests.Product.Show(id, header)\n            if (response && response.status === 200) {\n                setData(response.data.product)\n            }\n            setLoading(false)\n        } catch (error) {\n            if (error) {\n                setLoading(false)\n                setServerErr(true)\n            }\n        }\n    }, [id, header])\n\n    useEffect(() => {\n        fetchData()\n    }, [id, header, fetchData])\n\n\n    // handle submit\n    const onSubmit = async (data) => {\n        try {\n            setUpdate(true)\n            await Requests.Product.ChangeSlug(id, data, header)\n            setUpdate(false)\n        } catch (error) {\n            if (error) setUpdate(false)\n        }\n    }\n\n    return (\n        <Container.Fluid>\n            <Container.Row>\n\n                {isLoading && !serverErr && !Object.keys(data).length ? <PreLoader /> : null}\n                {!isLoading && !serverErr && !Object.keys(data).length ? <NoContent message=\"No content availavle!\" /> : null}\n                {!isLoading && serverErr && !Object.keys(data).length ? <NetworkError message=\"Network Error!\" /> : null}\n\n                {!isLoading && !serverErr && Object.keys(data).length ?\n                    <Container.Column className=\"col-padding\">\n                        <Card.Simple className=\"border-0 shadow-sm rounded\">\n                            <Card.Header className=\"bg-white rounded border-0 p-4\">\n                                <div className=\"d-flex\">\n                                    <div><h6 className=\"mb-0\">Edit product slug</h6></div>\n                                    <div className=\"ml-auto\">\n                                        <Link to=\"/dashboard/product\">\n                                            <CustomButton className=\"btn-primary rounded-circle circle__padding border-0\">\n                                                <Icon icon={chevronLeft} size={22} />\n                                            </CustomButton>\n                                        </Link>\n                                    </div>\n                                </div>\n                            </Card.Header>\n                            <Card.Body className=\"px-4 pb-4\">\n                                <form onSubmit={handleSubmit(onSubmit)}>\n\n                                    {/* slug */}\n                                    <div className=\"form-group mb-4\">\n                                        {errors.slug && errors.slug.message ?\n                                            <p className=\"text-danger\">{errors.slug && errors.slug.message}</p> :\n                                            <p>Slug</p>\n                                        }\n\n                                        <input\n                                            type=\"text\"\n                                            name=\"slug\"\n                                            defaultValue={data.slug || null}\n                                            className=\"form-control shadow-none\"\n                                            placeholder=\"Enter custom slug\"\n                                            ref={register({ required: \"Slug is required\" })}\n                                        />\n                                    </div>\n\n                                    {/* Slug change hints */}\n                                    <ol className=\"pl-3\">\n                                        <li className=\"font-13 text-muted\"><p className=\"mb-0\">Don't remove number from slug.</p></li>\n                                        <li className=\"font-13 text-muted\"><p className=\"mb-0\">Don't remove ( - ) from slug.</p></li>\n                                        <li className=\"font-13 text-muted\"><p className=\"mb-0\">Don't use white space in slug.</p></li>\n                                        <li className=\"font-13 text-muted\"><p className=\"mb-0\">Don't use ( /, #, &, *, %, !, ~, (,) @ ) in slug.</p></li>\n                                    </ol>\n\n                                    {/* Confirmation checkbox */}\n                                    <div className=\"form-group mb-4\">\n                                        <Form.Check\n                                            type=\"checkbox\"\n                                            id=\"slug-change-checkbox\"\n                                            label=\"Are you sure? Want to change this slug.\"\n                                            className=\"font-14\"\n                                            onClick={() => setShow(!show)}\n                                        />\n                                    </div>\n\n                                    {/* Submit button */}\n                                    {show ?\n                                        <div className=\"text-right\">\n                                            <CustomButton\n                                                type=\"submit\"\n                                                disabled={isUpdate}\n                                            >{isUpdate ? \"Loading...\" : \"Submit Changes\"}</CustomButton>\n                                        </div>\n                                        : null\n                                    }\n                                </form>\n                            </Card.Body>\n                        </Card.Simple>\n                    </Container.Column>\n                    : null\n                }\n            </Container.Row>\n        </Container.Fluid>\n    )\n}\n\nexport default EditSlug"]},"metadata":{},"sourceType":"module"}