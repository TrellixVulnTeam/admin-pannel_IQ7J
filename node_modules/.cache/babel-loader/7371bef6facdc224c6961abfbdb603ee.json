{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react'; // Hook\n\nexport const useWindowSize = () => {\n  _s();\n\n  // Initialize state with undefined width/height so server and client renders match\n  // Learn more here: https://joshwcomeau.com/react/the-perils-of-rehydration/\n  const [windowSize, setWindowSize] = useState({\n    width: undefined,\n    height: undefined\n  });\n  useEffect(() => {\n    // only execute all the code below in client side\n    if (typeof window !== 'undefined') {\n      // Handler to call on window resize\n      function handleResize() {\n        // Set window width/height to state\n        setWindowSize({\n          width: window.innerWidth,\n          height: window.innerHeight\n        });\n      } // Add event listener\n\n\n      window.addEventListener(\"resize\", handleResize); // Call handler right away so state gets updated with initial window size\n\n      handleResize(); // Remove event listener on cleanup\n\n      return () => window.removeEventListener(\"resize\", handleResize);\n    }\n  }, []); // Empty array ensures that effect is only run on mount\n\n  return windowSize;\n};\n\n_s(useWindowSize, \"Lx6dFCJt7Ze4WyzsCH5RzM+GN9Y=\");","map":{"version":3,"sources":["D:/previous/src/components/window/windowSize.js"],"names":["useState","useEffect","useWindowSize","windowSize","setWindowSize","width","undefined","height","window","handleResize","innerWidth","innerHeight","addEventListener","removeEventListener"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC,C,CAEA;;AACA,OAAO,MAAMC,aAAa,GAAG,MAAM;AAAA;;AAC/B;AACA;AACA,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BJ,QAAQ,CAAC;AACzCK,IAAAA,KAAK,EAAEC,SADkC;AAEzCC,IAAAA,MAAM,EAAED;AAFiC,GAAD,CAA5C;AAKAL,EAAAA,SAAS,CAAC,MAAM;AACZ;AACA,QAAI,OAAOO,MAAP,KAAkB,WAAtB,EAAmC;AAC/B;AACA,eAASC,YAAT,GAAwB;AACpB;AACAL,QAAAA,aAAa,CAAC;AACVC,UAAAA,KAAK,EAAEG,MAAM,CAACE,UADJ;AAEVH,UAAAA,MAAM,EAAEC,MAAM,CAACG;AAFL,SAAD,CAAb;AAIH,OAR8B,CAU/B;;;AACAH,MAAAA,MAAM,CAACI,gBAAP,CAAwB,QAAxB,EAAkCH,YAAlC,EAX+B,CAa/B;;AACAA,MAAAA,YAAY,GAdmB,CAgB/B;;AACA,aAAO,MAAMD,MAAM,CAACK,mBAAP,CAA2B,QAA3B,EAAqCJ,YAArC,CAAb;AACH;AACJ,GArBQ,EAqBN,EArBM,CAAT,CAR+B,CA6BvB;;AACR,SAAON,UAAP;AACH,CA/BM;;GAAMD,a","sourcesContent":["import { useState, useEffect } from 'react'\n\n// Hook\nexport const useWindowSize = () => {\n    // Initialize state with undefined width/height so server and client renders match\n    // Learn more here: https://joshwcomeau.com/react/the-perils-of-rehydration/\n    const [windowSize, setWindowSize] = useState({\n        width: undefined,\n        height: undefined,\n    });\n\n    useEffect(() => {\n        // only execute all the code below in client side\n        if (typeof window !== 'undefined') {\n            // Handler to call on window resize\n            function handleResize() {\n                // Set window width/height to state\n                setWindowSize({\n                    width: window.innerWidth,\n                    height: window.innerHeight,\n                });\n            }\n\n            // Add event listener\n            window.addEventListener(\"resize\", handleResize);\n\n            // Call handler right away so state gets updated with initial window size\n            handleResize();\n\n            // Remove event listener on cleanup\n            return () => window.removeEventListener(\"resize\", handleResize);\n        }\n    }, []); // Empty array ensures that effect is only run on mount\n    return windowSize;\n}"]},"metadata":{},"sourceType":"module"}