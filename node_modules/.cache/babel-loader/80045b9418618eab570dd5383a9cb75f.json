{"ast":null,"code":"import { toast, Slide } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nconst toastSetting = {\n  autoClose: 2000,\n  transition: Slide,\n  position: \"top-right\",\n  hideProgressBar: false,\n  closeOnClick: true,\n  pauseOnHover: true,\n  draggable: true,\n  progress: undefined\n};\nexport const errorHandeller = error => {\n  const errorResponse = error && error.response ? error.response.data : null;\n\n  if (error && error.response && error.response.data && error.response.status === 422) {\n    Object.values(error.response.data).map(value => {\n      return toast.error(value, { ...toastSetting\n      });\n    });\n  }\n\n  if (errorResponse) {\n    if (errorResponse.message === 'unauthorized request') {\n      toast.error(errorResponse.message + ' Logging out...', { ...toastSetting\n      });\n      setTimeout(() => {\n        localStorage.clear();\n        window.location.reload();\n      }, 2000);\n    } else if (errorResponse.message === 'Token expired') {\n      toast.error(error.message + ' Logging out...', { ...toastSetting\n      });\n      setTimeout(() => {\n        localStorage.clear();\n        window.location.reload();\n      }, 2000);\n    } else {\n      return toast.error(errorResponse.message, { ...toastSetting\n      });\n    }\n  }\n};","map":{"version":3,"sources":["D:/previous/src/utils/Requests/Error.js"],"names":["toast","Slide","toastSetting","autoClose","transition","position","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","errorHandeller","error","errorResponse","response","data","status","Object","values","map","value","message","setTimeout","localStorage","clear","window","location","reload"],"mappings":"AACA,SAASA,KAAT,EAAgBC,KAAhB,QAA6B,gBAA7B;AACA,OAAO,uCAAP;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,SAAS,EAAE,IADM;AAEjBC,EAAAA,UAAU,EAAEH,KAFK;AAGjBI,EAAAA,QAAQ,EAAE,WAHO;AAIjBC,EAAAA,eAAe,EAAE,KAJA;AAKjBC,EAAAA,YAAY,EAAE,IALG;AAMjBC,EAAAA,YAAY,EAAE,IANG;AAOjBC,EAAAA,SAAS,EAAE,IAPM;AAQjBC,EAAAA,QAAQ,EAAEC;AARO,CAArB;AAWA,OAAO,MAAMC,cAAc,GAAGC,KAAK,IAAI;AACnC,QAAMC,aAAa,GAAGD,KAAK,IAAIA,KAAK,CAACE,QAAf,GAA0BF,KAAK,CAACE,QAAN,CAAeC,IAAzC,GAAgD,IAAtE;;AAEA,MAAIH,KAAK,IAAIA,KAAK,CAACE,QAAf,IAA2BF,KAAK,CAACE,QAAN,CAAeC,IAA1C,IAAkDH,KAAK,CAACE,QAAN,CAAeE,MAAf,KAA0B,GAAhF,EAAqF;AACjFC,IAAAA,MAAM,CAACC,MAAP,CAAcN,KAAK,CAACE,QAAN,CAAeC,IAA7B,EAAmCI,GAAnC,CAAuCC,KAAK,IAAI;AAC5C,aAAOrB,KAAK,CAACa,KAAN,CAAYQ,KAAZ,EAAmB,EAAE,GAAGnB;AAAL,OAAnB,CAAP;AACH,KAFD;AAGH;;AAED,MAAIY,aAAJ,EAAmB;AACf,QAAIA,aAAa,CAACQ,OAAd,KAA0B,sBAA9B,EAAsD;AAClDtB,MAAAA,KAAK,CAACa,KAAN,CAAYC,aAAa,CAACQ,OAAd,GAAwB,iBAApC,EAAuD,EAAE,GAAGpB;AAAL,OAAvD;AAEAqB,MAAAA,UAAU,CAAC,MAAM;AACbC,QAAAA,YAAY,CAACC,KAAb;AACAC,QAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB;AACH,OAHS,EAGP,IAHO,CAAV;AAIH,KAPD,MAOO,IAAId,aAAa,CAACQ,OAAd,KAA0B,eAA9B,EAA+C;AAClDtB,MAAAA,KAAK,CAACa,KAAN,CAAYA,KAAK,CAACS,OAAN,GAAgB,iBAA5B,EAA+C,EAAE,GAAGpB;AAAL,OAA/C;AAEAqB,MAAAA,UAAU,CAAC,MAAM;AACbC,QAAAA,YAAY,CAACC,KAAb;AACAC,QAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB;AACH,OAHS,EAGP,IAHO,CAAV;AAIH,KAPM,MAOA;AACH,aAAO5B,KAAK,CAACa,KAAN,CAAYC,aAAa,CAACQ,OAA1B,EAAmC,EAAE,GAAGpB;AAAL,OAAnC,CAAP;AACH;AACJ;AAGJ,CA9BM","sourcesContent":["\nimport { toast, Slide } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'\n\nconst toastSetting = {\n    autoClose: 2000,\n    transition: Slide,\n    position: \"top-right\",\n    hideProgressBar: false,\n    closeOnClick: true,\n    pauseOnHover: true,\n    draggable: true,\n    progress: undefined\n}\n\nexport const errorHandeller = error => {\n    const errorResponse = error && error.response ? error.response.data : null\n\n    if (error && error.response && error.response.data && error.response.status === 422) {\n        Object.values(error.response.data).map(value => {\n            return toast.error(value, { ...toastSetting })\n        })\n    }\n\n    if (errorResponse) {\n        if (errorResponse.message === 'unauthorized request') {\n            toast.error(errorResponse.message + ' Logging out...', { ...toastSetting })\n\n            setTimeout(() => {\n                localStorage.clear()\n                window.location.reload()\n            }, 2000)\n        } else if (errorResponse.message === 'Token expired') {\n            toast.error(error.message + ' Logging out...', { ...toastSetting })\n\n            setTimeout(() => {\n                localStorage.clear()\n                window.location.reload()\n            }, 2000)\n        } else {\n            return toast.error(errorResponse.message, { ...toastSetting })\n        }\n    }\n\n\n}\n"]},"metadata":{},"sourceType":"module"}