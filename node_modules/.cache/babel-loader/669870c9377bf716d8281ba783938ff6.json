{"ast":null,"code":"var _jsxFileName = \"D:\\\\previous\\\\src\\\\pages\\\\master\\\\Index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport \"./style.scss\";\nimport jwtDecode from \"jwt-decode\";\nimport { Switch, Route } from \"react-router-dom\";\nimport { routes } from \"../../routes/Index\";\nimport Layout from \"../../components/layout/Index\";\nimport FourOFour from \"../fourOfour/Index\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Index = () => {\n  _s();\n\n  const [permitted, setPermitted] = useState([]);\n  useEffect(() => {\n    const token = localStorage.getItem(\"token\");\n\n    if (token) {\n      const decode = jwtDecode(token);\n      const permissions = decode.permissions; // Filter permitted routes from given permissions\n\n      if (routes && routes.length) {\n        const isAll = permissions.find(item => item === \"all\");\n\n        if (isAll) {\n          return setPermitted(routes);\n        } else {\n          const permittedRoutes = routes.filter(_ref => {\n            let {\n              name: routeName\n            } = _ref;\n            return permissions.some(x => x === routeName);\n          });\n          setPermitted(permittedRoutes);\n        }\n      }\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"master\",\n    children: [/*#__PURE__*/_jsxDEV(Layout, {\n      routes: permitted\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main\",\n      children: /*#__PURE__*/_jsxDEV(Switch, {\n        children: [permitted && permitted.map((item, i) => item.name && item.path ? /*#__PURE__*/_jsxDEV(Route, {\n          exact: item.exact,\n          path: item.path,\n          component: item.component\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 17\n        }, this) : item.child && item.child.length ? item.child.map((child, j) => child.path ? /*#__PURE__*/_jsxDEV(Route, {\n          exact: child.exact,\n          path: child.path,\n          component: child.component\n        }, j, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this) : child.child && child.child.length ? child.child.map((leaf, k) => /*#__PURE__*/_jsxDEV(Route, {\n          exact: leaf.exact,\n          path: leaf.path,\n          component: leaf.component\n        }, k, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 23\n        }, this)) : null) : null), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"*\",\n          component: FourOFour\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Index, \"i6oJFq591ApI8zXDOSPp3CSvMP0=\");\n\n_c = Index;\nexport default Index;\n\nvar _c;\n\n$RefreshReg$(_c, \"Index\");","map":{"version":3,"sources":["D:/previous/src/pages/master/Index.js"],"names":["React","useEffect","useState","jwtDecode","Switch","Route","routes","Layout","FourOFour","Index","permitted","setPermitted","token","localStorage","getItem","decode","permissions","length","isAll","find","item","permittedRoutes","filter","name","routeName","some","x","map","i","path","exact","component","child","j","leaf","k"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"./style.scss\";\nimport jwtDecode from \"jwt-decode\";\nimport { Switch, Route } from \"react-router-dom\";\nimport { routes } from \"../../routes/Index\";\n\nimport Layout from \"../../components/layout/Index\";\nimport FourOFour from \"../fourOfour/Index\";\n\nconst Index = () => {\n  const [permitted, setPermitted] = useState([]);\n\n  useEffect(() => {\n    const token = localStorage.getItem(\"token\");\n    if (token) {\n      const decode = jwtDecode(token);\n      const permissions = decode.permissions;\n\n      // Filter permitted routes from given permissions\n      if (routes && routes.length) {\n        const isAll = permissions.find((item) => item === \"all\");\n\n        if (isAll) {\n          return setPermitted(routes);\n        } else {\n          const permittedRoutes = routes.filter(({ name: routeName }) =>\n            permissions.some((x) => x === routeName)\n          );\n          setPermitted(permittedRoutes);\n        }\n      }\n    }\n  }, []);\n\n  return (\n    <div className=\"master\">\n      <Layout routes={permitted} />\n      <div className=\"main\">\n        <Switch>\n          {permitted &&\n            permitted.map((item, i) =>\n              item.name && item.path ? (\n                <Route\n                  key={i}\n                  exact={item.exact}\n                  path={item.path}\n                  component={item.component}\n                />\n              ) : item.child && item.child.length ? (\n                item.child.map((child, j) =>\n                  child.path ? (\n                    <Route\n                      key={j}\n                      exact={child.exact}\n                      path={child.path}\n                      component={child.component}\n                    />\n                  ) : child.child && child.child.length ? (\n                    child.child.map((leaf, k) => (\n                      <Route\n                        key={k}\n                        exact={leaf.exact}\n                        path={leaf.path}\n                        component={leaf.component}\n                      />\n                    ))\n                  ) : null\n                )\n              ) : null\n            )}\n\n          {/* {permitted && permitted.map((item, i) =>\n                        item.name && item.path ?\n                            <Route\n                                key={i}\n                                exact={item.exact}\n                                path={item.path}\n                                component={item.component}\n                            />\n                            : item.child && item.child.length ? item.child.map((child, j) =>\n                                <Route\n                                    key={j}\n                                    exact={child.exact}\n                                    path={child.path}\n                                    component={child.component}\n                                />\n                            ) : null)\n                    } */}\n\n          <Route path=\"*\" component={FourOFour} />\n        </Switch>\n      </div>\n    </div>\n  );\n};\n\nexport default Index;\n"]},"metadata":{},"sourceType":"module"}