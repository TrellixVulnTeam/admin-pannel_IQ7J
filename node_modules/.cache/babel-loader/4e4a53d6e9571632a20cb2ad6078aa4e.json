{"ast":null,"code":"import Axios from 'axios';\nimport { api } from '../api';\nimport { toast } from 'react-toastify';\nimport { errorHandeller } from './Error';\nimport 'react-toastify/dist/ReactToastify.css';\ntoast.configure({\n  autoClose: 2000\n}); // List of Ratings & Reviews\n\nconst Index = async (page, limit, header) => {\n  try {\n    const response = await Axios.get(`${api}rating-review?page=${page}&limit=${limit}`, header);\n    if (response.status === 200) return response.data;\n  } catch (error) {\n    if (error) return errorHandeller(error);\n  }\n}; // Update specific review\n\n\n_c = Index;\n\nconst Update = async (id, status, header) => {\n  try {\n    const response = await Axios.post(`${api}rating-review/${id}`, {\n      status\n    }, header);\n\n    if (response.status === 201) {\n      toast.success(response.data.message);\n      return true;\n    }\n  } catch (error) {\n    if (error) return errorHandeller(error);\n  }\n}; // Delete specific review\n\n\n_c2 = Update;\n\nconst Delete = async (id, header) => {\n  try {\n    const response = await Axios.delete(`${api}rating-review/${id}`, header);\n\n    if (response.status === 200) {\n      toast.success(response.data.message);\n      return true;\n    }\n  } catch (error) {\n    if (error) return errorHandeller(error);\n  }\n}; // Filter items\n\n\n_c3 = Delete;\n\nconst FilterItems = async (value, field, header) => {\n  try {\n    const response = await Axios.get(`${api}rating-review/filter?value=${value}&field=${field}`, header);\n    if (response.status === 200) return response.data;\n  } catch (error) {\n    if (error) return errorHandeller(error);\n  }\n};\n\n_c4 = FilterItems;\nconst RatingReview = {\n  Index,\n  Update,\n  Delete,\n  FilterItems\n};\nexport default RatingReview;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"Index\");\n$RefreshReg$(_c2, \"Update\");\n$RefreshReg$(_c3, \"Delete\");\n$RefreshReg$(_c4, \"FilterItems\");","map":{"version":3,"sources":["D:/previous/src/utils/Requests/RatingReview.js"],"names":["Axios","api","toast","errorHandeller","configure","autoClose","Index","page","limit","header","response","get","status","data","error","Update","id","post","success","message","Delete","delete","FilterItems","value","field","RatingReview"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,QAAoB,QAApB;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,SAASC,cAAT,QAA+B,SAA/B;AACA,OAAO,uCAAP;AACAD,KAAK,CAACE,SAAN,CAAgB;AAAEC,EAAAA,SAAS,EAAE;AAAb,CAAhB,E,CAEA;;AACA,MAAMC,KAAK,GAAG,OAAOC,IAAP,EAAaC,KAAb,EAAoBC,MAApB,KAA+B;AACzC,MAAI;AACA,UAAMC,QAAQ,GAAG,MAAMV,KAAK,CAACW,GAAN,CAAW,GAAEV,GAAI,sBAAqBM,IAAK,UAASC,KAAM,EAA1D,EAA6DC,MAA7D,CAAvB;AACA,QAAIC,QAAQ,CAACE,MAAT,KAAoB,GAAxB,EAA6B,OAAOF,QAAQ,CAACG,IAAhB;AAChC,GAHD,CAGE,OAAOC,KAAP,EAAc;AACZ,QAAIA,KAAJ,EAAW,OAAOX,cAAc,CAACW,KAAD,CAArB;AACd;AACJ,CAPD,C,CASA;;;KATMR,K;;AAUN,MAAMS,MAAM,GAAG,OAAOC,EAAP,EAAWJ,MAAX,EAAmBH,MAAnB,KAA8B;AACzC,MAAI;AACA,UAAMC,QAAQ,GAAG,MAAMV,KAAK,CAACiB,IAAN,CAAY,GAAEhB,GAAI,iBAAgBe,EAAG,EAArC,EAAwC;AAAEJ,MAAAA;AAAF,KAAxC,EAAoDH,MAApD,CAAvB;;AACA,QAAIC,QAAQ,CAACE,MAAT,KAAoB,GAAxB,EAA6B;AACzBV,MAAAA,KAAK,CAACgB,OAAN,CAAcR,QAAQ,CAACG,IAAT,CAAcM,OAA5B;AACA,aAAO,IAAP;AACH;AACJ,GAND,CAME,OAAOL,KAAP,EAAc;AACZ,QAAIA,KAAJ,EAAW,OAAOX,cAAc,CAACW,KAAD,CAArB;AACd;AACJ,CAVD,C,CAYA;;;MAZMC,M;;AAaN,MAAMK,MAAM,GAAG,OAAOJ,EAAP,EAAWP,MAAX,KAAsB;AACjC,MAAI;AACA,UAAMC,QAAQ,GAAG,MAAMV,KAAK,CAACqB,MAAN,CAAc,GAAEpB,GAAI,iBAAgBe,EAAG,EAAvC,EAA0CP,MAA1C,CAAvB;;AACA,QAAIC,QAAQ,CAACE,MAAT,KAAoB,GAAxB,EAA6B;AACzBV,MAAAA,KAAK,CAACgB,OAAN,CAAcR,QAAQ,CAACG,IAAT,CAAcM,OAA5B;AACA,aAAO,IAAP;AACH;AACJ,GAND,CAME,OAAOL,KAAP,EAAc;AACZ,QAAIA,KAAJ,EAAW,OAAOX,cAAc,CAACW,KAAD,CAArB;AACd;AACJ,CAVD,C,CAYA;;;MAZMM,M;;AAaN,MAAME,WAAW,GAAG,OAAOC,KAAP,EAAcC,KAAd,EAAqBf,MAArB,KAAgC;AAChD,MAAI;AACA,UAAMC,QAAQ,GAAG,MAAMV,KAAK,CAACW,GAAN,CAAW,GAAEV,GAAI,8BAA6BsB,KAAM,UAASC,KAAM,EAAnE,EAAsEf,MAAtE,CAAvB;AACA,QAAIC,QAAQ,CAACE,MAAT,KAAoB,GAAxB,EAA6B,OAAOF,QAAQ,CAACG,IAAhB;AAChC,GAHD,CAGE,OAAOC,KAAP,EAAc;AACZ,QAAIA,KAAJ,EAAW,OAAOX,cAAc,CAACW,KAAD,CAArB;AACd;AACJ,CAPD;;MAAMQ,W;AASN,MAAMG,YAAY,GAAG;AACjBnB,EAAAA,KADiB;AAEjBS,EAAAA,MAFiB;AAGjBK,EAAAA,MAHiB;AAIjBE,EAAAA;AAJiB,CAArB;AAOA,eAAeG,YAAf","sourcesContent":["import Axios from 'axios'\nimport { api } from '../api'\nimport { toast } from 'react-toastify'\nimport { errorHandeller } from './Error'\nimport 'react-toastify/dist/ReactToastify.css'\ntoast.configure({ autoClose: 2000 })\n\n// List of Ratings & Reviews\nconst Index = async (page, limit, header) => {\n    try {\n        const response = await Axios.get(`${api}rating-review?page=${page}&limit=${limit}`, header)\n        if (response.status === 200) return response.data\n    } catch (error) {\n        if (error) return errorHandeller(error)\n    }\n}\n\n// Update specific review\nconst Update = async (id, status, header) => {\n    try {\n        const response = await Axios.post(`${api}rating-review/${id}`, { status }, header)\n        if (response.status === 201) {\n            toast.success(response.data.message)\n            return true\n        }\n    } catch (error) {\n        if (error) return errorHandeller(error)\n    }\n}\n\n// Delete specific review\nconst Delete = async (id, header) => {\n    try {\n        const response = await Axios.delete(`${api}rating-review/${id}`, header)\n        if (response.status === 200) {\n            toast.success(response.data.message)\n            return true\n        }\n    } catch (error) {\n        if (error) return errorHandeller(error)\n    }\n}\n\n// Filter items\nconst FilterItems = async (value, field, header) => {\n    try {\n        const response = await Axios.get(`${api}rating-review/filter?value=${value}&field=${field}`, header)\n        if (response.status === 200) return response.data\n    } catch (error) {\n        if (error) return errorHandeller(error)\n    }\n}\n\nconst RatingReview = {\n    Index,\n    Update,\n    Delete,\n    FilterItems\n}\n\nexport default RatingReview"]},"metadata":{},"sourceType":"module"}