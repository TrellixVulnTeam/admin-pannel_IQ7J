{"ast":null,"code":"var _jsxFileName = \"D:\\\\previous\\\\src\\\\pages\\\\reports\\\\buyerRegistration\\\\Index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useEffect, useState } from 'react';\nimport './style.scss';\nimport { dateFormate } from '../../../utils/Helpers';\nimport { DataTable } from '../../../components/table/Index';\nimport Requests from '../../../utils/Requests/Index';\nimport ExportCSV from '../../../components/exportCSV/Index';\nimport { RangeFilter } from '../../../components/rangeFilter/Index';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Index = () => {\n  _s();\n\n  const [isFilter, setFilter] = useState(false);\n  const [isLoading, setLoading] = useState(true);\n  const [limit, setLimit] = useState(10);\n  const [totalItems, setTotalItems] = useState(0);\n  const [data, setData] = useState([]);\n  const [sheetData, setSheetData] = useState([]);\n  const [header] = useState({\n    headers: {\n      Authorization: \"Bearer \" + localStorage.getItem('token')\n    }\n  }); // Fetch data\n\n  const fetchData = useCallback(async page => {\n    setLoading(true);\n    const response = await Requests.Buyer.Index(page, limit, header);\n\n    if (response) {\n      let xlsxData = [];\n      setData(response.data);\n      setTotalItems(response.pagination ? response.pagination.items : 0);\n\n      if (response.data && response.data.length) {\n        for (let i = 0; i < response.data.length; i++) {\n          const element = response.data[i];\n          xlsxData.push({\n            name: element.name,\n            email: element.email,\n            phone: element.phone,\n            date: dateFormate(element.createdAt)\n          });\n        }\n\n        setSheetData(xlsxData);\n      }\n    }\n\n    setLoading(false);\n  }, [limit, header]);\n\n  const handlePageChange = page => fetchData(page);\n\n  const handleLimitChange = async (newLimit, page) => {\n    setLoading(true);\n    const response = await Requests.Buyer.Index(page, newLimit, header);\n    setData(response.data);\n    setLimit(newLimit);\n    setLoading(false);\n  };\n\n  useEffect(() => {\n    fetchData(1);\n  }, [header, fetchData]); // FIlter items\n\n  const handleFilter = async data => {\n    setFilter(true);\n    const response = await Requests.Buyer.Filter(data, header);\n\n    if (response) {\n      setData(response.data);\n      setFilter(false);\n    }\n  };\n\n  const columns = [{\n    name: 'Name',\n    sortable: true,\n    selector: row => row.name ? row.name : \"N/A\"\n  }, {\n    name: 'E-mail',\n    sortable: true,\n    selector: row => row.email ? row.email : \"N/A\"\n  }, {\n    name: 'Phone',\n    sortable: true,\n    selector: row => row.phone ? row.phone : \"N/A\"\n  }, {\n    name: 'Created At',\n    grow: 1,\n    sortable: true,\n    selector: row => dateFormate(row.createdAt)\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"report-index\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-fluid\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-12 col-padding\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card border-0 shadow-sm\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-header p-3 p-lg-4 bg-white\",\n              children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n                className: \"mt-0 mb-3\",\n                children: \"Buyer's List\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"d-md-flex\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  children: /*#__PURE__*/_jsxDEV(RangeFilter, {\n                    loading: isFilter,\n                    filter: handleFilter\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 110,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 109,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text-right pt-2 pt-md-0 pl-2\",\n                  children: /*#__PURE__*/_jsxDEV(ExportCSV, {\n                    csvData: sheetData,\n                    fileName: 'Registered_buyers'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 116,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 115,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-body p-0\",\n              children: /*#__PURE__*/_jsxDEV(DataTable, {\n                fixedHeader: true,\n                fixedHeaderScrollHeight: \"580px\",\n                columns: columns,\n                data: data,\n                loading: isLoading,\n                totalRows: totalItems,\n                pagination: true,\n                paginationServer: true,\n                handlePerRowsChange: handleLimitChange,\n                handlePageChange: handlePageChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Index, \"jYEsObtBjN0MS2K7btnQ5VFHens=\");\n\n_c = Index;\nexport default Index;\n\nvar _c;\n\n$RefreshReg$(_c, \"Index\");","map":{"version":3,"sources":["D:/previous/src/pages/reports/buyerRegistration/Index.js"],"names":["React","useCallback","useEffect","useState","dateFormate","DataTable","Requests","ExportCSV","RangeFilter","Index","isFilter","setFilter","isLoading","setLoading","limit","setLimit","totalItems","setTotalItems","data","setData","sheetData","setSheetData","header","headers","Authorization","localStorage","getItem","fetchData","page","response","Buyer","xlsxData","pagination","items","length","i","element","push","name","email","phone","date","createdAt","handlePageChange","handleLimitChange","newLimit","handleFilter","Filter","columns","sortable","selector","row","grow"],"mappings":"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","sourcesContent":["import React, { useCallback, useEffect, useState } from 'react'\nimport './style.scss'\nimport { dateFormate } from '../../../utils/Helpers'\nimport { DataTable } from '../../../components/table/Index'\n\nimport Requests from '../../../utils/Requests/Index'\nimport ExportCSV from '../../../components/exportCSV/Index'\nimport { RangeFilter } from '../../../components/rangeFilter/Index'\n\nconst Index = () => {\n    const [isFilter, setFilter] = useState(false)\n    const [isLoading, setLoading] = useState(true)\n    const [limit, setLimit] = useState(10)\n    const [totalItems, setTotalItems] = useState(0)\n\n    const [data, setData] = useState([])\n    const [sheetData, setSheetData] = useState([])\n    const [header] = useState({\n        headers: { Authorization: \"Bearer \" + localStorage.getItem('token') }\n    })\n\n    // Fetch data\n    const fetchData = useCallback(async (page) => {\n        setLoading(true)\n        const response = await Requests.Buyer.Index(page, limit, header)\n\n        if (response) {\n            let xlsxData = []\n            setData(response.data)\n            setTotalItems(response.pagination ? response.pagination.items : 0)\n\n            if (response.data && response.data.length) {\n                for (let i = 0; i < response.data.length; i++) {\n                    const element = response.data[i]\n                    xlsxData.push({\n                        name: element.name,\n                        email: element.email,\n                        phone: element.phone,\n                        date: dateFormate(element.createdAt)\n                    })\n                }\n                setSheetData(xlsxData)\n            }\n        }\n\n        setLoading(false)\n    }, [limit, header])\n\n    const handlePageChange = page => fetchData(page)\n\n    const handleLimitChange = async (newLimit, page) => {\n        setLoading(true)\n        const response = await Requests.Buyer.Index(page, newLimit, header)\n\n        setData(response.data)\n        setLimit(newLimit)\n        setLoading(false)\n    }\n\n    useEffect(() => {\n        fetchData(1)\n    }, [header, fetchData])\n\n    // FIlter items\n    const handleFilter = async data => {\n        setFilter(true)\n        const response = await Requests.Buyer.Filter(data, header)\n\n        if (response) {\n            setData(response.data)\n            setFilter(false)\n        }\n    }\n\n    const columns = [\n        {\n            name: 'Name',\n            sortable: true,\n            selector: row => row.name ? row.name : \"N/A\"\n        },\n        {\n            name: 'E-mail',\n            sortable: true,\n            selector: row => row.email ? row.email : \"N/A\"\n        },\n        {\n            name: 'Phone',\n            sortable: true,\n            selector: row => row.phone ? row.phone : \"N/A\"\n        },\n        {\n            name: 'Created At',\n            grow: 1,\n            sortable: true,\n            selector: row => dateFormate(row.createdAt)\n        }\n    ]\n\n\n    return (\n        <div className=\"report-index\">\n            <div className=\"container-fluid\">\n                <div className=\"row\">\n                    <div className=\"col-12 col-padding\">\n                        <div className=\"card border-0 shadow-sm\">\n                            <div className=\"card-header p-3 p-lg-4 bg-white\">\n                                <h6 className=\"mt-0 mb-3\">Buyer's List</h6>\n                                <div className=\"d-md-flex\">\n                                    <div>\n                                        <RangeFilter\n                                            loading={isFilter}\n                                            filter={handleFilter}\n                                        />\n                                    </div>\n                                    <div className=\"text-right pt-2 pt-md-0 pl-2\">\n                                        <ExportCSV csvData={sheetData} fileName={'Registered_buyers'} />\n                                    </div>\n                                </div>\n                            </div>\n\n                            {/* Data table component for show data */}\n                            <div className=\"card-body p-0\">\n                                <DataTable\n                                    fixedHeader\n                                    fixedHeaderScrollHeight=\"580px\"\n                                    columns={columns}\n                                    data={data}\n                                    loading={isLoading}\n                                    totalRows={totalItems}\n                                    pagination={true}\n                                    paginationServer={true}\n                                    handlePerRowsChange={handleLimitChange}\n                                    handlePageChange={handlePageChange}\n                                />\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default Index;"]},"metadata":{},"sourceType":"module"}