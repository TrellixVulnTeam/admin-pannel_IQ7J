{"ast":null,"code":"import Axios from 'axios';\nimport { api } from '../api';\nimport { toast } from 'react-toastify';\nimport { errorHandeller } from './Error';\nimport 'react-toastify/dist/ReactToastify.css';\ntoast.configure({\n  autoClose: 2000\n}); // List of Addsenses\n\nconst Index = async header => {\n  try {\n    const response = await Axios.get(`${api}addsense`, header);\n    if (response.status === 200) return response.data;\n  } catch (error) {\n    if (error) return errorHandeller(error);\n  }\n}; // Store \n\n\n_c = Index;\n\nconst Store = async (data, header) => {\n  try {\n    const response = await Axios.post(`${api}addsense`, data, header);\n\n    if (response.status === 201) {\n      toast.success(response.data.message);\n      return true;\n    }\n  } catch (error) {\n    if (error) return errorHandeller(error);\n  }\n}; // Show specific item\n\n\n_c2 = Store;\n\nconst Show = async (id, header) => {\n  try {\n    const response = await Axios.get(`${api}addsense/${id}`, header);\n    if (response.status === 200) return response.data;\n  } catch (error) {\n    if (error) return errorHandeller(error);\n  }\n}; // Update specific item\n\n\n_c3 = Show;\n\nconst Update = async (data, header) => {\n  try {\n    const response = await Axios.post(`${api}addsense/update-addsense`, data, header);\n\n    if (response.status === 201) {\n      toast.success(response.data.message);\n      return true;\n    }\n  } catch (error) {\n    if (error) return errorHandeller(error);\n  }\n}; // Delete\n\n\n_c4 = Update;\n\nconst Delete = async (id, header) => {\n  try {\n    const response = await Axios.delete(`${api}addsense/${id}`, header);\n\n    if (response.status === 200) {\n      toast.success(response.data.message);\n      return true;\n    }\n  } catch (error) {\n    if (error) return errorHandeller(error);\n  }\n};\n\n_c5 = Delete;\nconst Addsenses = {\n  Index,\n  Store,\n  Show,\n  Update,\n  Delete\n};\nexport default Addsenses;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"Index\");\n$RefreshReg$(_c2, \"Store\");\n$RefreshReg$(_c3, \"Show\");\n$RefreshReg$(_c4, \"Update\");\n$RefreshReg$(_c5, \"Delete\");","map":{"version":3,"sources":["D:/previous/src/utils/Requests/Addsense.js"],"names":["Axios","api","toast","errorHandeller","configure","autoClose","Index","header","response","get","status","data","error","Store","post","success","message","Show","id","Update","Delete","delete","Addsenses"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,QAAoB,QAApB;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,SAASC,cAAT,QAA+B,SAA/B;AACA,OAAO,uCAAP;AACAD,KAAK,CAACE,SAAN,CAAgB;AAAEC,EAAAA,SAAS,EAAE;AAAb,CAAhB,E,CAGA;;AACA,MAAMC,KAAK,GAAG,MAAOC,MAAP,IAAkB;AAC5B,MAAI;AACA,UAAMC,QAAQ,GAAG,MAAMR,KAAK,CAACS,GAAN,CAAW,GAAER,GAAI,UAAjB,EAA4BM,MAA5B,CAAvB;AACA,QAAIC,QAAQ,CAACE,MAAT,KAAoB,GAAxB,EAA6B,OAAOF,QAAQ,CAACG,IAAhB;AAChC,GAHD,CAGE,OAAOC,KAAP,EAAc;AACZ,QAAIA,KAAJ,EAAW,OAAOT,cAAc,CAACS,KAAD,CAArB;AACd;AACJ,CAPD,C,CASA;;;KATMN,K;;AAUN,MAAMO,KAAK,GAAG,OAAOF,IAAP,EAAaJ,MAAb,KAAwB;AAClC,MAAI;AACA,UAAMC,QAAQ,GAAG,MAAMR,KAAK,CAACc,IAAN,CAAY,GAAEb,GAAI,UAAlB,EAA6BU,IAA7B,EAAmCJ,MAAnC,CAAvB;;AACA,QAAIC,QAAQ,CAACE,MAAT,KAAoB,GAAxB,EAA6B;AACzBR,MAAAA,KAAK,CAACa,OAAN,CAAcP,QAAQ,CAACG,IAAT,CAAcK,OAA5B;AACA,aAAO,IAAP;AACH;AACJ,GAND,CAME,OAAOJ,KAAP,EAAc;AACZ,QAAIA,KAAJ,EAAW,OAAOT,cAAc,CAACS,KAAD,CAArB;AACd;AACJ,CAVD,C,CAYA;;;MAZMC,K;;AAaN,MAAMI,IAAI,GAAG,OAAOC,EAAP,EAAWX,MAAX,KAAsB;AAC/B,MAAI;AACA,UAAMC,QAAQ,GAAG,MAAMR,KAAK,CAACS,GAAN,CAAW,GAAER,GAAI,YAAWiB,EAAG,EAA/B,EAAkCX,MAAlC,CAAvB;AACA,QAAIC,QAAQ,CAACE,MAAT,KAAoB,GAAxB,EAA6B,OAAOF,QAAQ,CAACG,IAAhB;AAChC,GAHD,CAGE,OAAOC,KAAP,EAAc;AACZ,QAAIA,KAAJ,EAAW,OAAOT,cAAc,CAACS,KAAD,CAArB;AACd;AACJ,CAPD,C,CASA;;;MATMK,I;;AAUN,MAAME,MAAM,GAAG,OAAOR,IAAP,EAAaJ,MAAb,KAAwB;AACnC,MAAI;AACA,UAAMC,QAAQ,GAAG,MAAMR,KAAK,CAACc,IAAN,CAAY,GAAEb,GAAI,0BAAlB,EAA6CU,IAA7C,EAAmDJ,MAAnD,CAAvB;;AACA,QAAIC,QAAQ,CAACE,MAAT,KAAoB,GAAxB,EAA6B;AACzBR,MAAAA,KAAK,CAACa,OAAN,CAAcP,QAAQ,CAACG,IAAT,CAAcK,OAA5B;AACA,aAAO,IAAP;AACH;AACJ,GAND,CAME,OAAOJ,KAAP,EAAc;AACZ,QAAIA,KAAJ,EAAW,OAAOT,cAAc,CAACS,KAAD,CAArB;AACd;AACJ,CAVD,C,CAYA;;;MAZMO,M;;AAaN,MAAMC,MAAM,GAAG,OAAOF,EAAP,EAAWX,MAAX,KAAsB;AACjC,MAAI;AACA,UAAMC,QAAQ,GAAG,MAAMR,KAAK,CAACqB,MAAN,CAAc,GAAEpB,GAAI,YAAWiB,EAAG,EAAlC,EAAqCX,MAArC,CAAvB;;AACA,QAAIC,QAAQ,CAACE,MAAT,KAAoB,GAAxB,EAA6B;AACzBR,MAAAA,KAAK,CAACa,OAAN,CAAcP,QAAQ,CAACG,IAAT,CAAcK,OAA5B;AACA,aAAO,IAAP;AACH;AACJ,GAND,CAME,OAAOJ,KAAP,EAAc;AACZ,QAAIA,KAAJ,EAAW,OAAOT,cAAc,CAACS,KAAD,CAArB;AACd;AACJ,CAVD;;MAAMQ,M;AAaN,MAAME,SAAS,GAAG;AACdhB,EAAAA,KADc;AAEdO,EAAAA,KAFc;AAGdI,EAAAA,IAHc;AAIdE,EAAAA,MAJc;AAKdC,EAAAA;AALc,CAAlB;AAQA,eAAeE,SAAf","sourcesContent":["import Axios from 'axios'\nimport { api } from '../api'\nimport { toast } from 'react-toastify'\nimport { errorHandeller } from './Error'\nimport 'react-toastify/dist/ReactToastify.css'\ntoast.configure({ autoClose: 2000 })\n\n\n// List of Addsenses\nconst Index = async (header) => {\n    try {\n        const response = await Axios.get(`${api}addsense`, header)\n        if (response.status === 200) return response.data\n    } catch (error) {\n        if (error) return errorHandeller(error)\n    }\n}\n\n// Store \nconst Store = async (data, header) => {\n    try {\n        const response = await Axios.post(`${api}addsense`, data, header)\n        if (response.status === 201) {\n            toast.success(response.data.message)\n            return true\n        }\n    } catch (error) {\n        if (error) return errorHandeller(error)\n    }\n}\n\n// Show specific item\nconst Show = async (id, header) => {\n    try {\n        const response = await Axios.get(`${api}addsense/${id}`, header)\n        if (response.status === 200) return response.data\n    } catch (error) {\n        if (error) return errorHandeller(error)\n    }\n}\n\n// Update specific item\nconst Update = async (data, header) => {\n    try {\n        const response = await Axios.post(`${api}addsense/update-addsense`, data, header)\n        if (response.status === 201) {\n            toast.success(response.data.message)\n            return true\n        }\n    } catch (error) {\n        if (error) return errorHandeller(error)\n    }\n}\n\n// Delete\nconst Delete = async (id, header) => {\n    try {\n        const response = await Axios.delete(`${api}addsense/${id}`, header)\n        if (response.status === 200) {\n            toast.success(response.data.message)\n            return true\n        }\n    } catch (error) {\n        if (error) return errorHandeller(error)\n    }\n}\n\n\nconst Addsenses = {\n    Index,\n    Store,\n    Show,\n    Update,\n    Delete\n}\n\nexport default Addsenses"]},"metadata":{},"sourceType":"module"}