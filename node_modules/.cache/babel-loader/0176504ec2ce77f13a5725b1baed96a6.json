{"ast":null,"code":"import _objectSpread from\"D:/previous/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import{toast,Slide}from'react-toastify';import'react-toastify/dist/ReactToastify.css';var toastSetting={autoClose:2000,transition:Slide,position:\"top-right\",hideProgressBar:false,closeOnClick:true,pauseOnHover:true,draggable:true,progress:undefined};export var errorHandeller=function errorHandeller(error){var errorResponse=error&&error.response?error.response.data:null;if(error&&error.response&&error.response.data&&error.response.status===422){Object.values(error.response.data).map(function(value){return toast.error(value,_objectSpread({},toastSetting));});}if(errorResponse){if(errorResponse.message==='unauthorized request'){toast.error(errorResponse.message+' Logging out...',_objectSpread({},toastSetting));setTimeout(function(){localStorage.clear();window.location.reload();},2000);}else if(errorResponse.message==='Token expired'){toast.error(error.message+' Logging out...',_objectSpread({},toastSetting));setTimeout(function(){localStorage.clear();window.location.reload();},2000);}else{return toast.error(errorResponse.message,_objectSpread({},toastSetting));}}};","map":{"version":3,"sources":["D:/previous/src/utils/Requests/Error.js"],"names":["toast","Slide","toastSetting","autoClose","transition","position","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","errorHandeller","error","errorResponse","response","data","status","Object","values","map","value","message","setTimeout","localStorage","clear","window","location","reload"],"mappings":"gGACA,OAASA,KAAT,CAAgBC,KAAhB,KAA6B,gBAA7B,CACA,MAAO,uCAAP,CAEA,GAAMC,CAAAA,YAAY,CAAG,CACjBC,SAAS,CAAE,IADM,CAEjBC,UAAU,CAAEH,KAFK,CAGjBI,QAAQ,CAAE,WAHO,CAIjBC,eAAe,CAAE,KAJA,CAKjBC,YAAY,CAAE,IALG,CAMjBC,YAAY,CAAE,IANG,CAOjBC,SAAS,CAAE,IAPM,CAQjBC,QAAQ,CAAEC,SARO,CAArB,CAWA,MAAO,IAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAAAC,KAAK,CAAI,CACnC,GAAMC,CAAAA,aAAa,CAAGD,KAAK,EAAIA,KAAK,CAACE,QAAf,CAA0BF,KAAK,CAACE,QAAN,CAAeC,IAAzC,CAAgD,IAAtE,CAEA,GAAIH,KAAK,EAAIA,KAAK,CAACE,QAAf,EAA2BF,KAAK,CAACE,QAAN,CAAeC,IAA1C,EAAkDH,KAAK,CAACE,QAAN,CAAeE,MAAf,GAA0B,GAAhF,CAAqF,CACjFC,MAAM,CAACC,MAAP,CAAcN,KAAK,CAACE,QAAN,CAAeC,IAA7B,EAAmCI,GAAnC,CAAuC,SAAAC,KAAK,CAAI,CAC5C,MAAOrB,CAAAA,KAAK,CAACa,KAAN,CAAYQ,KAAZ,kBAAwBnB,YAAxB,EAAP,CACH,CAFD,EAGH,CAED,GAAIY,aAAJ,CAAmB,CACf,GAAIA,aAAa,CAACQ,OAAd,GAA0B,sBAA9B,CAAsD,CAClDtB,KAAK,CAACa,KAAN,CAAYC,aAAa,CAACQ,OAAd,CAAwB,iBAApC,kBAA4DpB,YAA5D,GAEAqB,UAAU,CAAC,UAAM,CACbC,YAAY,CAACC,KAAb,GACAC,MAAM,CAACC,QAAP,CAAgBC,MAAhB,GACH,CAHS,CAGP,IAHO,CAAV,CAIH,CAPD,IAOO,IAAId,aAAa,CAACQ,OAAd,GAA0B,eAA9B,CAA+C,CAClDtB,KAAK,CAACa,KAAN,CAAYA,KAAK,CAACS,OAAN,CAAgB,iBAA5B,kBAAoDpB,YAApD,GAEAqB,UAAU,CAAC,UAAM,CACbC,YAAY,CAACC,KAAb,GACAC,MAAM,CAACC,QAAP,CAAgBC,MAAhB,GACH,CAHS,CAGP,IAHO,CAAV,CAIH,CAPM,IAOA,CACH,MAAO5B,CAAAA,KAAK,CAACa,KAAN,CAAYC,aAAa,CAACQ,OAA1B,kBAAwCpB,YAAxC,EAAP,CACH,CACJ,CAGJ,CA9BM","sourcesContent":["\nimport { toast, Slide } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'\n\nconst toastSetting = {\n    autoClose: 2000,\n    transition: Slide,\n    position: \"top-right\",\n    hideProgressBar: false,\n    closeOnClick: true,\n    pauseOnHover: true,\n    draggable: true,\n    progress: undefined\n}\n\nexport const errorHandeller = error => {\n    const errorResponse = error && error.response ? error.response.data : null\n\n    if (error && error.response && error.response.data && error.response.status === 422) {\n        Object.values(error.response.data).map(value => {\n            return toast.error(value, { ...toastSetting })\n        })\n    }\n\n    if (errorResponse) {\n        if (errorResponse.message === 'unauthorized request') {\n            toast.error(errorResponse.message + ' Logging out...', { ...toastSetting })\n\n            setTimeout(() => {\n                localStorage.clear()\n                window.location.reload()\n            }, 2000)\n        } else if (errorResponse.message === 'Token expired') {\n            toast.error(error.message + ' Logging out...', { ...toastSetting })\n\n            setTimeout(() => {\n                localStorage.clear()\n                window.location.reload()\n            }, 2000)\n        } else {\n            return toast.error(errorResponse.message, { ...toastSetting })\n        }\n    }\n\n\n}\n"]},"metadata":{},"sourceType":"module"}