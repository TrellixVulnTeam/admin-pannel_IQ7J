{"ast":null,"code":"import Axios from 'axios';\nimport { api } from '../api';\nimport { toast } from 'react-toastify';\nimport { errorHandeller } from './Error';\nimport 'react-toastify/dist/ReactToastify.css';\ntoast.configure({\n  autoClose: 2000\n}); // List of items\n\nconst Index = async (page, limit, header) => {\n  try {\n    const response = await Axios.get(`${api}shipping?page=${page}&limit=${limit}`, header);\n    if (response.status === 200) return response.data;\n  } catch (error) {\n    if (error) return errorHandeller(error);\n  }\n}; // Store items\n\n\n_c = Index;\n\nconst Store = async (data, header) => {\n  try {\n    const response = await Axios.post(`${api}shipping`, data, header);\n\n    if (response.status === 201) {\n      toast.success(response.data.message);\n      return true;\n    }\n  } catch (error) {\n    if (error) return errorHandeller(error);\n  }\n}; // Show specifi items\n\n\n_c2 = Store;\n\nconst Show = async (id, header) => {\n  try {\n    const response = await Axios.get(`${api}shipping/${id}`, header);\n\n    if (response.status === 200) {\n      return response.data.data;\n    }\n  } catch (error) {\n    if (error) return errorHandeller(error);\n  }\n}; // Update specific items\n\n\n_c3 = Show;\n\nconst Update = async (id, data, header) => {\n  try {\n    const response = await Axios.put(`${api}shipping/${id}`, data, header);\n\n    if (response.status === 201) {\n      toast.success(response.data.message);\n      return true;\n    }\n  } catch (error) {\n    if (error) return errorHandeller(error);\n  }\n}; // Delete item\n\n\n_c4 = Update;\n\nconst Delete = async (id, header) => {\n  try {\n    const response = await Axios.delete(`${api}shipping/${id}`, header);\n\n    if (response.status === 200) {\n      toast.success(response.data.message);\n      return true;\n    }\n  } catch (error) {\n    if (error) return errorHandeller(error);\n  }\n}; // Filter \n\n\n_c5 = Delete;\n\nconst Filter = async (data, header) => {\n  try {\n    const response = await Axios.get(`${api}shipping/filter/items?value=${data.value}&field=${data.field}`, header);\n    if (response.status === 200) return response.data;\n  } catch (error) {\n    if (error) return errorHandeller(error);\n  }\n}; // Filter by date\n\n\n_c6 = Filter;\n\nconst FilterByDateRange = async (data, header) => {\n  try {\n    const response = await Axios.post(`${api}shipping/date-range-filter`, data, header);\n    if (response.status === 200) return response.data;\n  } catch (error) {\n    if (error) return errorHandeller(error);\n  }\n};\n\n_c7 = FilterByDateRange;\nconst Coupon = {\n  Index,\n  Store,\n  Show,\n  Update,\n  Delete,\n  Filter,\n  FilterByDateRange\n};\nexport default Coupon;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7;\n\n$RefreshReg$(_c, \"Index\");\n$RefreshReg$(_c2, \"Store\");\n$RefreshReg$(_c3, \"Show\");\n$RefreshReg$(_c4, \"Update\");\n$RefreshReg$(_c5, \"Delete\");\n$RefreshReg$(_c6, \"Filter\");\n$RefreshReg$(_c7, \"FilterByDateRange\");","map":{"version":3,"sources":["D:/previous/src/utils/Requests/Shipping.js"],"names":["Axios","api","toast","errorHandeller","configure","autoClose","Index","page","limit","header","response","get","status","data","error","Store","post","success","message","Show","id","Update","put","Delete","delete","Filter","value","field","FilterByDateRange","Coupon"],"mappings":"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","sourcesContent":["import Axios from 'axios'\nimport { api } from '../api'\nimport { toast } from 'react-toastify'\nimport { errorHandeller } from './Error'\nimport 'react-toastify/dist/ReactToastify.css'\ntoast.configure({ autoClose: 2000 })\n\n// List of items\nconst Index = async (page, limit, header) => {\n    try {\n        const response = await Axios.get(`${api}shipping?page=${page}&limit=${limit}`, header)\n        if (response.status === 200) return response.data\n    } catch (error) {\n        if (error) return errorHandeller(error)\n    }\n}\n\n// Store items\nconst Store = async (data, header) => {\n    try {\n        const response = await Axios.post(`${api}shipping`, data, header)\n        if (response.status === 201) {\n            toast.success(response.data.message)\n            return true\n        }\n    } catch (error) {\n        if (error) return errorHandeller(error)\n    }\n}\n\n// Show specifi items\nconst Show = async (id, header) => {\n    try {\n        const response = await Axios.get(`${api}shipping/${id}`, header)\n        if (response.status === 200) {\n            return response.data.data\n        }\n    } catch (error) {\n        if (error) return errorHandeller(error)\n    }\n}\n\n// Update specific items\nconst Update = async (id, data, header) => {\n    try {\n        const response = await Axios.put(`${api}shipping/${id}`, data, header)\n        if (response.status === 201) {\n            toast.success(response.data.message)\n            return true\n        }\n    } catch (error) {\n        if (error) return errorHandeller(error)\n    }\n}\n\n// Delete item\nconst Delete = async (id, header) => {\n    try {\n        const response = await Axios.delete(`${api}shipping/${id}`, header)\n        if (response.status === 200) {\n            toast.success(response.data.message)\n            return true\n        }\n    } catch (error) {\n        if (error) return errorHandeller(error)\n    }\n}\n\n// Filter \nconst Filter = async (data, header) => {\n    try {\n        const response = await Axios.get(`${api}shipping/filter/items?value=${data.value}&field=${data.field}`, header)\n        if (response.status === 200) return response.data\n    } catch (error) {\n        if (error) return errorHandeller(error)\n    }\n}\n\n// Filter by date\nconst FilterByDateRange = async (data, header) => {\n    try {\n        const response = await Axios.post(`${api}shipping/date-range-filter`, data, header)\n        if (response.status === 200) return response.data\n    } catch (error) {\n        if (error) return errorHandeller(error)\n    }\n}\n\nconst Coupon = {\n    Index,\n    Store,\n    Show,\n    Update,\n    Delete,\n    Filter,\n    FilterByDateRange\n}\n\nexport default Coupon"]},"metadata":{},"sourceType":"module"}