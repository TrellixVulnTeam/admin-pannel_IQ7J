{"ast":null,"code":"var _jsxFileName = \"D:\\\\previous\\\\src\\\\components\\\\layout\\\\Index.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './style.scss';\nimport Icon from 'react-icons-kit';\nimport { NavLink } from 'react-router-dom';\nimport { chevronRight } from 'react-icons-kit/feather';\nimport Navbar from '../navbar/Index';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MenuItems = props => {\n  _s();\n\n  const [isMenu, setMenu] = useState(false); // Toggle menu\n\n  const toggleMenu = event => {\n    if (isMenu === event) {\n      setMenu(false);\n    } else {\n      setMenu(false);\n      setMenu(event);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: props.path ? /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(NavLink, {\n          to: props.path,\n          exact: props.exact,\n          activeClassName: \"isActive\",\n          type: \"button\",\n          className: \"btn shadow-none\",\n          children: [props.icon, props.title]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sidebar-dropdown-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"btn shadow-none\",\n            onClick: () => toggleMenu(props.name),\n            children: [props.icon, props.title, props.child ? /*#__PURE__*/_jsxDEV(Icon, {\n              icon: chevronRight,\n              size: 18,\n              className: isMenu === props.name ? \"arrow down\" : \"arrow\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 48\n            }, this) : null]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: isMenu === props.name ? \"sidebar-dropdown-menu\" : \"sidebar-dropdown-menu menu-hide\",\n            children: props.child && props.child.map((item, i) => item.inDrawer ? /*#__PURE__*/_jsxDEV(MenuItems, {\n              icon: item.icon,\n              path: item.path,\n              name: item.name,\n              title: item.title,\n              exact: item.exact ? item.exact : false,\n              child: item.child\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 41\n            }, this) : null)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n};\n\n_s(MenuItems, \"ucGeeSp9dHl29lJ+TBwnnziH/7Y=\");\n\n_c = MenuItems;\n\nconst Layout = props => {\n  _s2();\n\n  const [show, setShow] = useState(false);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"layout\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"navbar-container shadow-sm print-hidden\",\n      children: /*#__PURE__*/_jsxDEV(Navbar, {\n        toggle: () => setShow(!show)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebar-container print-hidden\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: show ? \"backdrop d-lg-none open-backdrop\" : \"backdrop d-lg-none\",\n        onClick: () => setShow(false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: show ? \"sidebar shadow open-sidebar\" : \"sidebar shadow\",\n        children: props.routes && props.routes.length ? props.routes.map((item, i) => {\n          if (item.name && item.inDrawer) {\n            return /*#__PURE__*/_jsxDEV(MenuItems, {\n              icon: item.icon,\n              path: item.path,\n              name: item.name,\n              title: item.title,\n              exact: item.exact ? item.exact : false,\n              child: item.child\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 37\n            }, this);\n          } else {\n            return null;\n          }\n        }) : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 9\n  }, this);\n};\n\n_s2(Layout, \"NKb1ZOdhT+qUsWLXSgjSS2bk2C4=\");\n\n_c2 = Layout;\nexport default Layout;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"MenuItems\");\n$RefreshReg$(_c2, \"Layout\");","map":{"version":3,"sources":["D:/previous/src/components/layout/Index.js"],"names":["React","useState","Icon","NavLink","chevronRight","Navbar","MenuItems","props","isMenu","setMenu","toggleMenu","event","path","exact","icon","title","name","child","map","item","i","inDrawer","Layout","show","setShow","routes","length"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport './style.scss'\nimport Icon from 'react-icons-kit'\nimport { NavLink } from 'react-router-dom'\nimport { chevronRight } from 'react-icons-kit/feather'\nimport Navbar from '../navbar/Index'\n\nconst MenuItems = (props) => {\n    const [isMenu, setMenu] = useState(false)\n\n    // Toggle menu\n    const toggleMenu = event => {\n        if (isMenu === event) {\n            setMenu(false)\n        } else {\n            setMenu(false)\n            setMenu(event)\n        }\n    }\n\n    return (\n        <div>\n            <ul>\n                {props.path ?\n                    <li>\n                        <NavLink\n                            to={props.path}\n                            exact={props.exact}\n                            activeClassName=\"isActive\"\n                            type=\"button\"\n                            className=\"btn shadow-none\"\n                        >\n                            {props.icon}\n                            {props.title}\n                        </NavLink>\n                    </li>\n                    :\n                    <li>\n                        <div className=\"sidebar-dropdown-container\">\n                            <button\n                                type=\"button\"\n                                className=\"btn shadow-none\"\n                                onClick={() => toggleMenu(props.name)}\n                            >\n                                {props.icon}\n                                {props.title}\n                                {props.child ? <Icon icon={chevronRight} size={18} className={isMenu === props.name ? \"arrow down\" : \"arrow\"} /> : null}\n                            </button>\n\n                            <div className={isMenu === props.name ? \"sidebar-dropdown-menu\" : \"sidebar-dropdown-menu menu-hide\"}>\n                                {props.child && props.child.map((item, i) =>\n                                    item.inDrawer ?\n                                        <MenuItems\n                                            key={i}\n                                            icon={item.icon}\n                                            path={item.path}\n                                            name={item.name}\n                                            title={item.title}\n                                            exact={item.exact ? item.exact : false}\n                                            child={item.child}\n                                        />\n                                        : null\n                                )}\n                            </div>\n                        </div>\n                    </li>\n                }\n            </ul>\n        </div>\n    )\n}\n\nconst Layout = (props) => {\n    const [show, setShow] = useState(false)\n\n    return (\n        <div className=\"layout\">\n\n            {/* Navbar */}\n            <div className=\"navbar-container shadow-sm print-hidden\">\n                <Navbar toggle={() => setShow(!show)} />\n            </div>\n\n            {/* Sidebar */}\n            <div className=\"sidebar-container print-hidden\">\n\n                {/* Backdrop */}\n                <div className={show ? \"backdrop d-lg-none open-backdrop\" : \"backdrop d-lg-none\"} onClick={() => setShow(false)} />\n\n                <div className={show ? \"sidebar shadow open-sidebar\" : \"sidebar shadow\"}>\n\n                    {props.routes && props.routes.length ?\n                        props.routes.map((item, i) => {\n                            if (item.name && item.inDrawer) {\n                                return (\n                                    <MenuItems\n                                        key={i}\n                                        icon={item.icon}\n                                        path={item.path}\n                                        name={item.name}\n                                        title={item.title}\n                                        exact={item.exact ? item.exact : false}\n                                        child={item.child}\n                                    />\n                                )\n                            } else {\n                                return null\n                            }\n                        }) : null\n                    }\n\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Layout;\n"]},"metadata":{},"sourceType":"module"}