{"ast":null,"code":"var _jsxFileName = \"D:\\\\previous\\\\src\\\\components\\\\privateRoute\\\\Index.js\";\nimport React from \"react\";\nimport { checkIfLoggedIn } from \"../../utils/Authenticate\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PrivateRoute = _ref => {\n  let {\n    props,\n    children,\n    ...rest\n  } = _ref;\n  // const loggedIn = checkIfLoggedIn()\n  const loggedIn = true;\n  return /*#__PURE__*/_jsxDEV(Route, { ...rest,\n    render: _ref2 => {\n      let {\n        location\n      } = _ref2;\n      return loggedIn ? children : /*#__PURE__*/_jsxDEV(Redirect, {\n        to: {\n          pathname: \"/\",\n          from: location\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 11\n      }, this);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n};\n\n_c = PrivateRoute;\nexport default PrivateRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"sources":["D:/previous/src/components/privateRoute/Index.js"],"names":["React","checkIfLoggedIn","Route","Redirect","PrivateRoute","props","children","rest","loggedIn","location","pathname","from"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,eAAT,QAAgC,0BAAhC;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;;;AAEA,MAAMC,YAAY,GAAG,QAAkC;AAAA,MAAjC;AAAEC,IAAAA,KAAF;AAASC,IAAAA,QAAT;AAAmB,OAAGC;AAAtB,GAAiC;AACrD;AACA,QAAMC,QAAQ,GAAG,IAAjB;AAEA,sBACE,QAAC,KAAD,OACMD,IADN;AAEE,IAAA,MAAM,EAAE;AAAA,UAAC;AAAEE,QAAAA;AAAF,OAAD;AAAA,aACND,QAAQ,GACNF,QADM,gBAGN,QAAC,QAAD;AACE,QAAA,EAAE,EAAE;AACFI,UAAAA,QAAQ,EAAE,GADR;AAEFC,UAAAA,IAAI,EAAEF;AAFJ;AADN;AAAA;AAAA;AAAA;AAAA,cAJI;AAAA;AAFV;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD,CArBD;;KAAML,Y;AAuBN,eAAeA,YAAf","sourcesContent":["import React from \"react\";\nimport { checkIfLoggedIn } from \"../../utils/Authenticate\";\nimport { Route, Redirect } from \"react-router-dom\";\n\nconst PrivateRoute = ({ props, children, ...rest }) => {\n  // const loggedIn = checkIfLoggedIn()\n  const loggedIn = true;\n\n  return (\n    <Route\n      {...rest}\n      render={({ location }) =>\n        loggedIn ? (\n          children\n        ) : (\n          <Redirect\n            to={{\n              pathname: \"/\",\n              from: location,\n            }}\n          />\n        )\n      }\n    />\n  );\n};\n\nexport default PrivateRoute;\n"]},"metadata":{},"sourceType":"module"}