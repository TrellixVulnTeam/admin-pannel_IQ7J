{"ast":null,"code":"var _jsxFileName = \"D:\\\\previous\\\\src\\\\pages\\\\university\\\\post\\\\Create.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport 'react-quill/dist/quill.snow.css';\nimport Icon from 'react-icons-kit';\nimport ReactQuill from 'react-quill';\nimport { Link } from 'react-router-dom';\nimport { useForm } from 'react-hook-form';\nimport { chevronLeft } from 'react-icons-kit/feather';\nimport { Container } from '../../../components/container';\nimport { Card } from '../../../components/card/Index';\nimport { CustomButton } from '../../../components/button';\nimport { SearchableSelect } from '../../../components/select';\nimport { SingleFileUploader } from '../../../components/fileUploader/Index';\nimport Requests from '../../../utils/Requests/Index';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Create = () => {\n  _s();\n\n  const {\n    register,\n    handleSubmit,\n    errors\n  } = useForm();\n  const [isLoading, setLoading] = useState(false);\n  const [text, setText] = useState('Deafult description text');\n  const [category, setCategory] = useState({\n    value: null,\n    error: null\n  });\n  const [image, setImage] = useState(null);\n  const [header] = useState({\n    headers: {\n      Authorization: \"Bearer \" + localStorage.getItem('token')\n    }\n  });\n  const modules = {\n    toolbar: [[{\n      'header': [1, 2, false]\n    }], ['bold', 'italic', 'underline', 'strike', 'blockquote'], [{\n      'list': 'ordered'\n    }, {\n      'list': 'bullet'\n    }, {\n      'indent': '-1'\n    }, {\n      'indent': '+1'\n    }], ['link'], ['clean']]\n  };\n  const formats = ['header', 'bold', 'italic', 'underline', 'strike', 'blockquote', 'list', 'bullet', 'indent', 'link']; // Handle search category\n\n  const handleSearchCategory = async inputValue => {\n    let results = [];\n    const response = await Requests.University.CategorySearch(inputValue, header);\n\n    if (response.data && response.data.length) {\n      for (let i = 0; i < response.data.length; i++) {\n        const element = response.data[i];\n        results.push({\n          value: element._id,\n          label: element.name\n        });\n      }\n    }\n\n    return results;\n  }; // Submit Form\n\n\n  const onSubmit = async data => {\n    try {\n      if (!category.value) return setCategory({ ...category,\n        error: 'Category is required.'\n      });\n      let formData = new FormData();\n      formData.append('title', data.title);\n      formData.append('category', category.value);\n      formData.append('video', data.video);\n      formData.append('text', text);\n      formData.append('image', image);\n      setLoading(true);\n      await Requests.University.PostStore(formData, header);\n      setLoading(false);\n    } catch (error) {\n      if (error) console.log(error);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"pb-4\",\n    children: /*#__PURE__*/_jsxDEV(Container.Fluid, {\n      children: /*#__PURE__*/_jsxDEV(Container.Row, {\n        children: /*#__PURE__*/_jsxDEV(Container.Column, {\n          className: \"col-padding\",\n          children: /*#__PURE__*/_jsxDEV(Card.Simple, {\n            className: \"border-0\",\n            children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n              className: \"bg-white border-0 p-3 p-lg-4\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"d-flex\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  children: /*#__PURE__*/_jsxDEV(\"h6\", {\n                    className: \"mb-0\",\n                    children: \"Create Eazybest University Post\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 89,\n                    columnNumber: 42\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 89,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"ml-auto\",\n                  children: /*#__PURE__*/_jsxDEV(Link, {\n                    to: \"/dashboard/university/post\",\n                    children: /*#__PURE__*/_jsxDEV(CustomButton, {\n                      className: \"btn-primary border-0 rounded-circle circle__padding\",\n                      children: /*#__PURE__*/_jsxDEV(Icon, {\n                        icon: chevronLeft,\n                        size: 22\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 93,\n                        columnNumber: 49\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 92,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 91,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 90,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n              className: \"px-4 pt-0\",\n              children: /*#__PURE__*/_jsxDEV(\"form\", {\n                onSubmit: handleSubmit(onSubmit),\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"form-group mb-4\",\n                  children: [errors.title && errors.title.message ? /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"text-danger\",\n                    children: errors.title && errors.title.message\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 105,\n                    columnNumber: 45\n                  }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: \"Title\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 106,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    name: \"title\",\n                    className: \"form-control shadow-none\",\n                    placeholder: \"Enter post title\",\n                    ref: register({\n                      required: \"Title is required\"\n                    })\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 108,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 103,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"form-group mb-4\",\n                  children: [category.error ? /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"text-danger\",\n                    children: category.error\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 119,\n                    columnNumber: 59\n                  }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: \"Category\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 119,\n                    columnNumber: 109\n                  }, this), /*#__PURE__*/_jsxDEV(SearchableSelect, {\n                    borderRadius: 4,\n                    placeholder: \"Select category\",\n                    search: inputValue => handleSearchCategory(inputValue),\n                    values: event => setCategory({ ...category,\n                      value: event.value,\n                      error: false\n                    })\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 121,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 118,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"form-group mb-4\",\n                  children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                    children: \"Video\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 131,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    name: \"video\",\n                    className: \"form-control shadow-none\",\n                    placeholder: \"Enter video link\",\n                    ref: register()\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 133,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 130,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"form-group mb-4\",\n                  children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                    children: \"Image\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 144,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(SingleFileUploader, {\n                    width: 250,\n                    height: 100,\n                    limit: 500,\n                    dataHandeller: data => setImage(data.image)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 145,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 143,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"form-group mb-4\",\n                  children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                    children: \"Description\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 155,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(ReactQuill, {\n                    theme: \"snow\",\n                    value: text,\n                    onChange: value => setText(value),\n                    modules: modules,\n                    formats: formats\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 156,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 154,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text-right\",\n                  children: /*#__PURE__*/_jsxDEV(CustomButton, {\n                    type: \"submit\",\n                    className: \"btn btn-success border-0 shadow-none\",\n                    disabled: isLoading,\n                    children: isLoading ? 'Creating ...' : 'Create'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 166,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 165,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Create, \"QDSXkfbG9XAPgO9PQ1OYeeUYlP8=\", false, function () {\n  return [useForm];\n});\n\n_c = Create;\nexport default Create;\n\nvar _c;\n\n$RefreshReg$(_c, \"Create\");","map":{"version":3,"sources":["D:/previous/src/pages/university/post/Create.js"],"names":["React","useState","Icon","ReactQuill","Link","useForm","chevronLeft","Container","Card","CustomButton","SearchableSelect","SingleFileUploader","Requests","Create","register","handleSubmit","errors","isLoading","setLoading","text","setText","category","setCategory","value","error","image","setImage","header","headers","Authorization","localStorage","getItem","modules","toolbar","formats","handleSearchCategory","inputValue","results","response","University","CategorySearch","data","length","i","element","push","_id","label","name","onSubmit","formData","FormData","append","title","video","PostStore","console","log","message","required","event"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport 'react-quill/dist/quill.snow.css'\nimport Icon from 'react-icons-kit'\nimport ReactQuill from 'react-quill'\nimport { Link } from 'react-router-dom'\nimport { useForm } from 'react-hook-form'\nimport { chevronLeft } from 'react-icons-kit/feather'\nimport { Container } from '../../../components/container'\nimport { Card } from '../../../components/card/Index'\nimport { CustomButton } from '../../../components/button'\nimport { SearchableSelect } from '../../../components/select'\nimport { SingleFileUploader } from '../../../components/fileUploader/Index'\n\nimport Requests from '../../../utils/Requests/Index'\n\nconst Create = () => {\n    const { register, handleSubmit, errors } = useForm()\n    const [isLoading, setLoading] = useState(false)\n    const [text, setText] = useState('Deafult description text')\n    const [category, setCategory] = useState({ value: null, error: null })\n    const [image, setImage] = useState(null)\n    const [header] = useState({\n        headers: { Authorization: \"Bearer \" + localStorage.getItem('token') }\n    })\n\n    const modules = {\n        toolbar: [\n            [{ 'header': [1, 2, false] }],\n            ['bold', 'italic', 'underline', 'strike', 'blockquote'],\n            [{ 'list': 'ordered' }, { 'list': 'bullet' }, { 'indent': '-1' }, { 'indent': '+1' }],\n            ['link'],\n            ['clean']\n        ],\n    }\n\n    const formats = [\n        'header',\n        'bold', 'italic', 'underline', 'strike', 'blockquote',\n        'list', 'bullet', 'indent',\n        'link'\n    ]\n\n    // Handle search category\n    const handleSearchCategory = async (inputValue) => {\n        let results = []\n        const response = await Requests.University.CategorySearch(inputValue, header)\n\n        if (response.data && response.data.length) {\n            for (let i = 0; i < response.data.length; i++) {\n                const element = response.data[i]\n                results.push({\n                    value: element._id,\n                    label: element.name\n                })\n            }\n        }\n\n        return results\n    }\n\n    // Submit Form\n    const onSubmit = async (data) => {\n        try {\n            if (!category.value) return setCategory({ ...category, error: 'Category is required.' })\n\n            let formData = new FormData()\n            formData.append('title', data.title)\n            formData.append('category', category.value)\n            formData.append('video', data.video)\n            formData.append('text', text)\n            formData.append('image', image)\n\n            setLoading(true)\n            await Requests.University.PostStore(formData, header)\n            setLoading(false)\n        } catch (error) {\n            if (error) console.log(error)\n        }\n    }\n\n    return (\n        <div className=\"pb-4\">\n            <Container.Fluid>\n                <Container.Row>\n                    <Container.Column className=\"col-padding\">\n                        <Card.Simple className=\"border-0\">\n                            <Card.Header className=\"bg-white border-0 p-3 p-lg-4\">\n                                <div className=\"d-flex\">\n                                    <div><h6 className=\"mb-0\">Create Eazybest University Post</h6></div>\n                                    <div className=\"ml-auto\">\n                                        <Link to=\"/dashboard/university/post\">\n                                            <CustomButton className=\"btn-primary border-0 rounded-circle circle__padding\">\n                                                <Icon icon={chevronLeft} size={22} />\n                                            </CustomButton>\n                                        </Link>\n                                    </div>\n                                </div>\n                            </Card.Header>\n                            <Card.Body className=\"px-4 pt-0\">\n                                <form onSubmit={handleSubmit(onSubmit)}>\n\n                                    {/* Title */}\n                                    <div className=\"form-group mb-4\">\n                                        {errors.title && errors.title.message ? (\n                                            <p className=\"text-danger\">{errors.title && errors.title.message}</p>\n                                        ) : <p>Title</p>}\n\n                                        <input\n                                            type=\"text\"\n                                            name=\"title\"\n                                            className=\"form-control shadow-none\"\n                                            placeholder=\"Enter post title\"\n                                            ref={register({ required: \"Title is required\" })}\n                                        />\n                                    </div>\n\n                                    {/* Category */}\n                                    <div className=\"form-group mb-4\">\n                                        {category.error ? <p className=\"text-danger\">{category.error}</p> : <p>Category</p>}\n\n                                        <SearchableSelect\n                                            borderRadius={4}\n                                            placeholder=\"Select category\"\n                                            search={inputValue => handleSearchCategory(inputValue)}\n                                            values={(event) => setCategory({ ...category, value: event.value, error: false })}\n                                        />\n                                    </div>\n\n                                    {/* Video */}\n                                    <div className=\"form-group mb-4\">\n                                        <p>Video</p>\n\n                                        <input\n                                            type=\"text\"\n                                            name=\"video\"\n                                            className=\"form-control shadow-none\"\n                                            placeholder=\"Enter video link\"\n                                            ref={register()}\n                                        />\n                                    </div>\n\n                                    {/* File upload */}\n                                    <div className=\"form-group mb-4\">\n                                        <p>Image</p>\n                                        <SingleFileUploader\n                                            width={250}\n                                            height={100}\n                                            limit={500}\n                                            dataHandeller={data => setImage(data.image)}\n                                        />\n                                    </div>\n\n                                    {/* Description */}\n                                    <div className=\"form-group mb-4\">\n                                        <p>Description</p>\n                                        <ReactQuill\n                                            theme=\"snow\"\n                                            value={text}\n                                            onChange={value => setText(value)}\n                                            modules={modules}\n                                            formats={formats}\n                                        />\n                                    </div>\n\n                                    <div className=\"text-right\">\n                                        <CustomButton\n                                            type=\"submit\"\n                                            className=\"btn btn-success border-0 shadow-none\"\n                                            disabled={isLoading}\n                                        >{isLoading ? 'Creating ...' : 'Create'}</CustomButton>\n                                    </div>\n                                </form>\n                            </Card.Body>\n                        </Card.Simple>\n                    </Container.Column>\n                </Container.Row>\n            </Container.Fluid>\n        </div>\n    );\n}\n\nexport default Create;\n"]},"metadata":{},"sourceType":"module"}