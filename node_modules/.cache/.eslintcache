[{"D:\\previous\\src\\index.js":"1","D:\\previous\\src\\App.js":"2","D:\\previous\\src\\components\\scrollToTop\\Index.js":"3","D:\\previous\\src\\pages\\fourOfour\\Index.js":"4","D:\\previous\\src\\components\\privateRoute\\Index.js":"5","D:\\previous\\src\\components\\idleTimer\\IdleTimerContainer.js":"6","D:\\previous\\src\\pages\\master\\Index.js":"7","D:\\previous\\src\\utils\\Images.js":"8","D:\\previous\\src\\utils\\Authenticate.js":"9","D:\\previous\\src\\routes\\Index.js":"10","D:\\previous\\src\\components\\layout\\Index.js":"11","D:\\previous\\src\\components\\button\\index.js":"12","D:\\previous\\src\\pages\\dashboard\\Index.js":"13","D:\\previous\\src\\pages\\addsense\\Index.js":"14","D:\\previous\\src\\pages\\addsense\\Create.js":"15","D:\\previous\\src\\pages\\addsense\\Edit.js":"16","D:\\previous\\src\\pages\\brand\\Index.js":"17","D:\\previous\\src\\pages\\brand\\Create.js":"18","D:\\previous\\src\\pages\\brand\\Edit.js":"19","D:\\previous\\src\\pages\\banner\\Index.js":"20","D:\\previous\\src\\pages\\banner\\Create.js":"21","D:\\previous\\src\\pages\\banner\\Edit.js":"22","D:\\previous\\src\\pages\\vendor\\Index.js":"23","D:\\previous\\src\\pages\\vendor\\Create.js":"24","D:\\previous\\src\\pages\\vendor\\Edit.js":"25","D:\\previous\\src\\pages\\vendor\\Show.js":"26","D:\\previous\\src\\pages\\category\\Index.js":"27","D:\\previous\\src\\pages\\category\\Create.js":"28","D:\\previous\\src\\pages\\category\\Edit.js":"29","D:\\previous\\src\\pages\\product\\Index.js":"30","D:\\previous\\src\\pages\\product\\Pending.js":"31","D:\\previous\\src\\pages\\product\\Create.js":"32","D:\\previous\\src\\pages\\product\\Edit.js":"33","D:\\previous\\src\\pages\\product\\EditSlug.js":"34","D:\\previous\\src\\pages\\product\\Show.js":"35","D:\\previous\\src\\pages\\deactivated\\Index.js":"36","D:\\previous\\src\\pages\\deactivated\\Create.js":"37","D:\\previous\\src\\pages\\campaign\\Index.js":"38","D:\\previous\\src\\pages\\campaign\\Create.js":"39","D:\\previous\\src\\pages\\campaign\\Show.js":"40","D:\\previous\\src\\pages\\campaign\\Edit.js":"41","D:\\previous\\src\\pages\\coupon\\Index.js":"42","D:\\previous\\src\\pages\\coupon\\Create.js":"43","D:\\previous\\src\\pages\\coupon\\Show.js":"44","D:\\previous\\src\\pages\\coupon\\Edit.js":"45","D:\\previous\\src\\pages\\orders\\Index.js":"46","D:\\previous\\src\\pages\\orders\\Show.js":"47","D:\\previous\\src\\pages\\orders\\Edit.js":"48","D:\\previous\\src\\pages\\orders\\Create.js":"49","D:\\previous\\src\\pages\\orders\\Purchase.js":"50","D:\\previous\\src\\pages\\orders\\Invoice.js":"51","D:\\previous\\src\\pages\\shipping\\Index.js":"52","D:\\previous\\src\\pages\\shipping\\Create.js":"53","D:\\previous\\src\\pages\\shipping\\Edit.js":"54","D:\\previous\\src\\pages\\shipping\\Show.js":"55","D:\\previous\\src\\pages\\shipping\\area\\Index.js":"56","D:\\previous\\src\\pages\\shipping\\area\\Create.js":"57","D:\\previous\\src\\pages\\shipping\\area\\Edit.js":"58","D:\\previous\\src\\pages\\shipping\\district\\Index.js":"59","D:\\previous\\src\\pages\\shipping\\district\\Create.js":"60","D:\\previous\\src\\pages\\shipping\\district\\Edit.js":"61","D:\\previous\\src\\pages\\shipping\\division\\Index.js":"62","D:\\previous\\src\\pages\\shipping\\division\\Create.js":"63","D:\\previous\\src\\pages\\shipping\\division\\Edit.js":"64","D:\\previous\\src\\pages\\refund\\Index.js":"65","D:\\previous\\src\\pages\\refund\\Show.js":"66","D:\\previous\\src\\pages\\admin\\Index.js":"67","D:\\previous\\src\\pages\\admin\\Edit.js":"68","D:\\previous\\src\\pages\\admin\\Create.js":"69","D:\\previous\\src\\pages\\customer\\Index.js":"70","D:\\previous\\src\\pages\\customer\\Edit.js":"71","D:\\previous\\src\\pages\\customer\\Create.js":"72","D:\\previous\\src\\components\\navbar\\Index.js":"73","D:\\previous\\src\\pages\\profile\\Index.js":"74","D:\\previous\\src\\utils\\Helpers.js":"75","D:\\previous\\src\\utils\\Requests\\Index.js":"76","D:\\previous\\src\\components\\loading\\Index.js":"77","D:\\previous\\src\\components\\exportCSV\\Index.js":"78","D:\\previous\\src\\components\\card\\Index.js":"79","D:\\previous\\src\\components\\table\\Index.js":"80","D:\\previous\\src\\components\\rangeFilter\\Index.js":"81","D:\\previous\\src\\components\\form\\DivisionForm.js":"82","D:\\previous\\src\\components\\form\\DistrictForm.js":"83","D:\\previous\\src\\components\\modal\\Delete.js":"84","D:\\previous\\src\\components\\form\\AreaForm.js":"85","D:\\previous\\src\\components\\table\\CouponShow.js":"86","D:\\previous\\src\\components\\query\\Index.js":"87","D:\\previous\\src\\components\\form\\order\\PaymentMethodForm.js":"88","D:\\previous\\src\\components\\modal\\profile\\ChangePassword.js":"89","D:\\previous\\src\\components\\modal\\profile\\Index.js":"90","D:\\previous\\src\\components\\container\\index.js":"91","D:\\previous\\src\\components\\select\\index.js":"92","D:\\previous\\src\\components\\text\\index.js":"93","D:\\previous\\src\\utils\\Requests\\Role.js":"94","D:\\previous\\src\\utils\\Requests\\Shipping.js":"95","D:\\previous\\src\\utils\\Requests\\Options.js":"96","D:\\previous\\src\\utils\\Requests\\VendorPurchaseOrder.js":"97","D:\\previous\\src\\components\\search\\Index.js":"98","D:\\previous\\src\\utils\\Requests\\Sales.js":"99","D:\\previous\\src\\utils\\Requests\\PerformedCategory.js":"100","D:\\previous\\src\\utils\\Requests\\BuyerPurchase.js":"101","D:\\previous\\src\\utils\\Requests\\BestSale.js":"102","D:\\previous\\src\\utils\\Requests\\Reports.js":"103","D:\\previous\\src\\utils\\Requests\\Buyer.js":"104","D:\\previous\\src\\utils\\Requests\\Deactivated.js":"105","D:\\previous\\src\\utils\\Requests\\Refund.js":"106","D:\\previous\\src\\utils\\Requests\\Profile.js":"107","D:\\previous\\src\\utils\\Requests\\University.js":"108","D:\\previous\\src\\utils\\Requests\\RatingReview.js":"109","D:\\previous\\src\\utils\\Requests\\Subscriber.js":"110","D:\\previous\\src\\utils\\Requests\\Customer.js":"111","D:\\previous\\src\\utils\\Requests\\Admin.js":"112","D:\\previous\\src\\utils\\Requests\\Order.js":"113","D:\\previous\\src\\utils\\Requests\\Coupon.js":"114","D:\\previous\\src\\utils\\Requests\\Campaign.js":"115","D:\\previous\\src\\utils\\Requests\\PendingProduct.js":"116","D:\\previous\\src\\utils\\Requests\\Product.js":"117","D:\\previous\\src\\utils\\Requests\\Category.js":"118","D:\\previous\\src\\utils\\Requests\\Vendor.js":"119","D:\\previous\\src\\utils\\Requests\\Brand.js":"120","D:\\previous\\src\\utils\\Requests\\Banner.js":"121","D:\\previous\\src\\utils\\Requests\\Addsense.js":"122","D:\\previous\\src\\utils\\Requests\\Dashboard.js":"123","D:\\previous\\src\\utils\\Requests\\Auth.js":"124","D:\\previous\\src\\components\\form\\shipping\\index.js":"125","D:\\previous\\src\\utils\\Requests\\services\\index.js":"126","D:\\previous\\src\\components\\formGroup\\index.js":"127","D:\\previous\\src\\components\\form\\order\\CouponApply.js":"128","D:\\previous\\src\\components\\form\\order\\Customer.js":"129","D:\\previous\\src\\components\\modal\\Comments.js":"130","D:\\previous\\src\\utils\\Requests\\Error.js":"131","D:\\previous\\src\\utils\\api.js":"132","D:\\previous\\src\\utils\\location\\districts.js":"133","D:\\previous\\src\\components\\modal\\deliveryInfo\\Index.js":"134","D:\\previous\\src\\components\\datePickerNew\\Index.js":"135","D:\\previous\\src\\components\\modal\\OrderStatus.js":"136","D:\\previous\\src\\components\\modal\\Confirmation.js":"137","D:\\previous\\src\\utils\\districts.js":"138","D:\\previous\\src\\components\\modal\\product\\Index.js":"139","D:\\previous\\src\\components\\datepicker\\Index.js":"140","D:\\previous\\src\\components\\table\\ProductMaterial.js":"141","D:\\previous\\src\\components\\501\\NetworkError.js":"142","D:\\previous\\src\\utils\\location\\postcodes.js":"143","D:\\previous\\src\\components\\204\\NoContent.js":"144","D:\\previous\\src\\components\\form\\product\\DescriptionEdit.js":"145","D:\\previous\\src\\components\\form\\product\\Emi.js":"146","D:\\previous\\src\\components\\form\\product\\Warranty.js":"147","D:\\previous\\src\\components\\form\\product\\ReturnPolicy.js":"148","D:\\previous\\src\\components\\form\\product\\AdditionalEdit.js":"149","D:\\previous\\src\\components\\form\\product\\MaterialEdit.js":"150","D:\\previous\\src\\components\\form\\product\\Description.js":"151","D:\\previous\\src\\components\\form\\product\\Additional.js":"152","D:\\previous\\src\\components\\fileUploader\\Index.js":"153","D:\\previous\\src\\components\\form\\campaign\\index.js":"154","D:\\previous\\src\\components\\toastify\\index.js":"155","D:\\previous\\src\\components\\form\\product\\Material.js":"156","D:\\previous\\src\\utils\\Requests\\services\\campaign-service\\index.js":"157","D:\\previous\\src\\utils\\Requests\\services\\shipping-service\\index.js":"158","D:\\previous\\src\\utils\\Requests\\services\\shipping-service\\division.js":"159","D:\\previous\\src\\utils\\Requests\\services\\shipping-service\\shipping.js":"160","D:\\previous\\src\\utils\\Requests\\services\\shipping-service\\district.js":"161","D:\\previous\\src\\utils\\Requests\\services\\shipping-service\\area.js":"162","D:\\previous\\src\\components\\table\\Category.js":"163","D:\\previous\\src\\components\\window\\windowSize.js":"164","D:\\previous\\src\\components\\image\\imageCard.js":"165","D:\\previous\\src\\components\\shortName\\Index.js":"166","D:\\previous\\src\\components\\chart\\OrderByDay.js":"167","D:\\previous\\src\\components\\chart\\OrderCount.js":"168","D:\\previous\\src\\components\\chart\\BusketSize.js":"169","D:\\previous\\src\\components\\chart\\Grouped.js":"170","D:\\previous\\src\\components\\chart\\Index.js":"171","D:\\previous\\src\\pages\\role\\Edit.js":"172","D:\\previous\\src\\pages\\role\\Create.js":"173","D:\\previous\\src\\pages\\role\\Index.js":"174","D:\\previous\\src\\pages\\university\\post\\Show.js":"175","D:\\previous\\src\\pages\\university\\post\\Edit.js":"176","D:\\previous\\src\\pages\\university\\post\\Create.js":"177","D:\\previous\\src\\pages\\university\\post\\Index.js":"178","D:\\previous\\src\\pages\\university\\category\\Edit.js":"179","D:\\previous\\src\\pages\\university\\category\\Create.js":"180","D:\\previous\\src\\pages\\university\\category\\Index.js":"181","D:\\previous\\src\\pages\\reports\\storeCredit\\Index.js":"182","D:\\previous\\src\\pages\\reports\\bestCategory\\Index.js":"183","D:\\previous\\src\\pages\\reports\\buyerPurchase\\Index.js":"184","D:\\previous\\src\\pages\\reports\\bestSales\\Index.js":"185","D:\\previous\\src\\pages\\reports\\vedorPo\\Show.js":"186","D:\\previous\\src\\pages\\reports\\vedorPo\\Index.js":"187","D:\\previous\\src\\pages\\reports\\salesReport\\Index.js":"188","D:\\previous\\src\\pages\\reports\\buyerRegistration\\Index.js":"189","D:\\previous\\src\\pages\\ratingsReviews\\Index.js":"190","D:\\previous\\src\\pages\\subscriber\\Index.js":"191","D:\\previous\\src\\components\\salesFilter\\Index.js":"192"},{"size":153,"mtime":1638687752000,"results":"193","hashOfConfig":"194"},{"size":1245,"mtime":1644746017706,"results":"195","hashOfConfig":"194"},{"size":440,"mtime":1638687752000,"results":"196","hashOfConfig":"194"},{"size":609,"mtime":1638687752000,"results":"197","hashOfConfig":"194"},{"size":575,"mtime":1644651896233,"results":"198","hashOfConfig":"194"},{"size":2484,"mtime":1641806491000,"results":"199","hashOfConfig":"194"},{"size":3402,"mtime":1644732974395,"results":"200","hashOfConfig":"194"},{"size":856,"mtime":1638687752000,"results":"201","hashOfConfig":"194"},{"size":326,"mtime":1644652493556,"results":"202","hashOfConfig":"194"},{"size":38016,"mtime":1644913921336,"results":"203","hashOfConfig":"194"},{"size":4386,"mtime":1638687752000,"results":"204","hashOfConfig":"194"},{"size":382,"mtime":1641806491000,"results":"205","hashOfConfig":"194"},{"size":16338,"mtime":1641806491000,"results":"206","hashOfConfig":"194"},{"size":4829,"mtime":1641815651000,"results":"207","hashOfConfig":"194"},{"size":8648,"mtime":1641806491000,"results":"208","hashOfConfig":"194"},{"size":9622,"mtime":1641819608000,"results":"209","hashOfConfig":"194"},{"size":7695,"mtime":1643117995000,"results":"210","hashOfConfig":"194"},{"size":6009,"mtime":1638687752000,"results":"211","hashOfConfig":"194"},{"size":7186,"mtime":1641893262000,"results":"212","hashOfConfig":"194"},{"size":4976,"mtime":1642681833000,"results":"213","hashOfConfig":"194"},{"size":9481,"mtime":1641806491000,"results":"214","hashOfConfig":"194"},{"size":10580,"mtime":1641806491000,"results":"215","hashOfConfig":"194"},{"size":7026,"mtime":1643203010000,"results":"216","hashOfConfig":"194"},{"size":37992,"mtime":1642942342000,"results":"217","hashOfConfig":"194"},{"size":38996,"mtime":1643117995000,"results":"218","hashOfConfig":"194"},{"size":17466,"mtime":1642942342000,"results":"219","hashOfConfig":"194"},{"size":2506,"mtime":1642245125000,"results":"220","hashOfConfig":"194"},{"size":12774,"mtime":1644917598513,"results":"221","hashOfConfig":"194"},{"size":6320,"mtime":1641806491000,"results":"222","hashOfConfig":"194"},{"size":22413,"mtime":1643203010000,"results":"223","hashOfConfig":"194"},{"size":14791,"mtime":1641806491000,"results":"224","hashOfConfig":"194"},{"size":44601,"mtime":1644903653976,"results":"225","hashOfConfig":"194"},{"size":47884,"mtime":1643117995000,"results":"226","hashOfConfig":"194"},{"size":6795,"mtime":1641806491000,"results":"227","hashOfConfig":"194"},{"size":22130,"mtime":1641806491000,"results":"228","hashOfConfig":"194"},{"size":6317,"mtime":1641806491000,"results":"229","hashOfConfig":"194"},{"size":6071,"mtime":1641806491000,"results":"230","hashOfConfig":"194"},{"size":13969,"mtime":1642942298000,"results":"231","hashOfConfig":"194"},{"size":3064,"mtime":1642942298000,"results":"232","hashOfConfig":"194"},{"size":5679,"mtime":1642942298000,"results":"233","hashOfConfig":"194"},{"size":4828,"mtime":1642942298000,"results":"234","hashOfConfig":"194"},{"size":12037,"mtime":1641806491000,"results":"235","hashOfConfig":"194"},{"size":24704,"mtime":1642251797000,"results":"236","hashOfConfig":"194"},{"size":7895,"mtime":1642326202000,"results":"237","hashOfConfig":"194"},{"size":28470,"mtime":1642326202000,"results":"238","hashOfConfig":"194"},{"size":22453,"mtime":1642928042000,"results":"239","hashOfConfig":"194"},{"size":45448,"mtime":1642942342000,"results":"240","hashOfConfig":"194"},{"size":9136,"mtime":1641806491000,"results":"241","hashOfConfig":"194"},{"size":24463,"mtime":1644398508000,"results":"242","hashOfConfig":"194"},{"size":22543,"mtime":1641806491000,"results":"243","hashOfConfig":"194"},{"size":28253,"mtime":1643203010000,"results":"244","hashOfConfig":"194"},{"size":12776,"mtime":1643632483000,"results":"245","hashOfConfig":"194"},{"size":2599,"mtime":1644143421000,"results":"246","hashOfConfig":"194"},{"size":3499,"mtime":1642942298000,"results":"247","hashOfConfig":"194"},{"size":5990,"mtime":1638687752000,"results":"248","hashOfConfig":"194"},{"size":8294,"mtime":1643808408000,"results":"249","hashOfConfig":"194"},{"size":2115,"mtime":1643632483000,"results":"250","hashOfConfig":"194"},{"size":3474,"mtime":1642681833000,"results":"251","hashOfConfig":"194"},{"size":7481,"mtime":1643808408000,"results":"252","hashOfConfig":"194"},{"size":2156,"mtime":1642681833000,"results":"253","hashOfConfig":"194"},{"size":3462,"mtime":1643808408000,"results":"254","hashOfConfig":"194"},{"size":5739,"mtime":1643720317000,"results":"255","hashOfConfig":"194"},{"size":2120,"mtime":1643720317000,"results":"256","hashOfConfig":"194"},{"size":3152,"mtime":1643720317000,"results":"257","hashOfConfig":"194"},{"size":7434,"mtime":1641806491000,"results":"258","hashOfConfig":"194"},{"size":13541,"mtime":1638687752000,"results":"259","hashOfConfig":"194"},{"size":5966,"mtime":1641806491000,"results":"260","hashOfConfig":"194"},{"size":13158,"mtime":1641806491000,"results":"261","hashOfConfig":"194"},{"size":13615,"mtime":1641806491000,"results":"262","hashOfConfig":"194"},{"size":6134,"mtime":1643632483000,"results":"263","hashOfConfig":"194"},{"size":7072,"mtime":1638687752000,"results":"264","hashOfConfig":"194"},{"size":7857,"mtime":1643546646000,"results":"265","hashOfConfig":"194"},{"size":2396,"mtime":1641806491000,"results":"266","hashOfConfig":"194"},{"size":6916,"mtime":1638687752000,"results":"267","hashOfConfig":"194"},{"size":4844,"mtime":1638687752000,"results":"268","hashOfConfig":"194"},{"size":1665,"mtime":1642681833000,"results":"269","hashOfConfig":"194"},{"size":287,"mtime":1638687752000,"results":"270","hashOfConfig":"194"},{"size":1199,"mtime":1638687752000,"results":"271","hashOfConfig":"194"},{"size":912,"mtime":1638687752000,"results":"272","hashOfConfig":"194"},{"size":1246,"mtime":1638687752000,"results":"273","hashOfConfig":"194"},{"size":1813,"mtime":1642681833000,"results":"274","hashOfConfig":"194"},{"size":2609,"mtime":1643720317000,"results":"275","hashOfConfig":"194"},{"size":5119,"mtime":1643808408000,"results":"276","hashOfConfig":"194"},{"size":1787,"mtime":1641806491000,"results":"277","hashOfConfig":"194"},{"size":9781,"mtime":1643808408000,"results":"278","hashOfConfig":"194"},{"size":1567,"mtime":1638687752000,"results":"279","hashOfConfig":"194"},{"size":222,"mtime":1638687752000,"results":"280","hashOfConfig":"194"},{"size":5730,"mtime":1644219975000,"results":"281","hashOfConfig":"194"},{"size":2741,"mtime":1638687752000,"results":"282","hashOfConfig":"194"},{"size":4253,"mtime":1638687752000,"results":"283","hashOfConfig":"194"},{"size":860,"mtime":1641806491000,"results":"284","hashOfConfig":"194"},{"size":4593,"mtime":1642942298000,"results":"285","hashOfConfig":"194"},{"size":150,"mtime":1641806491000,"results":"286","hashOfConfig":"194"},{"size":2178,"mtime":1638687752000,"results":"287","hashOfConfig":"194"},{"size":2634,"mtime":1638687752000,"results":"288","hashOfConfig":"194"},{"size":2726,"mtime":1638687752000,"results":"289","hashOfConfig":"194"},{"size":288,"mtime":1638687752000,"results":"290","hashOfConfig":"194"},{"size":3001,"mtime":1638687752000,"results":"291","hashOfConfig":"194"},{"size":890,"mtime":1638687752000,"results":"292","hashOfConfig":"194"},{"size":612,"mtime":1638687752000,"results":"293","hashOfConfig":"194"},{"size":1211,"mtime":1638687752000,"results":"294","hashOfConfig":"194"},{"size":1259,"mtime":1638687752000,"results":"295","hashOfConfig":"194"},{"size":875,"mtime":1638687752000,"results":"296","hashOfConfig":"194"},{"size":880,"mtime":1638687752000,"results":"297","hashOfConfig":"194"},{"size":1611,"mtime":1638687752000,"results":"298","hashOfConfig":"194"},{"size":1899,"mtime":1638687752000,"results":"299","hashOfConfig":"194"},{"size":1365,"mtime":1638687752000,"results":"300","hashOfConfig":"194"},{"size":5036,"mtime":1638687752000,"results":"301","hashOfConfig":"194"},{"size":1705,"mtime":1638687752000,"results":"302","hashOfConfig":"194"},{"size":1241,"mtime":1638687752000,"results":"303","hashOfConfig":"194"},{"size":1954,"mtime":1638687752000,"results":"304","hashOfConfig":"194"},{"size":1932,"mtime":1638687752000,"results":"305","hashOfConfig":"194"},{"size":6947,"mtime":1644151730000,"results":"306","hashOfConfig":"194"},{"size":2921,"mtime":1638687752000,"results":"307","hashOfConfig":"194"},{"size":3752,"mtime":1638687752000,"results":"308","hashOfConfig":"194"},{"size":1290,"mtime":1638687752000,"results":"309","hashOfConfig":"194"},{"size":5474,"mtime":1643203010000,"results":"310","hashOfConfig":"194"},{"size":2547,"mtime":1638687752000,"results":"311","hashOfConfig":"194"},{"size":2990,"mtime":1643117995000,"results":"312","hashOfConfig":"194"},{"size":2594,"mtime":1638687752000,"results":"313","hashOfConfig":"194"},{"size":1954,"mtime":1641806491000,"results":"314","hashOfConfig":"194"},{"size":1909,"mtime":1641818780000,"results":"315","hashOfConfig":"194"},{"size":1235,"mtime":1638687752000,"results":"316","hashOfConfig":"194"},{"size":688,"mtime":1638687752000,"results":"317","hashOfConfig":"194"},{"size":31642,"mtime":1644227241000,"results":"318","hashOfConfig":"194"},{"size":148,"mtime":1642942298000,"results":"319","hashOfConfig":"194"},{"size":251,"mtime":1641806491000,"results":"320","hashOfConfig":"194"},{"size":1588,"mtime":1642942342000,"results":"321","hashOfConfig":"194"},{"size":6140,"mtime":1644209617000,"results":"322","hashOfConfig":"194"},{"size":2994,"mtime":1641806491000,"results":"323","hashOfConfig":"194"},{"size":1355,"mtime":1638687752000,"results":"324","hashOfConfig":"194"},{"size":882,"mtime":1644734416557,"results":"325","hashOfConfig":"194"},{"size":12570,"mtime":1638687752000,"results":"326","hashOfConfig":"194"},{"size":4684,"mtime":1638687752000,"results":"327","hashOfConfig":"194"},{"size":804,"mtime":1643203010000,"results":"328","hashOfConfig":"194"},{"size":2728,"mtime":1641806491000,"results":"329","hashOfConfig":"194"},{"size":1792,"mtime":1641806491000,"results":"330","hashOfConfig":"194"},{"size":5524,"mtime":1638687752000,"results":"331","hashOfConfig":"194"},{"size":1528,"mtime":1638687752000,"results":"332","hashOfConfig":"194"},{"size":1395,"mtime":1642681833000,"results":"333","hashOfConfig":"194"},{"size":1602,"mtime":1638687752000,"results":"334","hashOfConfig":"194"},{"size":475,"mtime":1638687752000,"results":"335","hashOfConfig":"194"},{"size":171499,"mtime":1638687752000,"results":"336","hashOfConfig":"194"},{"size":469,"mtime":1638687752000,"results":"337","hashOfConfig":"194"},{"size":1214,"mtime":1638687752000,"results":"338","hashOfConfig":"194"},{"size":2166,"mtime":1641806491000,"results":"339","hashOfConfig":"194"},{"size":6388,"mtime":1641806491000,"results":"340","hashOfConfig":"194"},{"size":3086,"mtime":1641806491000,"results":"341","hashOfConfig":"194"},{"size":4489,"mtime":1638687752000,"results":"342","hashOfConfig":"194"},{"size":11026,"mtime":1638687752000,"results":"343","hashOfConfig":"194"},{"size":1230,"mtime":1638687752000,"results":"344","hashOfConfig":"194"},{"size":4386,"mtime":1638689988000,"results":"345","hashOfConfig":"194"},{"size":10762,"mtime":1638687752000,"results":"346","hashOfConfig":"194"},{"size":30048,"mtime":1643720317000,"results":"347","hashOfConfig":"194"},{"size":719,"mtime":1641806491000,"results":"348","hashOfConfig":"194"},{"size":10515,"mtime":1641806491000,"results":"349","hashOfConfig":"194"},{"size":1955,"mtime":1642942298000,"results":"350","hashOfConfig":"194"},{"size":225,"mtime":1643720317000,"results":"351","hashOfConfig":"194"},{"size":2748,"mtime":1644143442000,"results":"352","hashOfConfig":"194"},{"size":4549,"mtime":1644150914000,"results":"353","hashOfConfig":"194"},{"size":3315,"mtime":1644208745000,"results":"354","hashOfConfig":"194"},{"size":3170,"mtime":1643808408000,"results":"355","hashOfConfig":"194"},{"size":9379,"mtime":1638687752000,"results":"356","hashOfConfig":"194"},{"size":1233,"mtime":1638687752000,"results":"357","hashOfConfig":"194"},{"size":828,"mtime":1638687752000,"results":"358","hashOfConfig":"194"},{"size":733,"mtime":1642942342000,"results":"359","hashOfConfig":"194"},{"size":1526,"mtime":1638687752000,"results":"360","hashOfConfig":"194"},{"size":681,"mtime":1638687752000,"results":"361","hashOfConfig":"194"},{"size":755,"mtime":1638687752000,"results":"362","hashOfConfig":"194"},{"size":1134,"mtime":1638687752000,"results":"363","hashOfConfig":"194"},{"size":1856,"mtime":1638687752000,"results":"364","hashOfConfig":"194"},{"size":6855,"mtime":1641806491000,"results":"365","hashOfConfig":"194"},{"size":5774,"mtime":1641806491000,"results":"366","hashOfConfig":"194"},{"size":4992,"mtime":1641806491000,"results":"367","hashOfConfig":"194"},{"size":3524,"mtime":1641806491000,"results":"368","hashOfConfig":"194"},{"size":10146,"mtime":1641806491000,"results":"369","hashOfConfig":"194"},{"size":8205,"mtime":1641806491000,"results":"370","hashOfConfig":"194"},{"size":5871,"mtime":1641806491000,"results":"371","hashOfConfig":"194"},{"size":6160,"mtime":1641806491000,"results":"372","hashOfConfig":"194"},{"size":4726,"mtime":1641806491000,"results":"373","hashOfConfig":"194"},{"size":5975,"mtime":1641806491000,"results":"374","hashOfConfig":"194"},{"size":17455,"mtime":1641806491000,"results":"375","hashOfConfig":"194"},{"size":4092,"mtime":1638687752000,"results":"376","hashOfConfig":"194"},{"size":7214,"mtime":1638687752000,"results":"377","hashOfConfig":"194"},{"size":10074,"mtime":1641806491000,"results":"378","hashOfConfig":"194"},{"size":22134,"mtime":1641806491000,"results":"379","hashOfConfig":"194"},{"size":5563,"mtime":1641806491000,"results":"380","hashOfConfig":"194"},{"size":5052,"mtime":1638687752000,"results":"381","hashOfConfig":"194"},{"size":5013,"mtime":1638687752000,"results":"382","hashOfConfig":"194"},{"size":12960,"mtime":1643632483000,"results":"383","hashOfConfig":"194"},{"size":6867,"mtime":1641806491000,"results":"384","hashOfConfig":"194"},{"size":5103,"mtime":1641806491000,"results":"385","hashOfConfig":"194"},{"filePath":"386","messages":"387","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},"xvrec9",{"filePath":"389","messages":"390","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"391","usedDeprecatedRules":"388"},{"filePath":"392","messages":"393","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"394","messages":"395","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"396","messages":"397","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"398","usedDeprecatedRules":"388"},{"filePath":"399","messages":"400","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"401","messages":"402","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"403","usedDeprecatedRules":"388"},{"filePath":"404","messages":"405","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"406","messages":"407","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"408","messages":"409","errorCount":0,"fatalErrorCount":0,"warningCount":98,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"410","messages":"411","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"412","messages":"413","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"414","messages":"415","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"416","messages":"417","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"418","messages":"419","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"420","messages":"421","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"422","usedDeprecatedRules":"388"},{"filePath":"423","messages":"424","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"425","messages":"426","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"427","messages":"428","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"429","messages":"430","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"431","messages":"432","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"433","messages":"434","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"435","messages":"436","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"437","messages":"438","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"439","messages":"440","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"441","messages":"442","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"443","messages":"444","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"445","messages":"446","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"447","messages":"448","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"449","messages":"450","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"451","usedDeprecatedRules":"388"},{"filePath":"452","messages":"453","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"454","usedDeprecatedRules":"388"},{"filePath":"455","messages":"456","errorCount":0,"fatalErrorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":"457","usedDeprecatedRules":"388"},{"filePath":"458","messages":"459","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"460","usedDeprecatedRules":"388"},{"filePath":"461","messages":"462","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"463","messages":"464","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"465","messages":"466","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"467","messages":"468","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"469","messages":"470","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"471","usedDeprecatedRules":"388"},{"filePath":"472","messages":"473","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"474","messages":"475","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"476","usedDeprecatedRules":"388"},{"filePath":"477","messages":"478","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"479","usedDeprecatedRules":"388"},{"filePath":"480","messages":"481","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"482","messages":"483","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"484","messages":"485","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"486","messages":"487","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"488","messages":"489","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"490","usedDeprecatedRules":"388"},{"filePath":"491","messages":"492","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"493","usedDeprecatedRules":"388"},{"filePath":"494","messages":"495","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"496","messages":"497","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"498","usedDeprecatedRules":"388"},{"filePath":"499","messages":"500","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"501","messages":"502","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"503","usedDeprecatedRules":"388"},{"filePath":"504","messages":"505","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"506","usedDeprecatedRules":"388"},{"filePath":"507","messages":"508","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"509","messages":"510","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"511","messages":"512","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"513","messages":"514","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"515","messages":"516","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"517","messages":"518","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"519","messages":"520","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"521","messages":"522","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"523","messages":"524","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"525","messages":"526","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"527","messages":"528","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"529","messages":"530","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"531","messages":"532","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"533","messages":"534","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"535","messages":"536","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"537","messages":"538","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"539","messages":"540","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"541","messages":"542","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"543","messages":"544","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"545","messages":"546","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"547","messages":"548","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"549","messages":"550","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"551","messages":"552","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"553","messages":"554","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"555","messages":"556","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"557","messages":"558","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"559","messages":"560","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"561","messages":"562","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"563","messages":"564","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"565","messages":"566","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"567","messages":"568","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"569","usedDeprecatedRules":"388"},{"filePath":"570","messages":"571","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"572","messages":"573","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"574","messages":"575","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"576","messages":"577","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"578","messages":"579","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"580","messages":"581","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"582","messages":"583","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"584","messages":"585","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"586","messages":"587","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"588","messages":"589","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"590","messages":"591","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"592","messages":"593","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"594","messages":"595","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"596","messages":"597","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"598","messages":"599","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"600","messages":"601","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"602","messages":"603","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"604","messages":"605","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"606","messages":"607","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"608","messages":"609","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"610","messages":"611","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"612","messages":"613","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"614","messages":"615","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"616","messages":"617","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"618","messages":"619","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"620","messages":"621","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"622","messages":"623","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"624","messages":"625","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"626","messages":"627","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"628","messages":"629","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"630","messages":"631","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"632","messages":"633","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"634","messages":"635","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"636","messages":"637","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"638","messages":"639","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"640","messages":"641","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"642","messages":"643","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"644","messages":"645","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"646","messages":"647","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"648","messages":"649","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"650","messages":"651","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"652","messages":"653","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"654","messages":"655","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"656","messages":"657","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"658","messages":"659","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"660","messages":"661","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"662","messages":"663","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"664","messages":"665","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"666","messages":"667","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"668","messages":"669","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"670","messages":"671","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"672","messages":"673","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"674","messages":"675","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"676","messages":"677","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"678","messages":"679","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"680","messages":"681","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"682","messages":"683","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"684","messages":"685","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"686","messages":"687","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"688","messages":"689","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"690","messages":"691","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"692","messages":"693","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"694","messages":"695","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"696","messages":"697","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"698","messages":"699","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"700","messages":"701","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"702","messages":"703","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"704","messages":"705","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"706","messages":"707","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"708","messages":"709","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"710","messages":"711","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"712","messages":"713","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"714","messages":"715","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"716","messages":"717","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"718","messages":"719","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"720","messages":"721","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"722","messages":"723","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"724","messages":"725","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"726","messages":"727","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"728","messages":"729","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"730","messages":"731","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"732","messages":"733","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"734","messages":"735","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"736","messages":"737","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"738","messages":"739","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"740","messages":"741","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"742","messages":"743","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"744","messages":"745","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"746","messages":"747","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"748","messages":"749","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"750","messages":"751","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"752","messages":"753","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"754","messages":"755","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"756","messages":"757","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"758","messages":"759","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"760","messages":"761","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"762","messages":"763","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"764","messages":"765","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"766","messages":"767","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"768","messages":"769","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"770","messages":"771","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"772","messages":"773","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"774","messages":"775","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"776","usedDeprecatedRules":"388"},{"filePath":"777","messages":"778","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"779","messages":"780","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"781","messages":"782","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"783","messages":"784","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"785","messages":"786","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"787","messages":"788","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},"D:\\previous\\src\\index.js",[],["789","790"],"D:\\previous\\src\\App.js",["791"],"import React from \"react\";\nimport \"./App.scss\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { IdleTimerContainer } from \"./components/idleTimer/IdleTimerContainer\";\n\n// import Login from \"./pages/auth/Login\";\n// import Reset from \"./pages/auth/Reset\";\nimport Master from \"./pages/master/Index\";\nimport FourOFour from \"./pages/fourOfour/Index\";\n\nimport ScrollToTop from \"./components/scrollToTop/Index\";\nimport PrivateRoute from \"./components/privateRoute/Index\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <IdleTimerContainer>\n        <Router>\n          <ScrollToTop>\n            <Switch>\n              {/* <Route exact path=\"/\" component={Login} /> */}\n              {/* <Route exact path=\"/reset\" component={Reset} /> */}\n\n              {/* <PrivateRoute path=\"/dashboard\" role={\"Super admin\" || \"Content Officer\"}> */}\n              <Route path=\"/\">\n                <Master />\n              </Route>\n\n            {/*   <Route path=\"/dashboard\">\n                <Master />\n              </Route> */}\n              <Route path=\"*\" component={FourOFour} />\n            </Switch>\n          </ScrollToTop>\n        </Router>\n      </IdleTimerContainer>\n    </div>\n  );\n}\n\nexport default App;\n","D:\\previous\\src\\components\\scrollToTop\\Index.js",[],"D:\\previous\\src\\pages\\fourOfour\\Index.js",[],"D:\\previous\\src\\components\\privateRoute\\Index.js",["792"],"import React from \"react\";\nimport { checkIfLoggedIn } from \"../../utils/Authenticate\";\nimport { Route, Redirect } from \"react-router-dom\";\n\nconst PrivateRoute = ({ props, children, ...rest }) => {\n  // const loggedIn = checkIfLoggedIn()\n  const loggedIn = true;\n\n  return (\n    <Route\n      {...rest}\n      render={({ location }) =>\n        loggedIn ? (\n          children\n        ) : (\n          <Redirect\n            to={{\n              pathname: \"/\",\n              from: location,\n            }}\n          />\n        )\n      }\n    />\n  );\n};\n\nexport default PrivateRoute;\n","D:\\previous\\src\\components\\idleTimer\\IdleTimerContainer.js",[],"D:\\previous\\src\\pages\\master\\Index.js",["793"],"import React, { useEffect, useState } from \"react\";\nimport \"./style.scss\";\nimport jwtDecode from \"jwt-decode\";\nimport { Switch, Route } from \"react-router-dom\";\nimport { routes } from \"../../routes/Index\";\n\nimport Layout from \"../../components/layout/Index\";\nimport FourOFour from \"../fourOfour/Index\";\n\nconst Index = () => {\n  const [permitted, setPermitted] = useState([]);\n  console.log(\"🚀 ~ file: Index.js ~ line 12 ~ Index ~ permitted\", permitted);\n\n  useEffect(() => {\n    const token = localStorage.getItem(\"token\");\n    if (token || true) {\n      //   const decode = jwtDecode(token);\n      //   const permissions = decode.permissions || [];\n      const permissions = [];\n\n      // Filter permitted routes from given permissions\n      if (routes && routes.length) {\n        const isAll = permissions.find((item) => item === \"all\") || true;\n\n        if (isAll) {\n          console.log(\n            \"🚀 ~ file: Index.js ~ line 25 ~ useEffect ~ isAll\",\n            isAll\n          );\n          return setPermitted(routes);\n        } else {\n          const permittedRoutes = routes.filter(({ name: routeName }) =>\n            permissions.some((x) => x === routeName)\n          );\n          setPermitted(permittedRoutes);\n        }\n      }\n    }\n  }, []);\n\n  return (\n    <div className=\"master\">\n      <Layout routes={permitted} />\n      <div className=\"main\">\n        <Switch>\n          {permitted &&\n            permitted.map((item, i) =>\n              item.name && item.path ? (\n                <Route\n                  key={i}\n                  exact={item.exact}\n                  path={item.path}\n                  component={item.component}\n                />\n              ) : item.child && item.child.length ? (\n                item.child.map((child, j) =>\n                  child.path ? (\n                    <Route\n                      key={j}\n                      exact={child.exact}\n                      path={child.path}\n                      component={child.component}\n                    />\n                  ) : child.child && child.child.length ? (\n                    child.child.map((leaf, k) => (\n                      <Route\n                        key={k}\n                        exact={leaf.exact}\n                        path={leaf.path}\n                        component={leaf.component}\n                      />\n                    ))\n                  ) : null\n                )\n              ) : null\n            )}\n\n          {/* {permitted && permitted.map((item, i) =>\n                        item.name && item.path ?\n                            <Route\n                                key={i}\n                                exact={item.exact}\n                                path={item.path}\n                                component={item.component}\n                            />\n                            : item.child && item.child.length ? item.child.map((child, j) =>\n                                <Route\n                                    key={j}\n                                    exact={child.exact}\n                                    path={child.path}\n                                    component={child.component}\n                                />\n                            ) : null)\n                    } */}\n\n          <Route path=\"*\" component={FourOFour} />\n        </Switch>\n      </div>\n    </div>\n  );\n};\n\nexport default Index;\n","D:\\previous\\src\\utils\\Images.js",[],"D:\\previous\\src\\utils\\Authenticate.js",[],"D:\\previous\\src\\routes\\Index.js",["794","795","796","797","798","799","800","801","802","803","804","805","806","807","808","809","810","811","812","813","814","815","816","817","818","819","820","821","822","823","824","825","826","827","828","829","830","831","832","833","834","835","836","837","838","839","840","841","842","843","844","845","846","847","848","849","850","851","852","853","854","855","856","857","858","859","860","861","862","863","864","865","866","867","868","869","870","871","872","873","874","875","876","877","878","879","880","881","882","883","884","885","886","887","888","889","890","891"],"D:\\previous\\src\\components\\layout\\Index.js",[],"D:\\previous\\src\\components\\button\\index.js",[],"D:\\previous\\src\\pages\\dashboard\\Index.js",[],"D:\\previous\\src\\pages\\addsense\\Index.js",[],"D:\\previous\\src\\pages\\addsense\\Create.js",[],"D:\\previous\\src\\pages\\addsense\\Edit.js",["892"],"import React, { useCallback, useEffect, useState } from 'react'\nimport './style.scss'\nimport Icon from 'react-icons-kit'\nimport { Link, useParams } from 'react-router-dom'\nimport { chevronLeft } from 'react-icons-kit/feather'\nimport { Text } from '../../components/text'\nimport { Card } from '../../components/card/Index'\nimport { Container } from '../../components/container'\nimport { CustomButton } from '../../components/button'\nimport { FormGroup } from '../../components/formGroup'\nimport { SearchableSelect } from '../../components/select'\nimport { PreLoader } from '../../components/loading/Index'\nimport { SingleFileUploader } from '../../components/fileUploader/Index'\n\nimport Requests from '../../utils/Requests/Index'\n\nconst Edit = () => {\n    const { id } = useParams()\n    const [data, setData] = useState({})\n    const [isLoading, setLoading] = useState(true)\n    const [changing, setChanging] = useState(false)\n    const [item, setItem] = useState({ type: null, value: null, error: null })\n    const [link, setLink] = useState({ value: null, error: null })\n    const [image, setImage] = useState({ value: null, error: null })\n\n    const [header] = useState({\n        headers: { Authorization: \"Bearer \" + localStorage.getItem('token') }\n    })\n\n    // Fetch data\n    const fetchData = useCallback(async () => {\n        const response = await Requests.Addsense.Show(id, header)\n        if (response) {\n            setData(response.data)\n            setItem({ type: response.data.type })\n            setLink({ value: response.data.link })\n            setImage({...image, value: response.data.image})\n        }\n        setLoading(false)\n    }, [id, header])\n\n    useEffect(() => {\n        fetchData()\n    }, [id, fetchData])\n\n    // Handle search\n    const handleSearch = async ({ inputValue, field }) => {\n        let response\n\n        if (!field) response = { data: [] }\n\n        if (field === \"brand\") {\n            response = await Requests.Options.Brand(inputValue, header)\n        }\n\n        if (field === \"vendor\") {\n            response = await Requests.Options.Vendor(inputValue, header)\n        }\n\n        if (field === \"product\") {\n            response = await Requests.Options.Product(inputValue, header)\n        }\n\n        if (field === \"category\") {\n            response = await Requests.Options.Category(inputValue, header)\n        }\n\n        if (field === \"sub-category\") {\n            response = await Requests.Options.SubCategory(inputValue, header)\n        }\n\n        if (field === \"leaf-category\") {\n            response = await Requests.Options.LeafCategory(inputValue, header)\n        }\n\n        if (response.data && response.data.length) return response.data\n        return []\n    }\n\n    // Submit Form\n    const onSubmit = async (event) => {\n        event.preventDefault()\n        if (item.type && !item.value) return setItem({ ...item, error: item.type + \" is required.\" })\n        if (!link.value && !item.value) return setLink({ ...link, error: \"Link is required.\" })\n        if (!image.value) return setImage({ ...image, error: \"Image is required.\" })\n\n        let formData = new FormData()\n        formData.append('id',id)\n        formData.append('type', item.type)\n        formData.append('item', item.value ? item.value : null)\n        formData.append('link', link.value)\n        formData.append('image', image.value)\n\n        setChanging(true)\n        await Requests.Addsense.Update(formData, header)\n        setChanging(false)\n    }\n\n    if (isLoading) return <PreLoader />\n\n    return (\n        <div className=\"mb-4\">\n            <Container.Fluid>\n                <Container.Row>\n                    <Container.Column className=\"col-padding\">\n                        <Card.Simple className=\"border-0 shadow-sm\">\n                            <Card.Header className=\"p-3 p-lg-4 bg-white\">\n                                <div className=\"d-flex\">\n                                    <div><h6 className=\"mt-2 mb-0\">Edit Addsense</h6></div>\n                                    <div className=\"ml-auto\">\n                                        <Link to=\"/dashboard/addsense\">\n                                            <CustomButton className=\"btn-primary border-0 rounded-circle circle__padding\">\n                                                <Icon icon={chevronLeft} size={22} />\n                                            </CustomButton>\n                                        </Link>\n                                    </div>\n                                </div>\n                            </Card.Header>\n                            <Card.Body>\n                                <form onSubmit={onSubmit}>\n\n                                    {/* Type */}\n                                    <FormGroup>\n                                        <Text><i>Select the type which you want to added.</i></Text>\n\n                                        <select\n                                            name=\"type\"\n                                            className=\"form-control shadow-none\"\n                                            defaultValue={data.type}\n                                            onChange={event => {\n                                                setItem({ ...item, value: null, type: event.target.value, error: null })\n                                                setLink({ ...link, error: null })\n                                            }}\n                                        >\n                                            <option value=\"\">-- Select Option --</option>\n                                            <option value=\"brand\">Brand</option>\n                                            <option value=\"vendor\">Vendor</option>\n                                            <option value=\"product\">Product</option>\n                                            <option value=\"category\">Category</option>\n                                            <option value=\"sub-category\">Sub Category</option>\n                                            <option value=\"leaf-category\">Leaf Category</option>\n                                        </select>\n                                    </FormGroup>\n\n                                    {/* Item */}\n                                    <FormGroup>\n                                        {item.error ? <p className=\"text-danger\"><i>{item.error}</i></p> : <p><i>Select the {item.type} which you want to add.</i></p>}\n\n                                        <SearchableSelect\n                                            borderRadius={4}\n                                            placeholder={item.type ? \"Select \" + item.type : \"Select item\"}\n                                            search={inputValue => handleSearch({ inputValue, field: item.type })}\n                                            values={data => {\n                                                if (item.type === \"brand\" || item.type === \"vendor\") {\n                                                    setItem({ ...item, value: data.value, error: null })\n                                                } else {\n                                                    setItem({ ...item, value: data.slug, error: null })\n                                                }\n                                            }}\n                                        />\n                                    </FormGroup>\n\n                                    {/* Link */}\n                                    <FormGroup>\n                                        {link.error ? <p className=\"text-danger\"><i>{link.error}</i></p> : <p><i>Add other links</i></p>}\n\n                                        <input\n                                            type=\"text\"\n                                            className=\"form-control shadow-none\"\n                                            placeholder=\"www.example.com\"\n                                            defaultValue={data.link || null}\n                                            onChange={event => setLink({ value: event.target.value, error: null })}\n                                        />\n                                    </FormGroup>\n\n\n                                    {/* Image uploader */}\n                                    <FormGroup>\n                                        {image.error ? <p className=\"text-danger\">{image.error}</p> : <p>Image</p>}\n                                        <SingleFileUploader\n                                            width={200}\n                                            height={100}\n                                            limit={100}\n                                            default={data.image||null}\n                                            dataHandeller={data => setImage({ value: data.image, error: data.error || null })}\n                                        />\n                                    </FormGroup>\n\n\n                                    {/* Submit button */}\n                                    <div className=\"text-right\">\n                                        <button type=\"submit\" className=\"btn shadow-none\" disabled={changing}>\n                                            {changing ? 'Saving ...' : 'Save Changes'}\n                                        </button>\n                                    </div>\n                                </form>\n                            </Card.Body>\n                        </Card.Simple>\n                    </Container.Column>\n                </Container.Row>\n            </Container.Fluid>\n        </div>\n    );\n};\n\nexport default Edit;","D:\\previous\\src\\pages\\brand\\Index.js",[],"D:\\previous\\src\\pages\\brand\\Create.js",[],"D:\\previous\\src\\pages\\brand\\Edit.js",[],"D:\\previous\\src\\pages\\banner\\Index.js",[],"D:\\previous\\src\\pages\\banner\\Create.js",[],"D:\\previous\\src\\pages\\banner\\Edit.js",[],"D:\\previous\\src\\pages\\vendor\\Index.js",[],"D:\\previous\\src\\pages\\vendor\\Create.js",[],"D:\\previous\\src\\pages\\vendor\\Edit.js",[],"D:\\previous\\src\\pages\\vendor\\Show.js",[],"D:\\previous\\src\\pages\\category\\Index.js",[],"D:\\previous\\src\\pages\\category\\Create.js",["893"],"D:\\previous\\src\\pages\\category\\Edit.js",[],"D:\\previous\\src\\pages\\product\\Index.js",["894"],"import React, { useCallback, useEffect, useState, useRef } from 'react'\nimport 'react-toastify/dist/ReactToastify.css'\nimport Icon from 'react-icons-kit'\nimport { Form } from 'react-bootstrap'\nimport { Link, useHistory } from 'react-router-dom'\nimport { toast } from 'react-toastify'\nimport { single } from 'react-icons-kit/entypo'\nimport { plus, edit2, info, eye, check, x } from 'react-icons-kit/feather'\nimport { useQuery } from '../../components/query/Index'\nimport { CustomButton } from '../../components/button'\nimport { DataTable } from '../../components/table/Index'\nimport { SearchableSelect, SingleSelect } from '../../components/select'\nimport { Container } from '../../components/container'\nimport { Card } from '../../components/card/Index'\n\nimport Requests from '../../utils/Requests/Index'\n\ntoast.configure({ autoClose: 10000 })\nconst Index = () => {\n    const onClearRef = useRef()\n    const history = useHistory()\n    const queryParams = useQuery()\n    const [totalItems, setTotalItems] = useState(0)\n\n    const [data, setData] = useState([])\n    const [loading, setLoading] = useState(false)\n    const [closeFilter, setCloseFilter] = useState(false)\n    const [searchLoading, setsearchLoading] = useState(false)\n    const [audit, setAudit] = useState({ value: null, loading: false })\n    const [header] = useState({\n        headers: { Authorization: \"Bearer \" + localStorage.getItem('token') }\n    })\n\n    // Fetch data\n    const fetchData = useCallback(async (query) => {\n        setLoading(true)\n        const response = await Requests.Product.Index(query, header)\n\n        if (response) {\n            setData(response.data)\n            setTotalItems(response.pagination ? response.pagination.items : 0)\n        }\n        setLoading(false)\n    }, [header])\n\n    useEffect(() => {\n        if (queryParams) {\n            let params = { ...queryParams }\n            params.page = queryParams.page || 1\n            params.limit = queryParams.limit || 10\n\n            const queryString = Object.keys(params).map(key => `${key}=${params[key]}`).join('&')\n            fetchData(queryString)\n            setCloseFilter(true)\n        }\n    }, [\n        header,\n        queryParams.limit,\n        queryParams.page,\n        queryParams.mainCategory,\n        queryParams.subCategory,\n        queryParams.leafCategory,\n        queryParams.brand,\n        queryParams.vendor,\n        queryParams.status,\n        queryParams.uploader,\n        queryParams.auditor,\n        queryParams.from,\n        queryParams.to,\n        fetchData\n    ])\n\n    // handle page change\n    const handlePageChange = page => {\n        let params = { ...queryParams }\n        params.page = page\n\n        const queryString = Object.keys(params).map(key => `${key}=${params[key]}`).join('&')\n        history.push(`/dashboard/product?${queryString}`)\n    }\n\n    // handle limit change\n    const handleLimitChange = async (newLimit, page) => {\n        setLoading(true)\n        let params = { ...queryParams }\n        params.page = page\n        params.limit = newLimit\n\n        const queryString = Object.keys(params).map(key => `${key}=${params[key]}`).join('&')\n        history.push(`/dashboard/product?${queryString}`)\n        setLoading(false)\n    }\n\n    // Handle search\n    const handleSearch = async data => {\n        setsearchLoading(true)\n        const response = await Requests.Product.Search(data, header)\n        if (response) setData(response.data)\n        setsearchLoading(false)\n        setCloseFilter(true)\n    }\n\n    // Handle search suggestion\n    const handleSuggestion = async (value) => {\n        let data = {\n            results: [],\n            message: null\n        }\n        console.log(value);\n        const response = await Requests.Product.Search(value, header)\n\n        if (response && response.data && response.data.length) {\n            for (let i = 0; i < response.data.length; i++) {\n                const element = response.data[i]\n                data.results.push(element.name)\n            }\n        } else {\n            data.message = \"No results found\"\n        }\n\n        return data\n    }\n\n    // Handle status\n    const handleStatus = async (data) => {\n        try {\n            let errors = []\n\n            if (data.brand && !data.brand.isActive) errors = [...errors, 'Item deactivated from brand.']\n            if (!data.vendor.isActive) errors = [...errors, 'Item deactivated from vendor.']\n            if (!data.mainCategory.isActive) errors = [...errors, 'Item deactivated from category.']\n\n            if (errors && errors.length) {\n                for (let i = 0; i < errors.length; i++) {\n                    const element = errors[i]\n                    toast.error(element)\n                }\n                return\n            }\n\n            const response = await Requests.Product.UpdateStatus(data._id, header)\n            if (response) fetchData(1)\n        } catch (error) {\n            if (error) console.log(error)\n        }\n    }\n\n    // ------------------------ Filter item ---------------\n    const handleFilterByUrl = (field, value) => {\n        let item = { [field]: value }\n        let params = {\n            ...queryParams,\n            ...item,\n            page: queryParams.page || 1,\n            limit: queryParams.limit || 10\n        }\n\n        const queryString = Object.keys(params).map(key => `${key}=${params[key]}`).join('&')\n        history.replace(`/dashboard/product?${queryString}`)\n        setCloseFilter(true)\n    }\n\n    const handleFilter = async (data) => {\n        let results = []\n        const response = await Requests.Product.FilterItem(data, header)\n\n        if (response.data && response.data.length) {\n            for (let i = 0; i < response.data.length; i++) {\n                const element = response.data[i]\n                results.push({\n                    value: element._id,\n                    label: element.name\n                })\n            }\n        }\n        return results\n    }\n\n    // handle audit\n    const handleAudit = async data => {\n        setAudit({ value: data, loading: true })\n        await Requests.Product.Audit(data, header)\n        fetchData(1)\n        setAudit({ value: null, loading: false })\n    }\n\n    // handle filter close\n    const onClear = async () => {\n        onClearRef.current.select.setState({ value: null })\n        setCloseFilter(false)\n        history.push(`/dashboard/product`)\n    }\n\n    const customStyles = {\n        rows: {\n            style: {\n                minHeight: '60px',\n            }\n        }\n    }\n\n    // Data columns\n    const columns = [\n        {\n            name: 'Image',\n            grow: 0,\n            cell: row => <img height={40} alt={\"Product\"} src={row.thumbnail} />,\n        },\n        {\n            name: 'Name',\n            sortable: true,\n            minWidth: '200px',\n            cell: row => <a target=\"_blank\" rel=\"noreferrer\" href={`https://eazybest.com/product/${row.slug}`}>{row.name.slice(0, 25) + \" ...\"}</a>\n        },\n        {\n            name: 'SKU',\n            sortable: true,\n            minWidth: '150px',\n            selector: row => row.sku\n        },\n        {\n            name: 'Purchase Price',\n            selector: row => row.purchasePrice,\n            sortable: true\n        },\n        {\n            name: 'Sale Price',\n            selector: row => row.salePrice,\n            sortable: true\n        },\n        {\n            name: 'Stock Amount',\n            selector: row => row.stockAmount,\n            sortable: true\n        },\n        {\n            name: 'Stock',\n            sortable: true,\n            grow: 0,\n            cell: row =>\n                <div>\n                    {row.stockStatus === \"In Stock\".toString() ?\n                        <Icon icon={check} size={15} className=\"text-success\" /> :\n                        <Icon icon={x} size={15} className=\"text-warning\" />\n                    }\n                </div>\n        },\n        {\n            name: '',\n            sortable: true,\n            grow: 0,\n            cell: row =>\n                <Form.Check\n                    type=\"switch\"\n                    id={row._id}\n                    value={row.isActive}\n                    defaultChecked={row.isActive}\n                    onChange={() => handleStatus(row)}\n                />\n        },\n        {\n            name: 'Status',\n            sortable: true,\n            grow: 0,\n            cell: row =>\n                <div>\n                    {row.isActive ?\n                        <Icon icon={single} size={35} className=\"text-success\" /> :\n                        <Icon icon={single} size={35} className=\"text-warning\" />\n                    }\n                </div>\n        },\n        {\n            name: 'Audit By',\n            sortable: true,\n            minWidth: '150px',\n            selector: row => row.auditBy\n        },\n        {\n            name: 'Audit',\n            sortable: true,\n            grow: 0,\n            minWidth: '120px',\n            cell: row =>\n                row.isAudit ?\n                    <CustomButton\n                        className=\"btn-success border-0\"\n                        style={{ fontSize: 14, padding: \"3px 12px\" }}\n                        disabled={audit.value && audit.value === row._id}\n                        onClick={() => handleAudit(row._id)}\n                    >{audit.value && audit.value === row._id && audit.loading ? \"Loading ...\" : \"Yes\"}</CustomButton>\n                    :\n                    <CustomButton\n                        className=\"btn-danger border-0\"\n                        style={{ fontSize: 14, padding: \"3px 12px\" }}\n                        disabled={audit.value && audit.value === row._id}\n                        onClick={() => handleAudit(row._id)}\n                    >{audit.value && audit.value === row._id && audit.loading ? \"Loading ...\" : \"No\"}</CustomButton>\n        },\n        {\n            name: 'Uploaded By',\n            sortable: true,\n            minWidth: '150px',\n            selector: row => row.createdBy\n        },\n        {\n            name: 'Updated By',\n            sortable: true,\n            grow: 2,\n            minWidth: '150px',\n            selector: row => row.updatedBy\n        },\n        {\n            name: 'Upload Date',\n            sortable: true,\n            minWidth: '200px',\n            selector: row => row.createdAt\n        },\n        {\n            name: 'Last Update',\n            sortable: true,\n            minWidth: '200px',\n            selector: row => row.updatedAt\n        },\n        {\n            name: 'Action',\n            grow: 0,\n            minWidth: '160px',\n            cell: row =>\n                <div>\n\n                    {/* product show button */}\n                    <Link to={`/dashboard/product/${row._id}/show`}>\n                        <CustomButton\n                            style={{ padding: \"6px 10px\" }}\n                            className=\"btn-primary rounded-circle border-0\"\n                        ><Icon icon={eye} size={16} />\n                        </CustomButton>\n                    </Link>\n\n                    {/* product edit button */}\n                    <Link to={`/dashboard/product/${row._id}/edit`}>\n                        <CustomButton\n                            style={{ padding: \"6px 10px\" }}\n                            className=\"btn-success rounded-circle border-0 mx-1\"\n                        ><Icon icon={edit2} size={16} />\n                        </CustomButton>\n                    </Link>\n\n                    {/* slug edit button */}\n                    <Link to={`/dashboard/product/${row._id}/edit/slug`}>\n                        <CustomButton\n                            style={{ padding: \"6px 10px\" }}\n                            className=\"btn-danger rounded-circle border-0\"\n                        ><Icon icon={info} size={16} />\n                        </CustomButton>\n                    </Link>\n                </div>\n        }\n    ]\n\n    return (\n        <div className=\"pb-4\">\n            <Container.Fluid>\n                <Container.Row>\n                    <Container.Column className=\"col-padding\">\n                        <Card.Simple className=\"border-0\">\n                            <Card.Header className=\"border-0 bg-white px-4 pt-4 pb-0\">\n\n                                {/* Title container */}\n                                <div className=\"d-flex\">\n                                    <div><h6 className=\"mb-0\">Products List ({totalItems})</h6></div>\n                                    <div className=\"ml-auto\">\n                                        <Link to=\"/dashboard/product/create\">\n                                            <CustomButton className=\"btn-primary border-0 rounded-circle circle__padding\">\n                                                <Icon icon={plus} size={22} />\n                                            </CustomButton>\n                                        </Link>\n\n                                        {closeFilter ?\n                                            <CustomButton\n                                                type=\"button\"\n                                                className=\"btn-danger border-0 rounded-circle circle__padding ml-1\"\n                                                onClick={onClear}\n                                            >\n                                                <Icon icon={x} size={22} />\n                                            </CustomButton>\n                                            : null\n                                        }\n                                    </div>\n                                </div>\n\n                                {/* Filter items */}\n                                <Container.Row className=\"pt-2 px-2\">\n\n                                    {/* Category */}\n                                    <Container.Column className=\"col-6 col-md-3 mb-2 px-1\">\n                                        <SearchableSelect\n                                            refs={onClearRef}\n                                            placeholder=\"Category\"\n                                            search={query => handleFilter({ query, field: \"category\" })}\n                                            values={event => handleFilterByUrl(\"mainCategory\", event.value)}\n                                        />\n                                    </Container.Column>\n\n                                    {/* Sub-Category */}\n                                    <Container.Column className=\"col-6 col-md-3 mb-2 px-1\">\n                                        <SearchableSelect\n                                            refs={onClearRef}\n                                            placeholder=\"Sub-category\"\n                                            search={query => handleFilter({ query, field: \"sub-category\" })}\n                                            values={event => handleFilterByUrl(\"subCategory\", event.value)}\n                                        />\n                                    </Container.Column>\n\n                                    {/* Leaf-Category */}\n                                    <Container.Column className=\"col-6 col-md-3 mb-2 px-1\">\n                                        <SearchableSelect\n                                            refs={onClearRef}\n                                            placeholder=\"Leaf-category\"\n                                            search={query => handleFilter({ query, field: \"leaf-category\" })}\n                                            values={event => handleFilterByUrl(\"leafCategory\", event.value)}\n                                        />\n                                    </Container.Column>\n\n                                    {/* Brand */}\n                                    <Container.Column className=\"col-6 col-md-3 mb-2 px-1\">\n                                        <SearchableSelect\n                                            refs={onClearRef}\n                                            placeholder=\"Brand\"\n                                            search={query => handleFilter({ query, field: \"brand\" })}\n                                            values={event => handleFilterByUrl(\"brand\", event.value)}\n                                        />\n                                    </Container.Column>\n\n                                </Container.Row>\n\n                                <Container.Row className=\"px-2\">\n\n                                    {/* Vendor */}\n                                    <Container.Column className=\"col-6 col-md-3 mb-2 px-1\">\n                                        <SearchableSelect\n                                            refs={onClearRef}\n                                            placeholder=\"Vendor\"\n                                            search={query => handleFilter({ query, field: \"vendor\" })}\n                                            values={event => handleFilterByUrl(\"vendor\", event.value)}\n                                        />\n                                    </Container.Column>\n\n                                    {/* Status */}\n                                    <Container.Column className=\"col-6 col-md-3 mb-2 px-1\">\n                                        <SingleSelect\n                                            refs={onClearRef}\n                                            placeholder=\"Status\"\n                                            borderRadius={25}\n                                            options={[\n                                                { label: \"Activated\", value: true },\n                                                { label: \"Deactivated\", value: false }\n                                            ]}\n                                            value={event => handleFilterByUrl(\"status\", event.value)}\n                                        />\n                                    </Container.Column>\n\n                                    {/* Content uploader */}\n                                    <Container.Column className=\"col-6 col-md-3 mb-2 px-1\">\n                                        <SearchableSelect\n                                            refs={onClearRef}\n                                            placeholder=\"Content uploader\"\n                                            search={query => handleFilter({ query, field: \"uploader\" })}\n                                            values={event => handleFilterByUrl(\"uploader\", event.value)}\n                                        />\n                                    </Container.Column>\n\n                                    {/* Content auditor */}\n                                    <Container.Column className=\"col-6 col-md-3 mb-2 px-1\">\n                                        <SearchableSelect\n                                            refs={onClearRef}\n                                            placeholder=\"Content auditor\"\n                                            search={query => handleFilter({ query, field: \"auditor\" })}\n                                            values={event => handleFilterByUrl(\"auditor\", event.value)}\n                                        />\n                                    </Container.Column>\n                                </Container.Row>\n\n                                {/* Date range filter */}\n                                <Container.Row className=\"px-2\">\n                                    <Container.Column className=\"col-sm-6 col-md-3 mb-2 px-1\">\n                                        <div className=\"form-group mb-0\">\n                                            <input\n                                                type=\"date\"\n                                                className=\"form-control shadow-none\"\n                                                style={{ borderRadius: 25, fontSize: 14, minHeight: 42 }}\n                                                onChange={event => handleFilterByUrl(\"from\", event.target.value)}\n                                            />\n                                        </div>\n                                    </Container.Column>\n                                    <Container.Column className=\"col-sm-6 col-md-3 mb-2 px-1\">\n                                        <div className=\"form-group mb-0\">\n                                            <input\n                                                type=\"date\"\n                                                className=\"form-control shadow-none\"\n                                                style={{ borderRadius: 25, fontSize: 14, minHeight: 42 }}\n                                                onChange={event => handleFilterByUrl(\"to\", event.target.value)}\n                                            />\n                                        </div>\n                                    </Container.Column>\n                                </Container.Row>\n\n                            </Card.Header>\n                            <Card.Body className=\"pt-0\">\n                                <DataTable\n                                    fixedHeader\n                                    fixedHeaderScrollHeight=\"580px\"\n                                    customStyles={customStyles}\n                                    columns={columns}\n                                    data={data}\n                                    loading={loading}\n                                    totalRows={totalItems}\n                                    pagination={true}\n                                    paginationServer={true}\n                                    handlePerRowsChange={handleLimitChange}\n                                    handlePageChange={handlePageChange}\n\n                                    searchable\n                                    placeholder={\"Search product\"}\n                                    search={handleSearch}\n                                    suggestion={handleSuggestion}\n                                    searchLoading={searchLoading}\n                                    clearSearch={() => fetchData(1)}\n                                />\n                            </Card.Body>\n                        </Card.Simple>\n                    </Container.Column>\n                </Container.Row>\n            </Container.Fluid>\n        </div >\n    );\n};\n\nexport default Index;\n\n\n","D:\\previous\\src\\pages\\product\\Pending.js",["895"],"import React, { useCallback, useEffect, useState } from 'react'\nimport Icon from 'react-icons-kit'\nimport { Link, useHistory } from 'react-router-dom'\nimport { plus, edit2, eye, x } from 'react-icons-kit/feather'\nimport { useQuery } from '../../components/query/Index'\nimport { CustomButton } from '../../components/button'\nimport { DataTable } from '../../components/table/Index'\nimport { SearchableSelect } from '../../components/select'\nimport { Container } from '../../components/container'\nimport { Card } from '../../components/card/Index'\n\nimport Requests from '../../utils/Requests/Index'\n\nconst Pending = () => {\n    const history = useHistory()\n    const queryParams = useQuery()\n    const [totalItems, setTotalItems] = useState(0)\n\n    const [data, setData] = useState([])\n    const [loading, setLoading] = useState(false)\n    const [closeFilter, setCloseFilter] = useState(false)\n    const [searchLoading, setsearchLoading] = useState(false)\n    const [header] = useState({\n        headers: { Authorization: \"Bearer \" + localStorage.getItem('token') }\n    })\n\n    // Fetch data\n    const fetchData = useCallback(async (query) => {\n        setLoading(true)\n        const response = await Requests.PendingProduct.Index(query, header)\n\n        if (response) {\n            setData(response.data)\n            setTotalItems(response.pagination ? response.pagination.items : 0)\n        }\n        setLoading(false)\n    }, [header])\n\n    useEffect(() => {\n        if (queryParams) {\n            let params = { ...queryParams }\n            params.page = queryParams.page || 1\n            params.limit = queryParams.limit || 10\n\n            const queryString = Object.keys(params).map(key => `${key}=${params[key]}`).join('&')\n            fetchData(queryString)\n            setCloseFilter(true)\n        }\n    }, [\n        header,\n        queryParams.limit,\n        queryParams.page,\n        queryParams.mainCategory,\n        queryParams.subCategory,\n        queryParams.leafCategory,\n        queryParams.brand,\n        queryParams.vendor,\n        queryParams.status,\n        queryParams.uploader,\n        queryParams.auditor,\n        queryParams.from,\n        queryParams.to,\n        fetchData\n    ])\n\n    // handle page change\n    const handlePageChange = page => {\n        let params = { ...queryParams }\n        params.page = page\n\n        const queryString = Object.keys(params).map(key => `${key}=${params[key]}`).join('&')\n        history.push(`/dashboard/product/pending/items?${queryString}`)\n    }\n\n    // handle limit change\n    const handleLimitChange = async (newLimit, page) => {\n        setLoading(true)\n        let params = { ...queryParams }\n        params.page = page\n        params.limit = newLimit\n\n        const queryString = Object.keys(params).map(key => `${key}=${params[key]}`).join('&')\n        history.push(`/dashboard/product/pending/items?${queryString}`)\n        setLoading(false)\n    }\n\n    let handleFilterByUrl = (field, value) => {\n        let item = { [field]: value }\n        let params = {\n            ...queryParams,\n            ...item,\n            page: queryParams.page || 1,\n            limit: queryParams.limit || 10\n        }\n\n        const queryString = Object.keys(params).map(key => `${key}=${params[key]}`).join('&')\n        history.replace(`/dashboard/product/pending/items?${queryString}`)\n        setCloseFilter(true)\n    }\n\n    const handleFilter = async (data) => {\n        let results = []\n        const response = await Requests.Product.FilterItem(data, header)\n\n        if (response.data && response.data.length) {\n            for (let i = 0; i < response.data.length; i++) {\n                const element = response.data[i]\n                results.push({\n                    value: element._id,\n                    label: element.name\n                })\n            }\n        }\n        return results\n    }\n\n    // Handle search\n    const handleSearch = async data => {\n        setsearchLoading(true)\n        const response = await Requests.PendingProduct.Search(data, header)\n        if (response) setData(response.data)\n        setsearchLoading(false)\n    }\n\n    // Handle search suggestion\n    const handleSuggestion = async (value) => {\n        let data = {\n            results: [],\n            message: null\n        }\n        const response = await Requests.PendingProduct.Search(value, header)\n\n        if (response && response.data && response.data.length) {\n            for (let i = 0; i < response.data.length; i++) {\n                const element = response.data[i]\n                data.results.push(element.name)\n            }\n        } else {\n            data.message = \"No results found\"\n        }\n\n        return data\n    }\n\n    // handle filter close\n    const onClear = async () => {\n        setCloseFilter(false)\n        history.push(`/dashboard/product/pending/items`)\n    }\n\n    // Custom style for rows\n    const customStyles = {\n        rows: {\n            style: {\n                minHeight: '60px',\n            }\n        }\n    }\n\n    // data rows\n    const columns = [\n        {\n            name: 'Image',\n            grow: 0,\n            cell: row => <img height={40} alt={\"Product\"} src={row.thumbnail} />,\n        },\n        {\n            name: 'Name',\n            selector: row => row.name.slice(0, 40) + \" ...\",\n            sortable: true\n        },\n        {\n            name: 'SKU',\n            selector: row => row.sku,\n            sortable: true\n        },\n        {\n            name: 'Purchase Price',\n            selector: row => row.purchasePrice,\n            sortable: true\n        },\n        {\n            name: 'Sale Price',\n            selector: row => row.salePrice,\n            sortable: true\n        },\n        {\n            name: 'Stock Amount',\n            selector: row => row.stockAmount,\n            sortable: true\n        },\n        {\n            name: 'Vendor',\n            sortable: true,\n            grow: 1,\n            selector: row => row.vendor\n        },\n        {\n            name: 'Action',\n            grow: 0,\n            minWidth: '120px',\n            cell: row =>\n                <div>\n                    <Link to={`/dashboard/product/${row._id}/show`}>\n                        <CustomButton\n                            style={{ padding: \"6px 10px\" }}\n                            className=\"btn-primary rounded-circle border-0 mr-1\"\n                        ><Icon icon={eye} size={16} />\n                        </CustomButton>\n                    </Link>\n\n                    <Link to={`/dashboard/product/${row._id}/edit`}>\n                        <CustomButton\n                            style={{ padding: \"6px 10px\" }}\n                            className=\"btn-success rounded-circle border-0\"\n                        ><Icon icon={edit2} size={16} />\n                        </CustomButton>\n                    </Link>\n                </div>\n        }\n    ]\n\n    return (\n        <div className=\"pb-4\">\n            <Container.Fluid>\n                <Container.Row>\n                    <Container.Column className=\"col-padding\">\n                        <Card.Simple className=\"border-0\">\n                            <Card.Header className=\"border-0 bg-white px-4 pt-4 pb-0\">\n\n                                {/* Title container */}\n                                <div className=\"d-flex\">\n                                    <div><h6 className=\"mb-0\">Pending Products ({totalItems})</h6></div>\n                                    <div className=\"ml-auto\">\n                                        <Link to=\"/dashboard/product/create\">\n                                            <CustomButton className=\"btn-primary border-0 rounded-circle circle__padding\">\n                                                <Icon icon={plus} size={22} />\n                                            </CustomButton>\n                                        </Link>\n\n                                        {closeFilter ?\n                                            <CustomButton\n                                                type=\"button\"\n                                                className=\"btn-danger border-0 rounded-circle circle__padding ml-1\"\n                                                onClick={onClear}\n                                            >\n                                                <Icon icon={x} size={22} />\n                                            </CustomButton>\n                                            : null\n                                        }\n                                    </div>\n                                </div>\n\n                                {/* Filter items */}\n                                <Container.Row className=\"pt-2 px-2\">\n\n                                    {/* Category */}\n                                    <Container.Column className=\"col-6 col-md-3 mb-2 px-1\">\n                                        <SearchableSelect\n                                            placeholder=\"Category\"\n                                            search={query => handleFilter({ query, field: \"category\" })}\n                                            values={event => handleFilterByUrl(\"mainCategory\", event.value)}\n                                        />\n                                    </Container.Column>\n\n                                    {/* Sub-Category */}\n                                    <Container.Column className=\"col-6 col-md-3 mb-2 px-1\">\n                                        <SearchableSelect\n                                            placeholder=\"Sub-category\"\n                                            search={query => handleFilter({ query, field: \"sub-category\" })}\n                                            values={event => handleFilterByUrl(\"subCategory\", event.value)}\n                                        />\n                                    </Container.Column>\n\n                                    {/* Leaf-Category */}\n                                    <Container.Column className=\"col-6 col-md-3 mb-2 px-1\">\n                                        <SearchableSelect\n                                            placeholder=\"Leaf-category\"\n                                            search={query => handleFilter({ query, field: \"leaf-category\" })}\n                                            values={event => handleFilterByUrl(\"leafCategory\", event.value)}\n                                        />\n                                    </Container.Column>\n\n                                    {/* Brand */}\n                                    <Container.Column className=\"col-6 col-md-3 mb-2 px-1\">\n                                        <SearchableSelect\n                                            placeholder=\"Brand\"\n                                            search={query => handleFilter({ query, field: \"brand\" })}\n                                            values={event => handleFilterByUrl(\"brand\", event.value)}\n                                        />\n                                    </Container.Column>\n                                </Container.Row>\n\n                                <Container.Row className=\"px-2\">\n\n                                    {/* Vendor */}\n                                    <Container.Column className=\"col-6 col-md-3 mb-2 px-1\">\n                                        <SearchableSelect\n                                            placeholder=\"Vendor\"\n                                            search={query => handleFilter({ query, field: \"vendor\" })}\n                                            values={event => handleFilterByUrl(\"vendor\", event.value)}\n                                        />\n                                    </Container.Column>\n\n                                    {/* Date from */}\n                                    <Container.Column className=\"col-sm-6 col-md-3 mb-2 px-1\">\n                                        <div className=\"form-group mb-0\">\n                                            <input\n                                                type=\"date\"\n                                                className=\"form-control shadow-none\"\n                                                style={{ borderRadius: 25, fontSize: 14, minHeight: 42 }}\n                                                onChange={event => handleFilterByUrl(\"from\", event.target.value)}\n                                            />\n                                        </div>\n                                    </Container.Column>\n\n                                    {/* Date to */}\n                                    <Container.Column className=\"col-sm-6 col-md-3 mb-2 px-1\">\n                                        <div className=\"form-group mb-0\">\n                                            <input\n                                                type=\"date\"\n                                                className=\"form-control shadow-none\"\n                                                style={{ borderRadius: 25, fontSize: 14, minHeight: 42 }}\n                                                onChange={event => handleFilterByUrl(\"to\", event.target.value)}\n                                            />\n                                        </div>\n                                    </Container.Column>\n                                </Container.Row>\n                            </Card.Header>\n                            <Card.Body>\n                                <DataTable\n                                    fixedHeader\n                                    fixedHeaderScrollHeight=\"580px\"\n                                    customStyles={customStyles}\n                                    columns={columns}\n                                    data={data}\n                                    loading={loading}\n                                    totalRows={totalItems}\n                                    pagination={true}\n                                    paginationServer={true}\n                                    handlePerRowsChange={handleLimitChange}\n                                    handlePageChange={handlePageChange}\n\n                                    searchable\n                                    placeholder={\"Search product\"}\n                                    search={handleSearch}\n                                    suggestion={handleSuggestion}\n                                    searchLoading={searchLoading}\n                                    clearSearch={() => fetchData(1)}\n                                />\n                            </Card.Body>\n                        </Card.Simple>\n                    </Container.Column>\n                </Container.Row>\n            </Container.Fluid>\n        </div>\n    );\n};\n\nexport default Pending;","D:\\previous\\src\\pages\\product\\Create.js",["896","897","898","899","900","901","902","903","904","905","906","907","908","909","910","911","912","913","914","915","916"],"import React, { useState, useCallback, useEffect } from \"react\";\nimport \"./style.scss\";\nimport Select from \"react-select\";\nimport { toast } from \"react-toastify\";\nimport { Form } from \"react-bootstrap\";\nimport { Icon } from \"react-icons-kit\";\nimport { Link } from \"react-router-dom\";\nimport { useForm } from \"react-hook-form\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport CreatableSelect from \"react-select/creatable\";\nimport { chevronLeft, plus } from \"react-icons-kit/feather\";\nimport { Container } from \"../../components/container\";\nimport { Card } from \"../../components/card/Index\";\n\nimport ProductMaterialInputs from \"../../components/form/product/Material\";\nimport ProductAdditionalInputs from \"../../components/form/product/Additional\";\nimport DescriptionInput from \"../../components/form/product/Description\";\nimport ReturnPolicy from \"../../components/form/product/ReturnPolicy\";\nimport Warranty from \"../../components/form/product/Warranty\";\nimport Emi from \"../../components/form/product/Emi\";\n\nimport Requests from \"../../utils/Requests/Index\";\n\ntoast.configure({ autoClose: 2000 });\nconst Create = () => {\n  const { register, handleSubmit, setError, clearErrors, errors } = useForm();\n  const [isLoading, setLoading] = useState(false);\n  const [vendors, setVendors] = useState([]);\n  const [brands, setBrands] = useState([]);\n\n  const [categories, setCategories] = useState({\n    options: [],\n    value: null,\n    error: null,\n  });\n  const [subCategories, setSubCategories] = useState({\n    options: [],\n    value: null,\n  });\n  const [leafCategories, setLeafCategories] = useState({\n    options: [],\n    value: null,\n  });\n\n  const [header] = useState({\n    headers: {\n      Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\n    },\n  });\n\n  // Input states\n  const [vendor, setVendor] = useState({ value: null, error: null });\n  const [brand, setBrand] = useState(null);\n\n  const [isTrending, setTrending] = useState(false);\n  const [newArrivals, setNewArrivals] = useState(false);\n  const [bestSale, setBestSale] = useState(false);\n  const [tags, setTags] = useState({ value: [], error: null });\n\n  const [thumbnail, setThumbnail] = useState({\n    value: null,\n    preview: null,\n    error: null,\n  });\n  const [additinalImages, setAdditionalImages] = useState({\n    values: null,\n    previews: null,\n    error: null,\n  });\n\n  const [material, setMaterial] = useState(null);\n  const [additional, setAdditional] = useState(null);\n  const [returnReplace, setReturnReplace] = useState({\n    status: null,\n    limit: null,\n    description: null,\n    limitError: false,\n  });\n  const [warranty, setWarranty] = useState({\n    status: null,\n    day: null,\n    month: null,\n    year: null,\n    description: null,\n    error: false,\n  });\n  const [emiData, setEmiData] = useState({ amount: null, duration: null });\n  const [description, setDescription] = useState(null);\n\n  // Get Data\n  const getData = useCallback(async () => {\n    const response = await Requests.Options.Index(header);\n    if (response) {\n      setCategories((exCategory) => ({\n        ...exCategory,\n        options: response.mainCategories,\n      }));\n      setBrands(response.brands);\n      setVendors(response.vendors);\n    }\n  }, [header]);\n\n  useEffect(() => {\n    getData();\n  }, [header, getData]);\n\n  // Handle vendor\n  const handleVendor = (event) =>\n    setVendor({ value: event.value, error: null });\n\n  // Handle brand\n  const handleBrand = (event) => setBrand(event.value);\n\n  // Handle main category\n  const handleMainCategory = (event) => {\n    const value = event.value;\n    const children = event.child;\n\n    setCategories((exCategory) => ({ ...exCategory, value: value }));\n\n    if (children && children.length) {\n      setSubCategories((exChildren) => ({ ...exChildren, options: children }));\n    } else {\n      setSubCategories((exChildren) => ({\n        ...exChildren,\n        options: [],\n      }));\n    }\n  };\n\n  // Handle sub category\n  const handleSubCategory = (event) => {\n    const value = event.value;\n    const children = event.child;\n\n    setSubCategories((exSubCategory) => ({ ...exSubCategory, value: value }));\n\n    if (children && children.length) {\n      setLeafCategories((exChildren) => ({ ...exChildren, options: children }));\n    } else {\n      setLeafCategories((exChildren) => ({\n        ...exChildren,\n        options: [],\n      }));\n    }\n  };\n\n  // Handle leaf category\n  const handleLeafCategory = (event) => {\n    const value = event.value;\n    setLeafCategories((exLeafCategory) => ({\n      ...exLeafCategory,\n      value: value,\n    }));\n  };\n\n  // Handle trending checkbox\n  const handleTrendingCheckBox = (event) => {\n    const item = event.target;\n    if (item.checked === true) {\n      setTrending(true);\n    } else {\n      setTrending(false);\n    }\n  };\n\n  // Handle new arrival checkbox\n  const handleNewArrivalCheckBox = (event) => {\n    const item = event.target;\n    if (item.checked === true) {\n      setNewArrivals(true);\n    } else {\n      setNewArrivals(false);\n    }\n  };\n\n  // Handle best sale checkbox\n  const handleBestSaleCheckBox = (event) => {\n    const item = event.target;\n    if (item.checked === true) {\n      setBestSale(true);\n    } else {\n      setBestSale(false);\n    }\n  };\n\n  // Handle tags\n  const handleTags = (event) => setTags({ value: event, error: null });\n\n  // Thumbnail handeller\n  const thumbnailHandeller = (event) => {\n    let file = event.target.files[0];\n    if (file) {\n      const size = parseInt(file.size) / 1000;\n      if (size > 700) {\n        setThumbnail({ ...thumbnail, error: \"Select less than 700KB file.\" });\n        return;\n      }\n      setThumbnail({\n        value: file,\n        preview: URL.createObjectURL(file),\n        error: null,\n      });\n    }\n  };\n\n  // Additinal Image handeller\n  const additionalImageHandeller = (event) => {\n    let size = 0;\n    let fileArray = [];\n    const files = event.target.files;\n\n    for (let i = 0; i < files.length; i++) {\n      fileArray.push(URL.createObjectURL(files[i]));\n      size += files[i].size;\n    }\n\n    if (fileArray.length < 2) {\n      setAdditionalImages({\n        ...additinalImages,\n        error: \"Select more than 2 files.\",\n      });\n      return;\n    } else if (parseInt(size / 1000) > 8192) {\n      setAdditionalImages({\n        ...additinalImages,\n        error: \"Total size limit is 8MB\",\n      });\n      return;\n    }\n    setAdditionalImages({ values: files, previews: fileArray, error: null });\n  };\n\n  // get materials data\n  const getMaterials = (data) => setMaterial(data);\n\n  // get additional data\n  const getAdditional = (data) => setAdditional(data);\n\n  // get description\n  const getDescription = (data) => setDescription(data);\n\n  // Handle return & replacement\n  const handleReturnReplacement = (data) => {\n    if (data.status) {\n      setReturnReplace({ ...returnReplace, status: data.status });\n    } else {\n      setReturnReplace({\n        status: null,\n        limit: null,\n        description: null,\n        limitError: null,\n      });\n    }\n    if (data.limit)\n      setReturnReplace({\n        ...returnReplace,\n        limit: data.limit,\n        limitError: null,\n      });\n    if (data.description)\n      setReturnReplace({ ...returnReplace, description: data.description });\n  };\n\n  // Handle warranty\n  const handleWarranty = (data) => {\n    if (data.status) {\n      setWarranty({ ...warranty, status: data.status });\n    } else {\n      setWarranty({\n        status: null,\n        day: null,\n        month: null,\n        year: null,\n        description: null,\n        error: false,\n      });\n    }\n    if (data.day) setWarranty({ ...warranty, day: data.day, error: null });\n    if (data.month)\n      setWarranty({ ...warranty, month: data.month, error: null });\n    if (data.year) setWarranty({ ...warranty, year: data.year, error: null });\n    if (data.description)\n      setWarranty({ ...warranty, description: data.description });\n  };\n\n  // Handle EMI\n  const handleEMI = (data) => {\n    if (data.amount) setEmiData({ ...emiData, amount: data.amount });\n    if (data.duration) setEmiData({ ...emiData, duration: data.duration });\n  };\n\n  // Submit Data\n  const onSubmit = async (data) => {\n    if (!vendor.value)\n      return setVendor({ value: null, error: \"Vendor is required\" });\n    if (!categories.value) {\n      setCategories((exCategory) => ({\n        ...exCategory,\n        value: null,\n        error: \"Main category is required\",\n      }));\n      return;\n    }\n    if (!tags.value.length)\n      return setTags({ value: null, error: \"Tags is required\" });\n    if (returnReplace.status && !returnReplace.limit)\n      return setReturnReplace({ ...returnReplace, limitError: true });\n    // if (warranty.status) {\n    //     if (!(warranty.day) || !(warranty.month) || !(warranty.year)) return setWarranty({ ...warranty, error: true })\n    // }\n\n    if (!thumbnail.value)\n      return setThumbnail({ ...thumbnail, error: \"Thumbnail is required.\" });\n\n    // if (!additinalImages.values) return setAdditionalImages({ values: null, error: \"Additional image is required\" })\n    if (additinalImages.values && additinalImages.values.length < 2)\n      return setAdditionalImages({\n        values: null,\n        error: \"Minimum 2 image required\",\n      });\n\n    if (parseInt(data.salePrice) <= parseInt(data.purchasePrice)) {\n      return setError(\"salePrice\", {\n        type: \"manual\",\n        message: \"Sale price must be greater than purchase price\",\n      });\n    } else {\n      clearErrors(\"salePrice\");\n    }\n\n    const product = {\n      ...data,\n      brand: brand || null,\n      isTrending,\n      newArrivals,\n      bestSale,\n      vendor: vendor.value || null,\n      mainCategory: categories.value || null,\n      subCategory: subCategories.value || null,\n      leafCategory: leafCategories.value || null,\n      tags: tags.value && tags.value.map((data) => data.value),\n      material: material,\n      additional: additional,\n      description: description,\n      returnReplacement: returnReplace,\n      warranty: warranty,\n      emi: emiData,\n    };\n\n    let formData = new FormData();\n    formData.append(\"name\", product.name);\n    // formData.append('bn_name',product.bn_name)\n    formData.append(\"brand\", JSON.stringify(product.brand));\n    formData.append(\"isTrending\", product.isTrending);\n    formData.append(\"newArrivals\", product.newArrivals);\n    formData.append(\"bestSale\", product.bestSale);\n    formData.append(\"vendor\", JSON.stringify(product.vendor));\n    formData.append(\"mainCategory\", JSON.stringify(product.mainCategory));\n    formData.append(\"subCategory\", JSON.stringify(product.subCategory));\n    formData.append(\"leafCategory\", JSON.stringify(product.leafCategory));\n    formData.append(\"tags\", JSON.stringify(product.tags));\n    formData.append(\"sku\", product.sku);\n    formData.append(\"stockAmount\", product.stockAmount);\n    formData.append(\"purchasePrice\", product.purchasePrice);\n    formData.append(\"salePrice\", product.salePrice);\n    formData.append(\"discountType\", product.discountType);\n    formData.append(\"discountAmount\", product.discountAmount);\n    formData.append(\"material\", JSON.stringify(product.material));\n    formData.append(\"additional\", JSON.stringify(product.additional));\n    formData.append(\"description\", product.description);\n    formData.append(\"video\", product.video);\n    formData.append(\n      \"returnReplacement\",\n      JSON.stringify(product.returnReplacement)\n    );\n    formData.append(\"warranty\", JSON.stringify(product.warranty));\n    formData.append(\"emi\", JSON.stringify(product.emi));\n\n    // Basic image\n    formData.append(\"image\", thumbnail.value);\n\n    // Additional images\n    if (additinalImages.values) {\n      for (const key of Object.keys(additinalImages.values)) {\n        formData.append(\"images\", additinalImages.values[key]);\n      }\n    }\n    // for (const key of Object.keys(additinalImages.values)) {\n    //     formData.append('images', additinalImages.values[key])\n    // }\n\n    setLoading(true);\n  /*   await Requests.Product.Store(formData, header); */\n    setLoading(false);\n\n    console.log(data,formData)\n  };\n\n  return (\n    <div className=\"store-product\">\n      <Container.Fluid>\n        <Container.Row>\n          <Container.Column className=\"col-padding\">\n            <Card.Simple className=\"border-0 shadow-sm\">\n              <Card.Header className=\"p-3 p-lg-4 bg-white\">\n                <div className=\"d-flex\">\n                  <div>\n                    <h6 className=\"mb-0\">Product Information</h6>\n                  </div>\n                  <div className=\"ml-auto\">\n                    <Link\n                      to=\"/dashboard/product\"\n                      type=\"button\"\n                      className=\"btn shadow-none rounded-circle\"\n                    >\n                      <Icon icon={chevronLeft} size={22} />\n                    </Link>\n                  </div>\n                </div>\n              </Card.Header>\n\n              {/* Store form */}\n              <Card.Body className=\"p-lg-4\">\n                <form onSubmit={handleSubmit(onSubmit)}>\n                  <Container.Row>\n                    {/* Name */}\n\n                    <Container.Column>\n                      <div className=\"form-group mb-4\">\n                        {errors.name && errors.name.message ? (\n                          <p className=\"text-danger\">\n                            {errors.name && errors.name.message}\n                          </p>\n                        ) : (\n                          <p>Product Title</p>\n                        )}\n\n                        <input\n                          type=\"text\"\n                          name=\"name\"\n                          className=\"form-control shadow-none\"\n                          placeholder=\"Enter product title\"\n                          ref={register({\n                            required: \"Product name is required\",\n                          })}\n                        />\n                      </div>\n                    </Container.Column>\n                    {/*Product bengali name */}\n                    {\n                      <Container.Column>\n                        <div className=\"form-group mb-4\">\n                          {errors.bn_name && errors.bn_name.message ? (\n                            <p className=\"text-danger\">\n                              {errors.bn_name && errors.bn_name.message}\n                            </p>\n                          ) : (\n                            <p>Product Title (BN)</p>\n                          )}\n\n                          <input\n                            type=\"text\"\n                            name=\"bn_name\"\n                            className=\"form-control shadow-none\"\n                            placeholder=\"Enter product bengali title\"\n                            // ref={register({\n                            //     required: \"Product name is required\"\n                            // })}\n                          />\n                        </div>\n                      </Container.Column>\n                    }\n                    {/* Sub Title */}\n                    {\n                      <Container.Column>\n                        <div className=\"form-group mb-4\">\n                          {errors.bn_name && errors.bn_name.message ? (\n                            <p className=\"text-danger\">\n                              {errors.bn_name && errors.bn_name.message}\n                            </p>\n                          ) : (\n                            <p>Sub Title</p>\n                          )}\n\n                          <input\n                            type=\"text\"\n                            name=\"bn_name\"\n                            className=\"form-control shadow-none\"\n                            placeholder=\"Enter product sub title\"\n                            // ref={register({\n                            //     required: \"Product name is required\"\n                            // })}\n                          />\n                        </div>\n                      </Container.Column>\n                    }\n\n                    {/* Vendor */}\n                    {\n                      <Container.Column className=\"col-lg-4\">\n                        <div className=\"form-group mb-4\">\n                          {errors.bn_name && errors.bn_name.message ? (\n                            <p className=\"text-danger\">\n                              {errors.bn_name && errors.bn_name.message}\n                            </p>\n                          ) : (\n                            <p>Author Name</p>\n                          )}\n\n                          <input\n                            type=\"text\"\n                            name=\"bn_name\"\n                            className=\"form-control shadow-none\"\n                            placeholder=\"Enter author name\"\n                            // ref={register({\n                            //     required: \"Product name is required\"\n                            // })}\n                          />\n                        </div>\n                      </Container.Column>\n                    }\n                    {\n                      <Container.Column className=\"col-lg-4\">\n                        <div className=\"form-group mb-4\">\n                          {errors.bn_name && errors.bn_name.message ? (\n                            <p className=\"text-danger\">\n                              {errors.bn_name && errors.bn_name.message}\n                            </p>\n                          ) : (\n                            <p>Translator Name</p>\n                          )}\n\n                          <input\n                            type=\"text\"\n                            name=\"bn_name\"\n                            className=\"form-control shadow-none\"\n                            placeholder=\"Enter translator name\"\n                            // ref={register({\n                            //     required: \"Product name is required\"\n                            // })}\n                          />\n                        </div>\n                      </Container.Column>\n                    }\n                    {\n                      <Container.Column className=\"col-lg-4\">\n                        <div className=\"form-group mb-4\">\n                          {errors.bn_name && errors.bn_name.message ? (\n                            <p className=\"text-danger\">\n                              {errors.bn_name && errors.bn_name.message}\n                            </p>\n                          ) : (\n                            <p>Editor Name</p>\n                          )}\n\n                          <input\n                            type=\"text\"\n                            name=\"bn_name\"\n                            className=\"form-control shadow-none\"\n                            placeholder=\"Enter editor name\"\n                            // ref={register({\n                            //     required: \"Product name is required\"\n                            // })}\n                          />\n                        </div>\n                      </Container.Column>\n                    }\n\n                    {/* Brand */}\n                    {\n                      <Container.Column>\n                        <div className=\"form-group mb-4\">\n                          <p>Order Type</p>\n\n                          {/*  <Select\n                                                    classNamePrefix=\"custom-select\"\n                                                    styles={customStyles}\n                                                    placeholder={'Select brand'}\n                                                    components={{ DropdownIndicator: () => null, IndicatorSeparator: () => null }}\n                                                    options={brands}\n                                                    onChange={handleBrand}\n                                                /> */}\n                          <select\n                            name=\"orderType\"\n                            className=\"form-control shadow-none\"\n                            ref={register()}\n                          >\n                            <option value=\"\">Select type</option>\n                            <option value=\"buy_now\">Buy Now</option>\n                            <option value=\"pre_order\">Pre Order</option>\n                          </select>\n                        </div>\n                      </Container.Column>\n                    }\n\n                    {/* Main Category */}\n                    <Container.Column className=\"col-lg-4\">\n                      <div className=\"form-group mb-4\">\n                        {categories.error ? (\n                          <p className=\"text-danger\">{categories.error}</p>\n                        ) : (\n                          <p>Category</p>\n                        )}\n\n                        <Select\n                          classNamePrefix=\"custom-select\"\n                          styles={customStyles}\n                          placeholder={\"Select  category\"}\n                          components={{\n                            DropdownIndicator: () => null,\n                            IndicatorSeparator: () => null,\n                          }}\n                          options={categories.options}\n                          onChange={handleMainCategory}\n                        />\n                      </div>\n                    </Container.Column>\n\n                    {/* Sub Category */}\n                    <Container.Column className=\"col-lg-4\">\n                      <div className=\"form-group mb-4\">\n                        <p>Sub category</p>\n\n                        <Select\n                          classNamePrefix=\"custom-select\"\n                          styles={customStyles}\n                          placeholder={\"Select sub category\"}\n                          components={{\n                            DropdownIndicator: () => null,\n                            IndicatorSeparator: () => null,\n                          }}\n                          options={subCategories.options}\n                          onChange={handleSubCategory}\n                        />\n                      </div>\n                    </Container.Column>\n\n                    {/* Leaf Category */}\n                    <Container.Column className=\"col-lg-4\">\n                      <div className=\"form-group mb-4\">\n                        <p>Leaf category</p>\n\n                        <Select\n                          classNamePrefix=\"custom-select\"\n                          styles={customStyles}\n                          placeholder={\"Select leaf category\"}\n                          components={{\n                            DropdownIndicator: () => null,\n                            IndicatorSeparator: () => null,\n                          }}\n                          options={leafCategories.options}\n                          onChange={handleLeafCategory}\n                        />\n                      </div>\n                    </Container.Column>\n\n                    {/* language and binding */}\n                    {\n                      <Container.Column className=\"col-lg-6\">\n                        <div className=\"form-group mb-4\">\n                          {errors.bn_name && errors.bn_name.message ? (\n                            <p className=\"text-danger\">\n                              {errors.bn_name && errors.bn_name.message}\n                            </p>\n                          ) : (\n                            <p>Language</p>\n                          )}\n\n                          <input\n                            type=\"text\"\n                            name=\"bn_name\"\n                            className=\"form-control shadow-none\"\n                            placeholder=\"Enter language\"\n                            // ref={register({\n                            //     required: \"Product name is required\"\n                            // })}\n                          />\n                        </div>\n                      </Container.Column>\n                    }\n                    {\n                      <Container.Column className=\"col-lg-6\">\n                        <div className=\"form-group mb-4\">\n                          {errors.bn_name && errors.bn_name.message ? (\n                            <p className=\"text-danger\">\n                              {errors.bn_name && errors.bn_name.message}\n                            </p>\n                          ) : (\n                            <p>Binding</p>\n                          )}\n\n                          <input\n                            type=\"text\"\n                            name=\"bn_name\"\n                            className=\"form-control shadow-none\"\n                            placeholder=\"binding\"\n                            // ref={register({\n                            //     required: \"Product name is required\"\n                            // })}\n                          />\n                        </div>\n                      </Container.Column>\n                    }\n\n                    {/* Trending item */}\n                    {/*    <Container.Column className=\"col-lg-4\">\n                      <div className=\"input-group mb-3\">\n                        <Form.Group controlId=\"trendingItem\">\n                          <Form.Check\n                            type=\"checkbox\"\n                            label=\"Tranding Item\"\n                            value=\"true\"\n                            onChange={handleTrendingCheckBox}\n                          />\n                        </Form.Group>\n                      </div>\n                    </Container.Column> */}\n\n                    {/* New Arrivals */}\n                    {/*  <Container.Column className=\"col-lg-4\">\n                      <div className=\"input-group mb-3\">\n                        <Form.Group controlId=\"newArrival\">\n                          <Form.Check\n                            type=\"checkbox\"\n                            label=\"New Arrivals\"\n                            value=\"true\"\n                            onChange={handleNewArrivalCheckBox}\n                          />\n                        </Form.Group>\n                      </div>\n                    </Container.Column> */}\n\n                    {/* Best Sale */}\n                    {/*  <Container.Column className=\"col-lg-4\">\n                      <div className=\"input-group mb-3\">\n                        <Form.Group controlId=\"bestSale\">\n                          <Form.Check\n                            type=\"checkbox\"\n                            label=\"Best Sale\"\n                            value=\"true\"\n                            onChange={handleBestSaleCheckBox}\n                          />\n                        </Form.Group>\n                      </div>\n                    </Container.Column> */}\n\n                    {/* Tags */}\n                    {/*  <Container.Column className=\"col-lg-4\">\n                      <div className=\"form-group mb-4\">\n                        {tags.error ? (\n                          <p className=\"text-danger\">{tags.error}</p>\n                        ) : (\n                          <p>Tags</p>\n                        )}\n\n                        <CreatableSelect\n                          classNamePrefix=\"custom-select\"\n                          isMulti\n                          styles={customStyles}\n                          placeholder={\"Enter tags\"}\n                          components={{\n                            DropdownIndicator: () => null,\n                            IndicatorSeparator: () => null,\n                          }}\n                          onChange={handleTags}\n                        />\n                      </div>\n                    </Container.Column> */}\n\n                    {/* SKU */}\n                    {/*  <Container.Column className=\"col-lg-4\">\n                      <div className=\"form-group mb-4\">\n                        {errors.sku && errors.sku.message ? (\n                          <p className=\"text-danger\">\n                            {errors.sku && errors.sku.message}\n                          </p>\n                        ) : (\n                          <p>Product SKU</p>\n                        )}\n\n                        <input\n                          type=\"text\"\n                          name=\"sku\"\n                          className=\"form-control shadow-none\"\n                          placeholder=\"Enter SKU\"\n                          ref={register({\n                            required: \"SKU is required\",\n                          })}\n                        />\n                      </div>\n                    </Container.Column> */}\n\n                    {/* Stock amount */}\n                    {/*   <Container.Column className=\"col-lg-4\">\n                      <div className=\"form-group mb-4\">\n                        {errors.stockAmount && errors.stockAmount.message ? (\n                          <p className=\"text-danger\">\n                            {errors.stockAmount && errors.stockAmount.message}\n                          </p>\n                        ) : (\n                          <p>Stock amount</p>\n                        )}\n\n                        <input\n                          type=\"number\"\n                          name=\"stockAmount\"\n                          className=\"form-control shadow-none\"\n                          placeholder=\"Enter stock name\"\n                          ref={register({\n                            required: \"Stock amount is required\",\n                            pattern: {\n                              value: /^\\d+$/,\n                              message: \"The amount must be in number.\",\n                            },\n                          })}\n                        />\n                      </div>\n                    </Container.Column> */}\n                  </Container.Row>\n\n                  {/* Pricing */}\n                  <Container.Fluid className=\"pricing-container mb-4\">\n                    <Container.Row>\n                      <Container.Column className=\"py-3 mb-3 border-bottom\">\n                        <h6 className=\"mb-0\">Pricing</h6>\n                      </Container.Column>\n\n                      {/* Purchase price */}\n                      <Container.Column className=\"col-lg-4\">\n                        <div className=\"form-group mb-4\">\n                          {errors.purchasePrice &&\n                          errors.purchasePrice.message ? (\n                            <p className=\"text-danger\">\n                              {errors.purchasePrice &&\n                                errors.purchasePrice.message}\n                            </p>\n                          ) : (\n                            <p>Price</p>\n                          )}\n\n                          <input\n                            type=\"number\"\n                            name=\"Price\"\n                            className=\"form-control shadow-none\"\n                            placeholder=\"Enter  price\"\n                            ref={register({\n                              required: \"Purchase price is required\",\n                              pattern: {\n                                value: /^\\d+$/,\n                                message: \"Price must be in number.\",\n                              },\n                            })}\n                          />\n                        </div>\n                      </Container.Column>\n\n                      {/* Sale Price */}\n                      <Container.Column className=\"col-lg-4\">\n                        <div className=\"form-group mb-4\">\n                          {errors.salePrice && errors.salePrice.message ? (\n                            <p className=\"text-danger\">\n                              {errors.salePrice && errors.salePrice.message}\n                            </p>\n                          ) : (\n                            <p>Discount</p>\n                          )}\n\n                          <input\n                            type=\"number\"\n                            name=\"discount\"\n                            className=\"form-control shadow-none\"\n                            placeholder=\"Enter discount \"\n                            ref={register({\n                              required: \"discount price is required\",\n                              pattern: {\n                                value: /^\\d+$/,\n                                message: \"Price must be in number.\",\n                              },\n                            })}\n                          />\n                        </div>\n                      </Container.Column>\n\n                      {/* Discount type */}\n                      {/*   <Container.Column className=\"col-lg-4\">\n                        <div className=\"form-group mb-4\">\n                          <p>Discount Amount</p>\n\n                          <select\n                            name=\"discountAmount\"\n                            className=\"form-control shadow-none\"\n                            ref={register()}\n                          >\n                            <option value=\"\">Select type</option>\n                            <option value=\"Flat\">Flat</option>\n                            <option value=\"Percentage\">Percentage</option>\n                          </select>\n                        </div>\n                      </Container.Column> */}\n\n                      {/* Discount Amount */}\n                      <Container.Column className=\"col-lg-4\">\n                        <div className=\"form-group mb-4\">\n                          <p>Discount Amount</p>\n\n                          <input\n                            type=\"number\"\n                            name=\"amount\"\n                            className=\"form-control shadow-none\"\n                            placeholder=\"Enter amount\"\n                            ref={register()}\n                          />\n                        </div>\n                      </Container.Column>\n                    </Container.Row>\n                  </Container.Fluid>\n\n                  {/* created by/at */}\n\n                  <Container.Row>\n                    {/* created by */}\n                    <Container.Column className=\"col-lg-6\">\n                      <div className=\"form-group mb-4\">\n                        <p>Created By</p>\n\n                        <input\n                          type=\"text\"\n                          name=\"created_by\"\n                          className=\"form-control shadow-none\"\n                          placeholder=\"created by\"\n                          ref={register()}\n                        />\n                      </div>\n                    </Container.Column>\n                    {/* created at */}\n                    <Container.Column className=\"col-lg-6\">\n                      <div className=\"form-group mb-4\">\n                        <p>Created At</p>\n\n                        <input\n                          type=\"text\"\n                          name=\"created_at\"\n                          className=\"form-control shadow-none\"\n                          placeholder=\"created at\"\n                          ref={register()}\n                        />\n                      </div>\n                    </Container.Column>\n                  </Container.Row>\n\n                  {/*  product number and stock manage */}\n                  <Container.Row>\n                    {/* created by */}\n                    <Container.Column className=\"col-lg-6\">\n                      <div className=\"form-group mb-4\">\n                        <p>Product Number</p>\n\n                        <input\n                          type=\"text\"\n                          name=\"product_name\"\n                          className=\"form-control shadow-none\"\n                          placeholder=\"product name\"\n                          ref={register()}\n                        />\n                      </div>\n                    </Container.Column>\n                    {/* created at */}\n                    <Container.Column className=\"col-lg-6\">\n                      <div className=\"form-group mb-4\">\n                        <p>Stock Manage</p>\n\n                        <input\n                          type=\"text\"\n                          name=\"stock_mange\"\n                          className=\"form-control shadow-none\"\n                          placeholder=\"stock manage\"\n                          ref={register()}\n                        />\n                      </div>\n                    </Container.Column>\n                  </Container.Row>\n\n                  {/* weight ,pon isbn */}\n                  <Container.Fluid className=\"pricing-container mb-4 p-4\">\n                    <Container.Row>\n                      <Container.Column className=\"col-lg-4\">\n                        <div className=\"form-group mb-4\">\n                          <p>Isbn</p>\n\n                          <input\n                            type=\"text\"\n                            name=\"isbn\"\n                            className=\"form-control shadow-none\"\n                            placeholder=\"isbn\"\n                            ref={register()}\n                          />\n                        </div>\n                      </Container.Column>\n                      <Container.Column className=\"col-lg-4\">\n                        <div className=\"form-group mb-4\">\n                          <p>Pon</p>\n\n                          <input\n                            type=\"text\"\n                            name=\"discountAmount\"\n                            className=\"form-control shadow-none\"\n                            placeholder=\"pon\"\n                            ref={register()}\n                          />\n                        </div>\n                      </Container.Column>\n                      <Container.Column className=\"col-lg-4\">\n                        <div className=\"form-group mb-4\">\n                          <p>Weight</p>\n\n                          <input\n                            type=\"text\"\n                            name=\"discountAmount\"\n                            className=\"form-control shadow-none\"\n                            placeholder=\"weight\"\n                            ref={register()}\n                          />\n                        </div>\n                      </Container.Column>\n                    </Container.Row>\n                  </Container.Fluid>\n\n                  {/* <ProductMaterialInputs data={getMaterials} /> */}\n                  {/*  <ProductAdditionalInputs data={getAdditional} /> */}\n                  {/* <ReturnPolicy\n                                        data={handleReturnReplacement}\n                                        error={returnReplace.limitError}\n                                    /> */}\n\n                  {/* <Warranty\n                                        data={handleWarranty}\n                                        error={warranty.error}\n                                    /> */}\n\n                  {/* <Emi data={handleEMI} /> */}\n                  <DescriptionInput data={getDescription} />\n\n                  {/* Video */}\n                  {/*   <div className=\"row mb-2 mb-lg-3\">\n                    <div className=\"col-12\">\n                      <div className=\"form-group mb-4\">\n                        <p>Video Link</p>\n\n                        <input\n                          type=\"text\"\n                          name=\"video\"\n                          className=\"form-control shadow-none\"\n                          placeholder=\"https://www.youtube.com/embed/Fm2TH7e93ug\"\n                          ref={register()}\n                        />\n                      </div>\n                    </div>\n                  </div> */}\n\n                  {/* cover image upload & preview Container */}\n                  <div className=\"row mb-3 mb-lg-4\">\n                    <div className=\"col-12\">\n                      <div>\n                        {thumbnail.error ? (\n                          <p className=\"text-danger mb-0 ml-2\">\n                            {thumbnail.error}\n                          </p>\n                        ) : (\n                          <p className=\"mb-0 ml-2\">Cover Image</p>\n                        )}\n                      </div>\n\n                      <div className=\"d-flex\">\n                        <div className=\"thumbnail-container\">\n                          <div className=\"image border\">\n                            <input\n                              type=\"file\"\n                              accept=\".jpg, .png, .jpeg\"\n                              className=\"upload\"\n                              onChange={thumbnailHandeller}\n                            />\n                            <div className=\"flex-center flex-column\">\n                              <Icon icon={plus} size={22} />\n                            </div>\n                          </div>\n                        </div>\n\n                        {/* image preview */}\n                        {thumbnail.preview ? (\n                          <div className=\"thumbnail-container text-center\">\n                            <div className=\"image border\">\n                              <img\n                                src={thumbnail.preview}\n                                className=\"img-fluid\"\n                                alt=\"...\"\n                              />\n                            </div>\n                          </div>\n                        ) : null}\n                      </div>\n                    </div>\n                  </div>\n                  {/* cover image end */}\n\n                  {/* inside image upload & preview Container */}\n                  <div className=\"row mb-3 mb-lg-4\">\n                    <div className=\"col-12\">\n                      <div>\n                        {thumbnail.error ? (\n                          <p className=\"text-danger mb-0 ml-2\">\n                            {thumbnail.error}\n                          </p>\n                        ) : (\n                          <p className=\"mb-0 ml-2\">Look Inside</p>\n                        )}\n                      </div>\n\n                      <div className=\"d-flex\">\n                        <div className=\"thumbnail-container\">\n                          <div className=\"image border\">\n                            <input\n                              type=\"file\"\n                              accept=\".jpg, .png, .jpeg\"\n                              className=\"upload\"\n                              onChange={thumbnailHandeller}\n                            />\n                            <div className=\"flex-center flex-column\">\n                              <Icon icon={plus} size={22} />\n                            </div>\n                          </div>\n                        </div>\n\n                        {/* image preview */}\n                        {thumbnail.preview ? (\n                          <div className=\"thumbnail-container text-center\">\n                            <div className=\"image border\">\n                              <img\n                                src={thumbnail.preview}\n                                className=\"img-fluid\"\n                                alt=\"...\"\n                              />\n                            </div>\n                          </div>\n                        ) : null}\n                      </div>\n                    </div>\n                  </div>\n                  {/* inside image end */}\n\n                  <div className=\"row\">\n                    {/* Submit button */}\n                    <div className=\"col-12 text-right\">\n                      <button\n                        type=\"submit\"\n                        className=\"btn shadow-none\"\n                        disabled={isLoading}\n                      >\n                        {isLoading ? \"Creating...\" : \"Create Product\"}\n                      </button>\n                    </div>\n                  </div>\n                </form>\n              </Card.Body>\n            </Card.Simple>\n          </Container.Column>\n        </Container.Row>\n      </Container.Fluid>\n    </div>\n  );\n};\n\nexport default Create;\n\nconst customStyles = {\n  control: (provided, state) => ({\n    ...provided,\n    minHeight: 42,\n    fontSize: 14,\n    color: \"#000\",\n    boxShadow: \"none\",\n    \"&:hover\": { borderColor: \"1px solid #ced4da\" },\n    border: state.isFocused ? \"1px solid #dfdfdf\" : \"1px solid #ced4da\",\n    borderRadius: 4,\n  }),\n};\n","D:\\previous\\src\\pages\\product\\Edit.js",["917","918","919","920","921","922","923","924","925","926"],"import React, { useState, useCallback, useEffect, useRef } from 'react'\nimport './style.scss'\nimport 'react-toastify/dist/ReactToastify.css'\nimport Select from 'react-select'\nimport { Form } from 'react-bootstrap'\nimport { Icon } from 'react-icons-kit'\nimport { useForm } from 'react-hook-form'\nimport { Link, useParams } from 'react-router-dom'\nimport { chevronLeft, plus, trash2 } from 'react-icons-kit/feather'\nimport { DeleteModal } from '../../components/modal/Delete'\nimport { SingleFileUploader } from '../../components/fileUploader/Index'\nimport { PreLoader } from '../../components/loading/Index'\n\nimport CreatableSelect from 'react-select/creatable'\nimport Requests from '../../utils/Requests/Index'\nimport ProductMaterialEditInput from '../../components/form/product/MaterialEdit'\nimport ProductAdditionalEditInput from '../../components/form/product/AdditionalEdit'\nimport ReturnPolicy from '../../components/form/product/ReturnPolicy'\nimport Warranty from '../../components/form/product/Warranty'\nimport Emi from '../../components/form/product/Emi'\nimport DescriptionEditInput from '../../components/form/product/DescriptionEdit'\n\nconst Edit = () => {\n    const { register, handleSubmit, setError, clearErrors, errors } = useForm()\n    const { id } = useParams()\n    const subCatRefs = useRef()\n    const leafCatRefs = useRef()\n    const [error, setErrors] = useState({})\n    const [isUpdate, setUpdate] = useState(false)\n    const [isLoading, setLoading] = useState(true)\n    const [isDelete, setDelete] = useState({ file: null, show: false, loading: false })\n\n    const [product, setProduct] = useState({})\n    const [vendors, setVendors] = useState([])\n    const [brands, setBrands] = useState([])\n\n    const [categories, setCategories] = useState({ options: [] })\n    const [subCategories, setSubCategories] = useState({ options: [] })\n    const [leafCategories, setLeafCategories] = useState({ options: [] })\n\n    const [thumbnail, setThumbnail] = useState({ preview: null, isUpload: false })\n    const [additinalImages, setAdditionalImages] = useState([])\n    const [additionalUpload, setAdditionalUpload] = useState(false)\n    const [descriptionImage, setDescriptionImage] = useState({ value: null, loading: false, error: null })\n    const [header] = useState({\n        headers: { Authorization: \"Bearer \" + localStorage.getItem('token') }\n    })\n\n    // Get Data \n    const getData = useCallback(async () => {\n        const response = await Requests.Options.Index(header)\n        if (response) {\n            setCategories(exCategory => ({ ...exCategory, options: response.mainCategories }))\n            setBrands(response.brands)\n            setVendors(response.vendors)\n        }\n\n        const productResponse = await Requests.Product.Show(id, header)\n        if (productResponse && productResponse.status === 200) {\n            setProduct(productResponse.data.product)\n            setAdditionalImages(productResponse.data.product.thumbnail.additional)\n        }\n        setLoading(false)\n    }, [id, header])\n\n    useEffect(() => {\n        getData()\n    }, [id, header, getData])\n\n    // Handle main category\n    const handleMainCategory = event => {\n        const value = event.value\n        const children = event.child\n        subCatRefs.current.select.clearValue()\n        leafCatRefs.current.select.clearValue()\n        setProduct({ ...product, mainCategory: value, subCategory: null, leafCategory: null })\n\n        if (children && children.length) {\n            setSubCategories(exChildren => ({ ...exChildren, options: children }))\n        } else {\n            setSubCategories(exChildren => ({\n                ...exChildren,\n                options: []\n            }))\n        }\n    }\n\n    // Handle sub category\n    const handleSubCategory = event => {\n        if (event) {\n            const value = event.value\n            const children = event.child\n            leafCatRefs.current.select.clearValue()\n            setProduct({ ...product, subCategory: value, leafCategory: null })\n\n            if (children && children.length) {\n                setLeafCategories(exChildren => ({ ...exChildren, options: children }))\n            } else {\n                setLeafCategories(exChildren => ({\n                    ...exChildren,\n                    options: []\n                }))\n            }\n        }\n    }\n\n    // Handle leaf category\n    const handleLeafCategory = event => {\n        if (event) setProduct({ ...product, leafCategory: event.value })\n    }\n\n    // Thumbnail handeller\n    const thumbnailHandeller = async (event) => {\n        let file = event.target.files[0]\n        if (file) {\n            setThumbnail({ preview: URL.createObjectURL(file), isUpload: true })\n\n            let formData = new FormData()\n            formData.append('image', file)\n\n            await Requests.Product.UpdateThumb(id, formData, header)\n            setThumbnail({ preview: URL.createObjectURL(file), isUpload: false })\n        }\n    }\n\n    // Additinal Image handeller\n    const additionalImageHandeller = async (event) => {\n        const file = event.target.files[0]\n        const fileURl = URL.createObjectURL(file)\n        if (file) {\n            setAdditionalImages([...additinalImages, fileURl])\n            setAdditionalUpload(true)\n\n            let formData = new FormData()\n            formData.append('image', file)\n\n            await Requests.Product.AddThumb(id, formData, header)\n            setAdditionalUpload(false)\n        }\n    }\n\n    // get additional info data\n    const getAdditional = data => setProduct({ ...product, additionalInfo: data })\n\n    // get material info data\n    const getMaterial = data => setProduct({ ...product, materials: data })\n\n    // get description data\n    const getDescription = data => setProduct({ ...product, description: data })\n\n    // Handle return & replacement\n    const handleReturnReplacement = data => {\n        if (data.status) {\n            setProduct({ ...product, returnReplacement: { ...product.returnReplacement, status: data.status } })\n        } else {\n            setProduct({ ...product, returnReplacement: { ...product.returnReplacement, status: false, limit: null, description: null, limitError: null } })\n        }\n        if (data.limit) setProduct({ ...product, returnReplacement: { ...product.returnReplacement, limit: data.limit, limitError: null } })\n        if (data.description) setProduct({ ...product, returnReplacement: { ...product.returnReplacement, description: data.description } })\n    }\n\n    // Handle warranty\n    const handleWarranty = data => {\n        if (data.status) {\n            setProduct({ ...product, warranty: { ...product.warranty, status: data.status } })\n        } else {\n            setProduct({ ...product, warranty: { ...product.warranty, status: null, day: null, month: null, year: null, description: null, error: null } })\n        }\n\n        if (data.day) setProduct({ ...product, warranty: { ...product.warranty, day: data.day, error: null } })\n        if (data.month) setProduct({ ...product, warranty: { ...product.warranty, month: data.month, error: null } })\n        if (data.year) setProduct({ ...product, warranty: { ...product.warranty, year: data.year, error: null } })\n        if (data.description) setProduct({ ...product, warranty: { ...product.warranty, description: data.description } })\n    }\n\n    // Handle EMI\n    const handleEMI = data => {\n        if (data.amount) setProduct({ ...product, emi: { ...product.emi, amount: parseInt(data.amount) } })\n        if (data.duration) setProduct({ ...product, emi: { ...product.emi, duration: data.duration } })\n    }\n\n    // Upload description images\n    const uploadDescriptionImages = async (data) => {\n        setDescriptionImage({\n            ...descriptionImage,\n            loading: true,\n            value: data.image || null,\n            error: data.error || null\n        })\n\n        const formData = new FormData()\n        formData.append('image', data.image)\n\n        await Requests.Product.UploadDescImage(id, formData, header)\n        setDescriptionImage({\n            ...descriptionImage,\n            loading: false\n        })\n    }\n\n    // Submit form\n    const onSubmit = async (data) => {\n\n        if (!product.vendor) return setErrors({ ...error, vendor: 'Vendor is required.' })\n        if (!product.mainCategory) return setErrors({ ...error, mainCategory: 'Main category is required.' })\n        if (!product.tags.length) return setErrors({ ...error, tags: 'Tags is required.' })\n        if (product.returnReplacement.status && !product.returnReplacement.limit) {\n            return setProduct({ ...product, warranty: { ...product.warranty, limitError: true } })\n        }\n        // if (product.warranty.status && !product.warranty.day) {\n        //     return setProduct({ ...product, warranty: { ...product.warranty, error: true } })\n        // }\n\n        if (parseInt(data.salePrice) <= parseInt(data.purchasePrice)) {\n            setError(\"salePrice\", {\n                type: \"manual\",\n                message: \"Sale price must be greater than purchase price\"\n            })\n            return\n        } else {\n            clearErrors(\"salePrice\")\n        }\n\n        const newProduct = {\n            ...data,\n            vendor: product.vendor._id || product.vendor,\n            brand: product.brand && product.brand._id ? product.brand._id : product.brand,\n\n            mainCategory: product.mainCategory._id || product.mainCategory,\n            subCategory: product.subCategory ? product.subCategory._id || product.subCategory : null,\n            leafCategory: product.leafCategory ? product.leafCategory._id || product.leafCategory : null,\n\n            isTrending: product.isTrending,\n            newArrivals: product.newArrivals,\n            bestSale: product.bestSale,\n            tags: product.tags,\n            materials: JSON.stringify(product.materials),\n            additionalInfo: product.additionalInfo,\n            description: product.description,\n            returnReplacement: {\n                status: product.returnReplacement.status,\n                limit: product.returnReplacement.limit,\n                description: product.returnReplacement.description\n            },\n            warranty: {\n                status: product.warranty.status,\n                day: product.warranty.day,\n                month: product.warranty.month,\n                year: product.warranty.year,\n                description: product.warranty.description\n            },\n            emi: {\n                amount: product.emi.amount,\n                duration: product.emi.duration\n            }\n        }\n\n        setUpdate(true)\n        await Requests.Product.Update(id, newProduct, header)\n        setUpdate(false)\n    }\n\n    // Submit to delete thumb\n    const deleteThumb = async () => {\n        setDelete({ ...isDelete, loading: true })\n        const fileArr = isDelete.file.split('/')\n        const file = fileArr.pop()\n\n        const nonDeleteFiles = await additinalImages.filter(item => item !== isDelete.file)\n        setAdditionalImages(nonDeleteFiles)\n\n        await Requests.Product.RemoveAdditionalThumb(id, file, header)\n        setDelete({ file: null, show: false, loading: false })\n    }\n\n    if (isLoading) return <PreLoader />\n\n    return (\n        <div className=\"edit-product\">\n            <div className=\"container-fluid\">\n                <div className=\"row\">\n                    <div className=\"col-12 col-padding\">\n                        <div className=\"card border-0 shadow-sm\">\n                            <div className=\"card-header p-3 p-lg-4 bg-white\">\n                                <div className=\"d-flex\">\n                                    <div><h6 className=\"mb-0\">Edit product</h6></div>\n                                    <div className=\"ml-auto\">\n                                        <Link\n                                            to=\"/dashboard/product\"\n                                            type=\"button\"\n                                            className=\"btn shadow-none rounded-circle\"\n                                        >\n                                            <Icon icon={chevronLeft} size={22} />\n                                        </Link>\n                                    </div>\n                                </div>\n                            </div>\n\n                            {/* Update form */}\n                            <div className=\"card-body p-4\">\n                                <form onSubmit={handleSubmit(onSubmit)}>\n\n                                    <div className=\"row\">\n\n                                        {/* Name */}\n                                        <div className=\"col-12\">\n                                            <div className=\"form-group mb-4\">\n                                                {errors.name && errors.name.message ? (\n                                                    <p className=\"text-danger\">{errors.name && errors.name.message}</p>\n                                                ) : <p>Product name</p>}\n\n                                                <input\n                                                    type=\"text\"\n                                                    name=\"name\"\n                                                    defaultValue={product.name || null}\n                                                    className=\"form-control shadow-none\"\n                                                    placeholder=\"Enter product name\"\n                                                    ref={register({\n                                                        required: \"Product name is required\"\n                                                    })}\n                                                />\n                                            </div>\n                                        </div>\n\n                                        {/* Product bengali name */}\n                                        {/* <div className=\"col-12\">\n                                            <div className=\"form-group mb-4\">\n                                                {errors.bn_name && errors.bn_name.message ? (\n                                                    <p className=\"text-danger\">{errors.bn_name && errors.bn_name.message}</p>\n                                                ) : <p>Product name (EN)</p>}\n\n                                                <input\n                                                    type=\"text\"\n                                                    name=\"bn_name\"\n                                                    defaultValue={product.bn_name || null}\n                                                    className=\"form-control shadow-none\"\n                                                    placeholder=\"Enter product bengali name\"\n                                                    // ref={register({\n                                                    //     required: \"Product name is required\"\n                                                    // })}\n                                                />\n                                            </div>\n                                        </div> */}\n\n                                        {/* Vendor */}\n                                        <div className=\"col-12\">\n                                            <div className=\"form-group mb-4\">\n                                                {error.vendor ?\n                                                    <p className=\"text-danger\">{error.vendor}</p>\n                                                    : <p>Vendor / Publisher</p>}\n\n                                                <Select\n                                                    defaultValue={{ value: product.vendor._id, label: product.vendor.name }}\n                                                    classNamePrefix=\"custom-select\"\n                                                    styles={customStyles}\n                                                    placeholder={'Select vendor'}\n                                                    components={{ DropdownIndicator: () => null, IndicatorSeparator: () => null }}\n                                                    options={vendors}\n                                                    onChange={(event) => setProduct({ ...product, vendor: event.value })}\n                                                />\n                                            </div>\n                                        </div>\n\n                                        {/* Brand */}\n                                        <div className=\"col-12\">\n                                            <div className=\"form-group mb-4\">\n                                                <p>Brand / Author</p>\n\n                                                <Select\n                                                    defaultValue={product.brand ? { value: product.brand._id, label: product.brand.name } : null}\n                                                    classNamePrefix=\"custom-select\"\n                                                    styles={customStyles}\n                                                    placeholder={'Select brand'}\n                                                    components={{ DropdownIndicator: () => null, IndicatorSeparator: () => null }}\n                                                    options={brands}\n                                                    onChange={(event) => setProduct({ ...product, brand: event.value })}\n                                                />\n                                            </div>\n                                        </div>\n\n                                        {/* Main Category */}\n                                        <div className=\"col-12 col-lg-4\">\n                                            <div className=\"form-group mb-4\">\n                                                {error.mainCategory ?\n                                                    <p className=\"text-danger\">{error.mainCategory}</p>\n                                                    : <p>Main category</p>}\n\n                                                <Select\n                                                    defaultValue={product.mainCategory ? { value: product.mainCategory._id, label: product.mainCategory.name } : null}\n                                                    classNamePrefix=\"custom-select\"\n                                                    styles={customStyles}\n                                                    placeholder={'Select main category'}\n                                                    components={{ DropdownIndicator: () => null, IndicatorSeparator: () => null }}\n                                                    options={categories.options}\n                                                    onChange={handleMainCategory}\n                                                />\n                                            </div>\n                                        </div>\n\n                                        {/* Sub Category */}\n                                        <div className=\"col-12 col-lg-4\">\n                                            <div className=\"form-group mb-4\">\n                                                <p>Sub category</p>\n\n                                                <Select\n                                                    ref={subCatRefs}\n                                                    defaultValue={product.subCategory ? { value: product.subCategory._id, label: product.subCategory.name } : null}\n                                                    classNamePrefix=\"custom-select\"\n                                                    styles={customStyles}\n                                                    placeholder={'Select sub category'}\n                                                    components={{ DropdownIndicator: () => null, IndicatorSeparator: () => null }}\n                                                    options={subCategories.options}\n                                                    onChange={handleSubCategory}\n                                                />\n                                            </div>\n                                        </div>\n\n                                        {/* Leaf Category */}\n                                        <div className=\"col-12 col-lg-4\">\n                                            <div className=\"form-group mb-4\">\n                                                <p>Leaf category</p>\n\n                                                <Select\n                                                    ref={leafCatRefs}\n                                                    defaultValue={product.leafCategory ? { value: product.leafCategory._id, label: product.leafCategory.name } : null}\n                                                    classNamePrefix=\"custom-select\"\n                                                    styles={customStyles}\n                                                    placeholder={'Select leaf category'}\n                                                    components={{ DropdownIndicator: () => null, IndicatorSeparator: () => null }}\n                                                    options={leafCategories.options}\n                                                    onChange={handleLeafCategory}\n                                                />\n                                            </div>\n                                        </div>\n\n                                        {/* Trending item */}\n                                        <div className=\"col-12 col-lg-4\">\n                                            <div className=\"input-group mb-3\">\n                                                <Form.Group controlId=\"trendingItem\">\n                                                    <Form.Check\n                                                        type=\"checkbox\"\n                                                        label=\"Tranding Item\"\n                                                        checked={product.isTrending}\n                                                        onChange={() => setProduct({ ...product, isTrending: !product.isTrending })}\n                                                    />\n                                                </Form.Group>\n                                            </div>\n                                        </div>\n\n                                        {/* New Arrivals */}\n                                        <div className=\"col-12 col-lg-4\">\n                                            <div className=\"input-group mb-3\">\n                                                <Form.Group controlId=\"newArrival\">\n                                                    <Form.Check\n                                                        type=\"checkbox\"\n                                                        label=\"New Arrivals\"\n                                                        checked={product.newArrivals}\n                                                        onChange={() => setProduct({ ...product, newArrivals: !product.newArrivals })}\n                                                    />\n                                                </Form.Group>\n                                            </div>\n                                        </div>\n\n                                        {/* Best Sale */}\n                                        <div className=\"col-12 col-lg-4\">\n                                            <div className=\"input-group mb-3\">\n                                                <Form.Group controlId=\"bestSale\">\n                                                    <Form.Check\n                                                        type=\"checkbox\"\n                                                        label=\"Best Sale\"\n                                                        checked={product.bestSale}\n                                                        onChange={() => setProduct({ ...product, bestSale: !product.bestSale })}\n                                                    />\n                                                </Form.Group>\n                                            </div>\n                                        </div>\n\n                                        {/* Tags */}\n                                        <div className=\"col-12 col-lg-4\">\n                                            <div className=\"form-group mb-4\">\n                                                {error.tags ?\n                                                    <p className=\"text-danger\">{error.tags}</p>\n                                                    : <p>Tags</p>}\n\n                                                <CreatableSelect\n                                                    defaultValue={product.tags ? product.tags.map(item => ({ value: item, label: item })) : null}\n                                                    classNamePrefix=\"custom-select\"\n                                                    isMulti\n                                                    styles={customStyles}\n                                                    placeholder={'Enter tags'}\n                                                    components={{ DropdownIndicator: () => null, IndicatorSeparator: () => null }}\n                                                    onChange={(event) => setProduct({ ...product, tags: event.map(item => item.value) })}\n                                                />\n                                            </div>\n                                        </div>\n\n                                        {/* SKU */}\n                                        <div className=\"col-12 col-lg-4\">\n                                            <div className=\"form-group mb-4\">\n                                                {errors.sku && errors.sku.message ? (\n                                                    <p className=\"text-danger\">{errors.sku && errors.sku.message}</p>\n                                                ) : <p>Product SKU</p>}\n\n                                                <input\n                                                    type=\"text\"\n                                                    name=\"sku\"\n                                                    defaultValue={product.sku}\n                                                    className=\"form-control shadow-none\"\n                                                    placeholder=\"Enter SKU\"\n                                                    ref={register({\n                                                        required: \"SKU is required\"\n                                                    })}\n                                                />\n                                            </div>\n                                        </div>\n\n                                        {/* Stock amount */}\n                                        <div className=\"col-12 col-lg-4\">\n                                            <div className=\"form-group mb-4\">\n                                                {errors.stockAmount && errors.stockAmount.message ? (\n                                                    <p className=\"text-danger\">{errors.stockAmount && errors.stockAmount.message}</p>\n                                                ) : <p>Stock amount</p>}\n\n                                                <input\n                                                    type=\"number\"\n                                                    name=\"stockAmount\"\n                                                    defaultValue={product.stockAmount}\n                                                    className=\"form-control shadow-none\"\n                                                    placeholder=\"Enter stock name\"\n                                                    ref={register({\n                                                        required: \"Stock amount is required\",\n                                                        pattern: {\n                                                            value: /^\\d+$/,\n                                                            message: \"The amount must be in number.\"\n                                                        }\n                                                    })}\n                                                />\n                                            </div>\n                                        </div>\n                                    </div>\n\n                                    {/* Pricing */}\n                                    <div className=\"container-fluid pricing-container mb-4\">\n                                        <div className=\"row\">\n                                            <div className=\"col-12 py-3 mb-3 border-bottom\">\n                                                <h6 className=\"mb-0\">Pricing</h6>\n                                            </div>\n\n                                            {/* Purchase price */}\n                                            <div className=\"col-12 col-lg-6\">\n                                                <div className=\"form-group mb-4\">\n                                                    {errors.purchasePrice && errors.purchasePrice.message ? (\n                                                        <p className=\"text-danger\">{errors.purchasePrice && errors.purchasePrice.message}</p>\n                                                    ) : <p>Purchase price</p>}\n\n                                                    <input\n                                                        type=\"number\"\n                                                        name=\"purchasePrice\"\n                                                        defaultValue={product.purchasePrice}\n                                                        className=\"form-control shadow-none\"\n                                                        placeholder=\"Enter purchase price\"\n                                                        ref={register({\n                                                            required: \"Purchase price is required\",\n                                                            pattern: {\n                                                                value: /^\\d+$/,\n                                                                message: \"Price must be in number.\"\n                                                            }\n                                                        })}\n                                                    />\n                                                </div>\n                                            </div>\n\n                                            {/* Sale Price */}\n                                            <div className=\"col-12 col-lg-6\">\n                                                <div className=\"form-group mb-4\">\n                                                    {errors.salePrice && errors.salePrice.message ? (\n                                                        <p className=\"text-danger\">{errors.salePrice && errors.salePrice.message}</p>\n                                                    ) : <p>Sale price</p>}\n\n                                                    <input\n                                                        type=\"number\"\n                                                        name=\"salePrice\"\n                                                        defaultValue={product.salePrice}\n                                                        className=\"form-control shadow-none\"\n                                                        placeholder=\"Enter sale price\"\n                                                        ref={register({\n                                                            required: \"Sale price is required\",\n                                                            pattern: {\n                                                                value: /^\\d+$/,\n                                                                message: \"Price must be in number.\"\n                                                            }\n                                                        })}\n                                                    />\n                                                </div>\n                                            </div>\n\n                                            {/* Discount type */}\n                                            <div className=\"col-12 col-lg-6\">\n                                                <div className=\"form-group mb-4\">\n                                                    <p>Discount Type</p>\n\n                                                    <select\n                                                        name=\"discountType\"\n                                                        className=\"form-control shadow-none\"\n                                                        ref={register()}\n                                                        defaultValue={product.discountType}\n                                                    >\n                                                        <option value=\"\">Select type</option>\n                                                        <option value=\"Flat\">Flat</option>\n                                                        <option value=\"Percentage\">Percentage</option>\n                                                    </select>\n                                                </div>\n                                            </div>\n\n                                            {/* Discount Amount */}\n                                            <div className=\"col-12 col-lg-6\">\n                                                <div className=\"form-group mb-4\">\n                                                    <p>Discount Amount</p>\n\n                                                    <input\n                                                        type=\"number\"\n                                                        name=\"discountAmount\"\n                                                        placeholder=\"Enter amount\"\n                                                        className=\"form-control shadow-none\"\n                                                        defaultValue={product.discountAmount}\n                                                        ref={register()}\n                                                    />\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n\n                                    {/* <ProductMaterialEditInput\n                                        value={product.materials}\n                                        update={getMaterial}\n                                    /> */}\n\n                                    <ProductAdditionalEditInput\n                                        value={product.additionalInfo}\n                                        update={getAdditional}\n                                    />\n\n                                    {/* <ReturnPolicy\n                                        data={handleReturnReplacement}\n                                        deafult={product.returnReplacement}\n                                        error={product.returnReplacement && product.returnReplacement.limitError ? product.returnReplacement.limitError : null}\n                                    /> */}\n\n                                    {/* <Warranty\n                                        data={handleWarranty}\n                                        deafult={product.warranty}\n                                        error={product.warranty && product.warranty.error ? product.warranty.error : null}\n                                    /> */}\n\n                                    {/* <Emi\n                                        deafult={product.emi}\n                                        data={handleEMI}\n                                    /> */}\n\n                                    <DescriptionEditInput\n                                        value={product.description}\n                                        update={getDescription}\n                                    />\n                                    {/* <div className=\"form-group\">\n                                        <label>Example textarea</label>\n                                        <textarea\n                                            name=\"description\"\n                                            className=\"form-control\"\n                                            // id=\"exampleFormControlTextarea1\"\n                                            defaultValue={product.description}\n                                            rows=\"3\"\n                                            ref={register()}\n                                        />\n                                    </div> */}\n\n                                    {/* Description file upload */}\n                                    {/* <div className=\"d-flex flex-wrap\">\n                                        {product.descriptionImages && product.descriptionImages.length ?\n                                            product.descriptionImages.map((item, i) =>\n                                                <div\n                                                    key={i}\n                                                    className=\"border mr-1 mb-1\"\n                                                    style={{ width: 150, height: 150 }}\n                                                >\n                                                    <img src={item} className=\"img-fluid\" alt=\"...\" />\n                                                </div>\n                                            ) : null\n                                        }\n\n                                        <div>\n                                            <SingleFileUploader\n                                                width={150}\n                                                height={150}\n                                                limit={8192}\n                                                error={descriptionImage.error}\n                                                loading={descriptionImage.loading}\n                                                dataHandeller={uploadDescriptionImages}\n                                            />\n                                        </div>\n                                    </div> */}\n\n                                    {/* Video */}\n                                    <div className=\"row mb-2 mb-lg-3\">\n                                        <div className=\"col-12\">\n                                            <div className=\"form-group mb-4\">\n                                                <p>Video Link</p>\n\n                                                <input\n                                                    type=\"text\"\n                                                    name=\"video\"\n                                                    className=\"form-control shadow-none\"\n                                                    defaultValue={product.video || null}\n                                                    placeholder=\"https://www.youtube.com/embed/Fm2TH7e93ug\"\n                                                    ref={register()}\n                                                />\n                                            </div>\n                                        </div>\n                                    </div>\n\n                                    {/* Thumbnail upload & preview Container */}\n                                    <div className=\"row mb-3 mb-lg-4\">\n                                        <div className=\"col-12\">\n                                            <div className=\"d-flex\">\n                                                {/* image preview */}\n                                                {product.thumbnail || thumbnail.preview ?\n                                                    <div className=\"thumbnail-container text-center\">\n                                                        <div className=\"image border\">\n                                                            <img src={thumbnail.preview || product.thumbnail.small} className=\"img-fluid\" alt=\"...\" />\n\n                                                            {/* Loading overlay */}\n                                                            {thumbnail.isUpload ?\n                                                                <div className=\"thumbnail-overlay flex-center flex-column\">\n                                                                    <div className=\"loader\"></div>\n                                                                </div>\n                                                                : null}\n                                                        </div>\n                                                    </div>\n                                                    : null}\n\n                                                {!thumbnail.isUpload ?\n                                                    <div className=\"thumbnail-container\">\n                                                        <div className=\"image border\">\n                                                            <input\n                                                                type=\"file\"\n                                                                accept=\".jpg, .png, .jpeg\"\n                                                                className=\"upload\"\n                                                                onChange={thumbnailHandeller}\n                                                            />\n                                                            <div className=\"flex-center flex-column\">\n                                                                <Icon icon={plus} size={22} />\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                    : null}\n                                            </div>\n                                        </div>\n                                    </div>\n\n                                    {/* Additional images upload & preview Container */}\n                                    <div className=\"row mb-3 mb-lg-4\">\n                                        <div className=\"col-12\">\n                                            <div className=\"d-flex flex-wrap\">\n\n                                                {/* image preview */}\n                                                {additinalImages && additinalImages.map((file, i) =>\n                                                    <div className=\"thumbnail-container text-center\" key={i}>\n                                                        <div className=\"image border\">\n                                                            <img src={file} className=\"img-fluid\" alt=\"...\" />\n                                                        </div>\n                                                        {additionalUpload ?\n                                                            <div className=\"thumbnail-overlay flex-center flex-column\">\n                                                                <div className=\"loader\"></div>\n                                                            </div>\n                                                            : null}\n\n                                                        {/* File delete button */}\n                                                        <button\n                                                            type=\"button\"\n                                                            className=\"btn shadow-sm rounded-circle\"\n                                                            onClick={() => setDelete({ file: file, show: true, loading: false })}\n                                                        >\n                                                            <Icon icon={trash2} size={23} />\n                                                        </button>\n                                                    </div>\n                                                )}\n\n                                                {!additionalUpload ?\n                                                    <div className=\"thumbnail-container\">\n                                                        <div className=\"image border\">\n                                                            <input\n                                                                type=\"file\"\n                                                                accept=\".jpg, .png, .jpeg\"\n                                                                className=\"upload\"\n                                                                onChange={additionalImageHandeller}\n                                                            />\n                                                            <div className=\"flex-center flex-column\">\n                                                                <Icon icon={plus} size={22} />\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                    : null}\n                                            </div>\n                                        </div>\n                                    </div>\n\n                                    {/* Submit button */}\n                                    <div className=\"row\">\n                                        <div className=\"col-12 text-right\">\n                                            <button type=\"submit\" className=\"btn shadow-none\" disabled={isUpdate}>\n                                                {isUpdate ? 'Updating...' : 'Update Product'}\n                                            </button>\n                                        </div>\n                                    </div>\n                                </form>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            {/* Delete confirmation */}\n            <DeleteModal\n                show={isDelete.show}\n                loading={isDelete.loading}\n                message={\n                    <div>\n                        <h6>Want to delete this image ?</h6>\n                        <img src={isDelete.file ? isDelete.file : null} className=\"img-fluid\" height={150} alt=\"product\" />\n                    </div>\n                }\n                onHide={() => setDelete({ file: null, show: false, loading: false })}\n                doDelete={deleteThumb}\n            />\n        </div>\n    );\n};\n\nexport default Edit;\n\nconst customStyles = {\n    control: (provided, state) => ({\n        ...provided,\n        minHeight: 42,\n        fontSize: 14,\n        color: '#000',\n        boxShadow: 'none', '&:hover': { borderColor: '1px solid #ced4da' },\n        border: state.isFocused ? '1px solid #dfdfdf' : '1px solid #ced4da',\n        borderRadius: 4\n    })\n}","D:\\previous\\src\\pages\\product\\EditSlug.js",[],"D:\\previous\\src\\pages\\product\\Show.js",[],"D:\\previous\\src\\pages\\deactivated\\Index.js",[],"D:\\previous\\src\\pages\\deactivated\\Create.js",[],"D:\\previous\\src\\pages\\campaign\\Index.js",["927","928"],"import React, { useCallback, useEffect, useState } from 'react'\nimport Icon from 'react-icons-kit'\nimport { Link, useHistory } from 'react-router-dom'\nimport { plus, eye, edit2, trash2, eyeOff, x } from 'react-icons-kit/feather'\nimport { CustomButton } from '../../components/button'\nimport { DataTable } from '../../components/table/Index'\nimport { dateFormate } from '../../utils/Helpers'\nimport { DeleteModal } from '../../components/modal/Delete'\nimport { Container } from '../../components/container'\nimport { Card } from '../../components/card/Index'\nimport { SingleSelect } from '../../components/select'\nimport { useQuery } from '../../components/query/Index'\n\nimport Requests from '../../utils/Requests/Index'\n\nconst Index = () => {\n    const history = useHistory()\n    const queryParams = useQuery()\n    const [isLoading, setLoading] = useState(true)\n    const [limit, setLimit] = useState(10)\n    const [totalItems, setTotalItems] = useState(0)\n\n    const [data, setData] = useState([])\n    const [searchLoading, setsearchLoading] = useState(false)\n    const [closeFilter, setCloseFilter] = useState(false)\n    const [isDelete, setDelete] = useState({ value: null, show: false, loading: false })\n\n    const BASE_URL = \"https://campaign.api.eazybest.com/uploads/campaign/sm/\"\n\n    /* fetch data */\n    const fetchData = useCallback(async (query) => {\n        setLoading(true)\n        const response = await Requests.Services.Campaign.Index(query)\n\n        if (response && response.status === 200) {\n            setData(response.data.data)\n            setTotalItems(response.data.pagination ? response.data.pagination.items : 0)\n        }\n        setLoading(false)\n    }, [limit])\n\n    /* handle page change */\n    const handlePageChange = page => fetchData({ page })\n\n    /* handle limit change */\n    const handleLimitChange = async (newLimit, page) => {\n        setLoading(true)\n        const response = await Requests.Services.Campaign.Index({ page: page, limit: newLimit })\n\n        setData(response.data.data)\n        setLimit(newLimit)\n        setLoading(false)\n    }\n\n    useEffect(() => {\n        if (queryParams) {\n            let params = { ...queryParams }\n            params.page = queryParams.page || 1\n            params.limit = queryParams.limit || 10\n\n            const queryString = Object.keys(params).map(key => `${key}=${params[key]}`).join('&')\n            fetchData(queryString)\n            setCloseFilter(true)\n        }\n    }, [\n        queryParams.limit,\n        queryParams.page,\n        queryParams.assign_to,\n        queryParams.start_from_date,\n        queryParams.end_to_date,\n        fetchData\n    ])\n\n    /* handle search */\n    const handleSearch = async data => {\n        setsearchLoading(true)\n        const response = await Requests.Services.Campaign.Search({ title: data })\n        if (response) setData(response.data.data)\n        setsearchLoading(false)\n    }\n\n    /* handle search suggestion */\n    const handleSuggestion = async (value) => {\n        let data = {\n            results: [],\n            message: null\n        }\n        const response = await Requests.Services.Campaign.Search({ title: value })\n\n        if (response && response.status === 200 && response.data.data && response.data.data.length) {\n            for (let i = 0; i < response.data.data.length; i++) {\n                const element = response.data.data[i]\n                data.results.push(element.title)\n            }\n        } else {\n            data.message = \"No results found\"\n        }\n\n        return data\n    }\n\n    /* handle filter by URL params */\n    const handleFilterByUrl = (field, value) => {\n        let item = { [field]: value }\n        let params = {\n            ...queryParams,\n            ...item,\n            page: queryParams.page || 1,\n            limit: queryParams.limit || 10\n        }\n\n        const queryString = Object.keys(params).map(key => `${key}=${params[key]}`).join('&')\n        history.replace(`/dashboard/campaign?${queryString}`)\n        setCloseFilter(true)\n    }\n\n    /* data column */\n    const columns = [\n        {\n            name: 'Image',\n            grow: 0,\n            cell: row => <img height={40} width={80} alt={\"Campaign\"} src={BASE_URL + row.banner_sm} />\n        },\n        {\n            name: 'Title',\n            selector: row => row.title,\n            sortable: true\n        },\n        {\n            name: 'Type',\n            grow: 0,\n            selector: row => row.discount_type,\n            sortable: true\n        },\n        {\n            name: 'Amount',\n            grow: 0,\n            selector: row => row.discount_amount,\n            sortable: true\n        },\n        {\n            name: 'Assign To',\n            grow: 0,\n            selector: row => row.assign_to,\n            sortable: true\n        },\n        {\n            name: 'Start Date',\n            grow: 1,\n            selector: row => dateFormate(row.start_from_date),\n            sortable: true\n        },\n        {\n            name: 'End Date',\n            grow: 1,\n            selector: row => dateFormate(row.end_to_date),\n            sortable: true\n        },\n        {\n            name: 'Published',\n            grow: 0,\n            selector: row => row.is_active,\n            sortable: true,\n            cell: row =>\n                <div>\n                    {row.is_active ?\n                        <Icon icon={eye} size={15} className=\"text-success\" /> :\n                        <Icon icon={eyeOff} size={15} className=\"text-muted\" />\n                    }\n                </div>\n        },\n        {\n            name: 'Action',\n            grow: 0,\n            minWidth: '150px',\n            cell: row =>\n                <div>\n                    <Link to={`/dashboard/campaign/${row._id}/show`}>\n                        <CustomButton\n                            style={{ padding: \"6px 10px\" }}\n                            className=\"btn-success rounded-circle border-0 mr-1\"\n                        ><Icon icon={eye} size={16} />\n                        </CustomButton>\n                    </Link>\n\n                    <Link to={`/dashboard/campaign/${row._id}/edit`}>\n                        <CustomButton\n                            style={{ padding: \"6px 10px\" }}\n                            className=\"btn-success rounded-circle border-0 mr-1\"\n                        ><Icon icon={edit2} size={16} />\n                        </CustomButton>\n                    </Link>\n\n                    <CustomButton\n                        style={{ padding: \"6px 10px\" }}\n                        className=\"btn-danger rounded-circle border-0\"\n                        onClick={() => setDelete({ value: row, show: true })}\n                    ><Icon icon={trash2} size={16} />\n                    </CustomButton>\n                </div>\n        }\n    ]\n\n    /* handle delete */\n    const handleDelete = async () => {\n        setDelete({ ...isDelete, loading: true })\n\n        await Requests.Services.Campaign.Delete(isDelete.value._id)\n        fetchData({ page: 1, limit: 10 })\n        setDelete({ ...isDelete, show: false, loading: false })\n    }\n\n    return (\n        <div className=\"pb-4\">\n            <Container.Fluid>\n                <Container.Row>\n                    <Container.Column className=\"col-padding\">\n                        <Card.Simple className=\"border-0\">\n                            <Card.Header className=\"bg-white border-0 px-3 px-lg-4\">\n\n                                {/* title container */}\n                                <div className=\"d-flex\">\n                                    <div><h6 className=\"mb-0\">Campaign List</h6></div>\n                                    <div className=\"ml-auto\">\n                                        <Link to=\"/dashboard/campaign/create\">\n                                            <CustomButton className=\"btn-primary border-0 rounded-circle circle__padding\">\n                                                <Icon icon={plus} size={22} />\n                                            </CustomButton>\n                                        </Link>\n\n                                        {closeFilter ?\n                                            <CustomButton\n                                                className=\"btn-danger border-0 rounded-circle circle__padding ml-1\"\n                                                onClick={() => {\n                                                    setCloseFilter(false)\n                                                    history.push(`/dashboard/campaign`)\n                                                }}\n                                            >\n                                                <Icon icon={x} size={22} />\n                                            </CustomButton>\n                                            : null\n                                        }\n                                    </div>\n                                </div>\n\n                                {/* Filter items */}\n                                <Container.Row className=\"pt-2 px-2\">\n\n                                    {/* Assign To */}\n                                    <Container.Column className=\"col-sm-4 px-1 mb-2\">\n                                        <SingleSelect\n                                            placeholder=\"Assign To\"\n                                            borderRadius={25}\n                                            defaultValue={{ label: null, value: null }}\n                                            options={[\n                                                { label: \"Brand\", value: \"Brand\" },\n                                                { label: \"Vendor\", value: \"Vendor\" },\n                                                { label: \"Category\", value: \"Category\" },\n                                                { label: \"Sub category\", value: \"Sub-category\" },\n                                                { label: \"Leaf category\", value: \"Leaf-category\" },\n                                                { label: \"Vendor\", value: \"Vendor\" },\n                                                { label: \"Product\", value: \"Product\" }\n                                            ]}\n                                            value={event => handleFilterByUrl(\"assign_to\", event.value)}\n                                        />\n                                    </Container.Column>\n\n                                    {/* Date range filter */}\n                                    <Container.Column className=\"col-sm-4 px-1 mb-2\">\n                                        <div className=\"form-group mb-0\">\n                                            <input\n                                                type=\"date\"\n                                                className=\"form-control shadow-none\"\n                                                style={{ borderRadius: 25, fontSize: 14, minHeight: 42 }}\n                                                onChange={event => handleFilterByUrl(\"start_from_date\", event.target.value)}\n                                            />\n                                        </div>\n                                    </Container.Column>\n\n                                    <Container.Column className=\"col-sm-4 px-1 mb-2\">\n                                        <div className=\"form-group mb-0\">\n                                            <input\n                                                type=\"date\"\n                                                className=\"form-control shadow-none\"\n                                                style={{ borderRadius: 25, fontSize: 14, minHeight: 42 }}\n                                                onChange={event => handleFilterByUrl(\"end_to_date\", event.target.value)}\n                                            />\n                                        </div>\n                                    </Container.Column>\n                                </Container.Row>\n                            </Card.Header>\n                            <Card.Body className=\"p-0\">\n                                <DataTable\n                                    fixedHeader\n                                    fixedHeaderScrollHeight=\"580px\"\n                                    columns={columns}\n                                    data={data}\n                                    loading={isLoading}\n                                    totalRows={totalItems}\n                                    pagination={true}\n                                    paginationServer={true}\n                                    handlePerRowsChange={handleLimitChange}\n                                    handlePageChange={handlePageChange}\n\n                                    searchable\n                                    placeholder={\"Search campaign\"}\n                                    search={handleSearch}\n                                    suggestion={handleSuggestion}\n                                    searchLoading={searchLoading}\n                                    clearSearch={() => fetchData({ page: 1, limit: 10 })}\n                                />\n                            </Card.Body>\n                        </Card.Simple>\n                    </Container.Column>\n                </Container.Row>\n            </Container.Fluid>\n\n            {/* Delete confirmation */}\n            <DeleteModal\n                show={isDelete.show}\n                loading={isDelete.loading}\n                message={\n                    <div>\n                        <h6>Want to delete this Campaign ?</h6>\n                        <img src={isDelete.value ? isDelete.value.image : null} className=\"img-fluid\" height={150} alt=\"Campaign\" />\n                    </div>\n                }\n                onHide={() => setDelete({ value: null, show: false, loading: false })}\n                doDelete={handleDelete}\n            />\n        </div>\n    );\n}\n\nexport default Index;","D:\\previous\\src\\pages\\campaign\\Create.js",[],"D:\\previous\\src\\pages\\campaign\\Show.js",["929","930","931","932"],"import React, { useState, useEffect, useCallback } from 'react'\nimport './style.scss'\nimport Icon from 'react-icons-kit'\nimport { Link, useParams } from 'react-router-dom'\nimport { chevronLeft } from 'react-icons-kit/feather'\nimport { dateFormate } from '../../utils/Helpers'\nimport { PreLoader } from '../../components/loading/Index'\n\nimport Requests from '../../utils/Requests/Index'\n\nconst BASE_URL_SM = \"https://campaign.api.eazybest.com/uploads/campaign/sm/\"\nconst BASE_URL_LG = \"https://campaign.api.eazybest.com/uploads/campaign/lg/\"\n\nconst Show = () => {\n    const { id } = useParams()\n    const [isLoading, setLoading] = useState(true)\n    const [campaign, setCampaign] = useState({})\n    const [items, setItems] = useState([])\n\n    // Fetch data\n    const fetchData = useCallback(async () => {\n        const response = await Requests.Services.Campaign.Show(id)\n        if (response && response.status === 200) {\n            setCampaign(response.data.data)\n            console.log(response.data)\n        }\n        setLoading(false)\n    }, [id])\n\n    useEffect(() => {\n        fetchData()\n    }, [id, fetchData])\n\n    if (isLoading) return <PreLoader />\n\n    return (\n        <div className=\"show-campaign\">\n            <div className=\"container-fluid\">\n                <div className=\"row\">\n                    <div className=\"col-12 col-padding\">\n\n                        {/* Campaign into card */}\n                        <div className=\"card border-0 shadow-sm intro-card mb-4\">\n                            <div className=\"card-header p-3 p-lg-4 bg-white\">\n                                <div className=\"d-flex\">\n                                    <div><h6 className=\"mb-0\">{campaign.title}</h6></div>\n                                    <div className=\"ml-auto\">\n                                        <Link\n                                            to=\"/dashboard/campaign\"\n                                            type=\"button\"\n                                            className=\"btn shadow-none rounded-circle\"\n                                        >\n                                            <Icon icon={chevronLeft} size={22} />\n                                        </Link>\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"card-body p-3 p-lg-4\">\n                                <img src={BASE_URL_LG + campaign.banner_lg} className=\"img-fluid mb-3\" alt=\"...\" />\n\n                                <div className='row'>\n                                    <div className='col-12 col-lg-6'>\n                                        <p className='mb-0'><b>Description</b></p>\n                                        <p>{campaign.description}</p>\n\n                                        <p className='mb-0'><b>Start from</b></p>\n                                        <p>{campaign.start_from_date}</p>\n\n                                        <p className='mb-0'><b>End to</b></p>\n                                        <p>{campaign.end_to_date}</p>\n\n                                        <p className='mb-0'><b>Start time</b></p>\n                                        <p>{campaign.start_time}</p>\n\n                                        <p className='mb-0'><b>End time</b></p>\n                                        <p>{campaign.end_time}</p>\n\n                                        <p className='mb-0'><b>Discount type</b></p>\n                                        <p>{campaign.discount_type}</p>\n                                    </div>\n                                    <div className='col-12 col-lg-6'>\n                                        <p className='mb-0'><b>Discount amount</b></p>\n                                        <p>{campaign.discount_amount}</p>\n\n                                        <p className='mb-0'><b>Min order amount</b></p>\n                                        <p>{campaign.min_order_amount}</p>\n\n                                        <p className='mb-0'><b>Max order amount</b></p>\n                                        <p>{campaign.max_order_amount}</p>\n\n                                        <p className='mb-0'><b>Min quantity</b></p>\n                                        <p>{campaign.min_quantity}</p>\n\n                                        <p className='mb-0'><b>Max quantity</b></p>\n                                        <p>{campaign.max_quantity}</p>\n\n                                        <p className='mb-0'><b>Status</b></p>\n                                        <p>{campaign.is_active ? \"Published\" : \"Unpublished\"}</p>\n                                    </div>\n\n\n                                    <div className='col-12 my-4'>\n                                        <p>{campaign.assign_to}</p>\n\n                                        <table>\n                                            <tbody>\n                                                {campaign.assign_items && campaign.assign_items.map((item, i) =>\n                                                    <tr key={i}><td>\n                                                        <p className='mb-1'>{item.name}</p>\n                                                    </td></tr>\n                                                )}\n                                            </tbody>\n                                        </table>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n\n\n\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default Show;","D:\\previous\\src\\pages\\campaign\\Edit.js",["933"],"import React, { useState, useEffect, useCallback, useRef } from 'react'\nimport './style.scss'\nimport Icon from 'react-icons-kit'\nimport { Link, useParams } from 'react-router-dom'\nimport { chevronLeft } from 'react-icons-kit/feather'\n\nimport { Toastify } from '../../components/toastify'\nimport { PreLoader } from '../../components/loading/Index'\nimport { CampaignForm } from '../../components/form/campaign'\nimport Requests from '../../utils/Requests/Index'\n\n\n\nconst Edit = () => {\n    const { id } = useParams()\n    const [data, setData] = useState({})\n    const [isLoading, setLoading] = useState(true)\n    const [isUpdate, setUpdate] = useState(false)\n    const [isImgLoading, setImgLoading] = useState(false)\n\n    // Fetch data\n    const fetchData = useCallback(async () => {\n        try {\n            const response = await Requests.Services.Campaign.Show(id)\n            if (response && response.status === 200) {\n                setData(response.data.data)\n\n                console.log(response.data.data);\n            }\n            setLoading(false)\n        } catch (error) {\n            if (error) {\n                setLoading(false)\n                console.log(error.response);\n            }\n        }\n    }, [id])\n\n    useEffect(() => {\n        fetchData()\n    }, [id, fetchData])\n\n\n    /* handle data form */\n    const handleSubmit = async (data) => {\n        try {\n            setUpdate(true)\n            const response = await Requests.Services.Campaign.Update(id, data)\n            if (response && response.status === 201) {\n                Toastify.Success(response.data.message)\n            }\n\n            setUpdate(false)\n        } catch (error) {\n            if (error) {\n                setUpdate(false)\n                console.log(error.response)\n                if (error.response && error.response.data && error.response.data.message) {\n                    Toastify.Error(error.response.data.message)\n                }\n            }\n        }\n    }\n\n    /* handle image update */\n    const handleImgSubmit = async (data) => {\n        try {\n            setImgLoading(true)\n            const response = await Requests.Services.Campaign.EditBanner(id, data)\n            if (response && response.status === 201) {\n                Toastify.Success(response.data.message)\n            }\n\n            setImgLoading(false)\n        } catch (error) {\n            if (error) {\n                setImgLoading(false)\n                console.log(error.response)\n                if (error.response && error.response.data && error.response.data.message) {\n                    Toastify.Error(error.response.data.message)\n                }\n            }\n        }\n    }\n\n    if (isLoading) return <PreLoader />\n\n    return (\n        <div className=\"edit-campaign pb-4\">\n            <div className=\"container-fluid\">\n                <div className=\"row\">\n                    <div className=\"col-12 col-padding\">\n                        <div className=\"card border-0 shadow-sm\">\n                            <div className=\"card-header p-3 p-lg-4 bg-white\">\n                                <div className=\"d-flex\">\n                                    <div>\n                                        <h6 className=\"mb-0\">Edit campaign</h6>\n                                        <small className=\"text-muted\">\n                                            <i>Select item/options if you want to apply unless no need to select.</i>\n                                        </small>\n                                    </div>\n                                    <div className=\"ml-auto pt-2\">\n                                        <Link\n                                            to=\"/dashboard/campaign\"\n                                            type=\"button\"\n                                            className=\"btn shadow-none rounded-circle\"\n                                        >\n                                            <Icon icon={chevronLeft} size={22} />\n                                        </Link>\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"card-body p-4\">\n                                <CampaignForm\n                                    formType=\"edit\"\n                                    data={data}\n                                    loading={isUpdate}\n                                    imgLoading={isImgLoading}\n                                    onSubmit={data => handleSubmit(data)}\n                                    onImgSubmit={data => handleImgSubmit(data)}\n                                />\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Edit;\n","D:\\previous\\src\\pages\\coupon\\Index.js",[],"D:\\previous\\src\\pages\\coupon\\Create.js",[],"D:\\previous\\src\\pages\\coupon\\Show.js",[],"D:\\previous\\src\\pages\\coupon\\Edit.js",[],"D:\\previous\\src\\pages\\orders\\Index.js",["934"],"import React, { useCallback, useEffect, useState } from 'react'\nimport Icon from 'react-icons-kit'\nimport { Link, useHistory } from 'react-router-dom'\nimport { androidNotifications, androidNotificationsOff } from 'react-icons-kit/ionicons'\nimport { plus, eye, printer, info, x, edit2 } from 'react-icons-kit/feather'\nimport { DataTable } from '../../components/table/Index'\nimport { formatDateWithAMPM } from '../../utils/Helpers'\nimport { CustomButton } from '../../components/button'\nimport { ProductModal } from '../../components/modal/product/Index'\nimport { SearchableSelect, SingleSelect } from '../../components/select'\nimport { Container } from '../../components/container'\nimport { Card } from '../../components/card/Index'\nimport { useQuery } from '../../components/query/Index'\nimport { districts } from '../../utils/districts'\n\nimport Requests from '../../utils/Requests/Index'\nimport ExportCSV from '../../components/exportCSV/Index'\nconst Index = () => {\n    const history = useHistory()\n    const queryParams = useQuery()\n    const [totalItems, setTotalItems] = useState(0)\n\n    const [data, setData] = useState([])\n    const [loading, setLoading] = useState(false)\n    const [closeFilter, setCloseFilter] = useState(false)\n    const [searchLoading, setsearchLoading] = useState(false)\n    const [product, setProduct] = useState({ values: [], show: false })\n    const [header] = useState({\n        headers: { Authorization: \"Bearer \" + localStorage.getItem('token') }\n    })\n\n    // Fetch data\n    const fetchData = useCallback(async (query) => {\n        setLoading(true)\n        const response = await Requests.Order.Index(query, header)\n\n        if (response) {\n            setData(response.data)\n            setTotalItems(response.pagination ? response.pagination.items : 0)\n        }\n        setLoading(false)\n    }, [header])\n\n\n\n    useEffect(() => {\n        // fetchData(1)\n        if (queryParams) {\n            let params = { ...queryParams }\n            params.page = queryParams.page || 1\n            params.limit = queryParams.limit || 10\n\n            const queryString = Object.keys(params).map(key => `${key}=${params[key]}`).join('&')\n            fetchData(queryString)\n            setCloseFilter(true)\n        }\n    }, [\n        header,\n        queryParams.limit,\n        queryParams.page,\n        queryParams.user,\n        queryParams.deliveryAddress,\n        queryParams.shippingArea,\n        queryParams.paymentMethod,\n        queryParams.paymentStatus,\n        queryParams.status,\n        queryParams.followUp,\n        queryParams.from,\n        queryParams.to,\n        fetchData\n    ])\n\n    // handle page change\n    const handlePageChange = page => {\n        let params = { ...queryParams }\n        params.page = page\n\n        const queryString = Object.keys(params).map(key => `${key}=${params[key]}`).join('&')\n        history.push(`/dashboard/order?${queryString}`)\n    }\n\n    // handle limit change\n    const handleLimitChange = async (newLimit, page) => {\n        setLoading(true)\n        let params = { ...queryParams }\n        params.page = page\n        params.limit = newLimit\n\n        const queryString = Object.keys(params).map(key => `${key}=${params[key]}`).join('&')\n        history.push(`/dashboard/order?${queryString}`)\n        setLoading(false)\n    }\n\n    // Handle search\n    const handleSearch = async data => {\n        setsearchLoading(true)\n        const response = await Requests.Order.Search(data, header)\n        if (response) setData(response.data)\n        setsearchLoading(false)\n    }\n\n    // Handle search suggestion\n    const handleWithSuggestion = async (value) => {\n        let data = {\n            results: [],\n            message: null\n        }\n        const response = await Requests.Order.Search(value, header)\n\n        if (response && response.data && response.data.length) {\n            for (let i = 0; i < response.data.length; i++) {\n                const element = response.data[i]\n                // data.results.push(element.name + \"-\" + element.orderCode)\n                data.results.push(element.orderCode)\n            }\n        } else {\n            data.message = \"No results found\"\n        }\n\n        return data\n    }\n\n    // ------------------------ Filter item ---------------\n    const handleFilter = async ({ query, field }) => {\n        let results = []\n\n        // Customer \n        if (field === \"user\") {\n            const response = await Requests.Order.SearchCustomer(query, header)\n\n            if (response.data && response.data.length) {\n                for (let i = 0; i < response.data.length; i++) {\n                    const element = response.data[i]\n                    results.push({\n                        value: element._id,\n                        label: element.name + \" - \" + element.phone\n                    })\n                }\n            }\n        }\n\n        if (field === \"delivery-address\") {\n            const response = await Requests.Order.FilterItem(query, header)\n            results = [...response.data]\n        }\n\n        return results\n    }\n\n    // ------------------------ Filter by URL ---------------\n    const handleFilterByUrl = (field, value) => {\n        let item = { [field]: value }\n        let params = {\n            ...queryParams,\n            ...item,\n            page: queryParams.page || 1,\n            limit: queryParams.limit || 10\n        }\n\n        const queryString = Object.keys(params).map(key => `${key}=${params[key]}`).join('&')\n        history.replace(`/dashboard/order?${queryString}`)\n        setCloseFilter(true)\n    }\n\n    // handle filter clear\n    const onClear = async () => {\n        setCloseFilter(false)\n        history.push(`/dashboard/order`)\n    }\n\n    const customStyles = {\n        rows: {\n            style: {\n                minHeight: '60px',\n            }\n        }\n    }\n\n    const columns = [\n        {\n            name: 'Created At',\n            selector: row => formatDateWithAMPM(row.createdAt),\n            sortable: true,\n            minWidth: \"200px\"\n        },\n        {\n            name: 'Customer',\n            selector: row => row.name,\n            sortable: true\n        },\n        {\n            name: 'Order Code',\n            selector: row => <Link to={`/dashboard/order/${row._id}/show`}>{row.orderCode}</Link>,\n            sortable: true,\n            minWidth: \"120px\"\n        },\n        {\n            name: 'Phone',\n            selector: row => row.phone,\n            sortable: true,\n            minWidth: \"130px\"\n        },\n        {\n            name: 'Delivery Address',\n            selector: row => row.deliveryAddress,\n            sortable: true,\n            grow: 2\n        },\n        {\n            name: 'Products',\n            cell: row =>\n                <CustomButton\n                    style={{ padding: \"6px 10px\" }}\n                    className=\"btn-info rounded-circle border-0 mr-1\"\n                    onClick={() => setProduct({ values: row.products, show: true })}\n                ><Icon icon={info} size={16} />\n                </CustomButton>\n        },\n        {\n            name: <span>Order Value <br /> (Without D.Charge)</span>,\n            selector: row => row.subTotalPrice,\n            sortable: true,\n            minWidth: \"180px\"\n        },\n        {\n            name: 'Delivery Charge',\n            selector: row => row.deliveryCharge,\n            sortable: true,\n            minWidth: \"180px\"\n        },\n        {\n            name: 'Coupon Code',\n            cell: row => row.coupon ? row.coupon.code : \"N/A\",\n            minWidth: \"180px\"\n        },\n        {\n            name: <p>Discount <br /> on Price</p>,\n            minWidth: \"100px\",\n            cell: row => row.coupon ? row.coupon.priceDiscount : \"N/A\"\n        },\n        {\n            name: <p>Discount on Shipping <br /> Charge (Inside-Dhaka)</p>,\n            minWidth: \"150px\",\n            cell: row => row.coupon ? row.coupon.insideDhaka : \"N/A\"\n        },\n        {\n            name: <p>Discount on Shipping <br /> Charge (Outside-Dhaka)</p>,\n            minWidth: \"150px\",\n            cell: row => row.coupon ? row.coupon.outsideDhaka : \"N/A\"\n        },\n        {\n            name: 'Payment Status',\n            selector: row => row.paymentStatus,\n            sortable: true,\n            minWidth: \"150px\"\n        },\n        {\n            name: 'Paid (Amount)',\n            selector: row => row.amountPaid,\n            sortable: true,\n            minWidth: \"150px\"\n        },\n        {\n            name: 'Due (Amount)',\n            selector: row => row.amountDue,\n            sortable: true,\n            minWidth: \"150px\"\n        },\n        {\n            name: 'Payment Method',\n            selector: row => row.paymentMethod,\n            sortable: true,\n            minWidth: \"150px\"\n        },\n        {\n            name: 'Delivered (Date)',\n            selector: row => row.deliveredDate ? row.deliveredDate : \"N/A\",\n            sortable: true,\n            minWidth: \"170px\"\n        },\n        {\n            name: 'Status',\n            selector: row => row.status,\n            sortable: true\n        },\n        {\n            name: 'Follow Up',\n            sortable: true,\n            cell: row =>\n                <div>\n                    {row.followUp ?\n                        <Icon icon={androidNotifications} size={20} />\n                        :\n                        <Icon icon={androidNotificationsOff} style={{ color: \"rgba(85, 85, 85, 0.541)\" }} size={20} />\n                    }\n                </div>\n        },\n        {\n            name: 'Action',\n            grow: 0,\n            minWidth: '150px',\n            cell: row =>\n                <div>\n                    <Link to={`/dashboard/order/${row._id}/show`}>\n                        <CustomButton\n                            style={{ padding: \"6px 10px\" }}\n                            className=\"btn-success rounded-circle border-0\"\n                        ><Icon icon={eye} size={16} />\n                        </CustomButton>\n                    </Link>\n\n                    <Link to={`/dashboard/order/${row._id}/edit`}>\n                        <CustomButton\n                            style={{ padding: \"6px 10px\" }}\n                            className=\"btn-primary rounded-circle border-0 mx-1\"\n                        ><Icon icon={edit2} size={16} />\n                        </CustomButton>\n                    </Link>\n\n                    <Link to={`/dashboard/order/${row._id}/invoice`}>\n                        <CustomButton\n                            style={{ padding: \"6px 10px\" }}\n                            className=\"btn-success rounded-circle border-0\"\n                        ><Icon icon={printer} size={16} />\n                        </CustomButton>\n                    </Link>\n                </div>\n        }\n    ]\n\n    return (\n        <div className=\"pb-4\">\n            <Container.Fluid>\n                <Container.Row>\n                    <Container.Column className=\"col-padding\">\n                        <Card.Simple className=\"border-0\">\n                            <Card.Header className=\"border-0 bg-white px-4 pt-4 pb-0\">\n\n                                {/* page header */}\n                                <div className=\"d-flex\">\n                                    <div><h6 className=\"mb-0 d-inline\">List of Orders - {data.length ? data.length : 0}</h6></div>\n                                    <div className=\"ml-auto\"><ExportCSV csvData={data} fileName={'Orders'} /></div>\n                                    <div className=\"pl-2\">\n                                        <Link to=\"/dashboard/order/create\">\n                                            <CustomButton className=\"btn-primary border-0 rounded-circle circle__padding\">\n                                                <Icon icon={plus} size={22} />\n                                            </CustomButton>\n                                        </Link>\n                                    </div>\n\n                                    {closeFilter ?\n                                        <CustomButton\n                                            className=\"btn-danger border-0 rounded-circle circle__padding ml-2\"\n                                            onClick={onClear}\n                                        ><Icon icon={x} size={22} />\n                                        </CustomButton>\n                                        : null\n                                    }\n                                </div>\n\n                                {/* Filter container */}\n                                <Container.Row className=\"pt-2 px-2\">\n\n                                    {/* Customer */}\n                                    <Container.Column className=\"col-md-6 col-xl-3 px-1 mb-2\">\n                                        <SearchableSelect\n                                            isMulti={false}\n                                            placeholder=\"Customer\"\n                                            search={query => handleFilter({ query, field: \"user\" })}\n                                            values={event => handleFilterByUrl(\"user\", event.value)}\n                                        />\n                                    </Container.Column>\n\n                                    {/* Delivery address */}\n                                    <Container.Column className=\"col-md-6 col-xl-3 px-1 mb-2\">\n                                        <SearchableSelect\n                                            isMulti={false}\n                                            placeholder=\"Delivery address\"\n                                            search={query => handleFilter({ query, field: \"delivery-address\" })}\n                                            values={event => handleFilterByUrl(\"deliveryAddress\", event.value)}\n                                        />\n                                    </Container.Column>\n\n                                    {/* Shipping Area */}\n                                    <Container.Column className=\"col-md-6 col-xl-3 px-1 mb-2\">\n                                        <SingleSelect\n                                            placeholder=\"Shipping area\"\n                                            options={districts}\n                                            borderRadius={25}\n                                            value={event => handleFilterByUrl(\"shippingArea\", event.value)}\n                                        />\n                                    </Container.Column>\n\n                                    {/* Payment Method */}\n                                    <Container.Column className=\"col-md-6 col-xl-3 px-1 mb-2\">\n                                        <SingleSelect\n                                            placeholder=\"Payment Method\"\n                                            borderRadius={25}\n                                            options={[\n                                                { label: \"COD\", value: \"COD\" },\n                                                { label: \"SSLCOMMERZ\", value: \"SSLCOMMERZ\" }\n                                            ]}\n                                            value={event => handleFilterByUrl(\"paymentMethod\", event.value)}\n                                        />\n                                    </Container.Column>\n\n                                    {/* Payment Status */}\n                                    <Container.Column className=\"col-md-6 col-xl-3 px-1 mb-2\">\n                                        <SingleSelect\n                                            placeholder=\"Payment Status\"\n                                            borderRadius={25}\n                                            options={[\n                                                { label: \"Paid\", value: \"Paid\" },\n                                                { label: \"Pending\", value: \"Pending\" },\n                                                { label: \"Partially Paid\", value: \"Partially Paid\" }\n                                            ]}\n                                            value={event => handleFilterByUrl(\"paymentStatus\", event.value)}\n                                        />\n                                    </Container.Column>\n\n                                    {/* Order Status */}\n                                    <Container.Column className=\"col-md-6 col-xl-3 px-1 mb-2\">\n                                        <SingleSelect\n                                            placeholder=\"Order Status\"\n                                            options={[\n                                                { label: \"Created\", value: \"Created\" },\n                                                { label: \"Pending\", value: \"Pending\" },\n                                                { label: \"Confirmed\", value: \"Confirmed\" },\n                                                { label: \"Picked\", value: \"Picked\" },\n                                                { label: \"Received in Warehouse\", value: \"Received in Warehouse\" },\n                                                { label: \"Packed\", value: \"Packed\" },\n                                                { label: \"Handed Over to Courier\", value: \"Handed Over to Courier\" },\n                                                { label: \"Delivered\", value: \"Delivered\" },\n                                                { label: \"Cancelled\", value: \"Cancelled\" },\n                                                { label: \"Ready to Refund\", value: \"Ready to Refund\" },\n                                                { label: \"Refunded\", value: \"Refunded\" }\n                                            ]}\n                                            borderRadius={25}\n                                            value={event => handleFilterByUrl(\"status\", event.value)}\n                                        />\n                                    </Container.Column>\n\n                                    {/* Follow Up */}\n                                    <Container.Column className=\"col-md-6 col-lg-12 col-xl-3 px-1 mb-2\">\n                                        <SingleSelect\n                                            placeholder=\"Follow-Up status\"\n                                            borderRadius={25}\n                                            options={[\n                                                { label: \"In follow-up\", value: true },\n                                                { label: \"Not in follow-up\", value: false }\n                                            ]}\n                                            value={event => handleFilterByUrl(\"followUp\", event.value)}\n                                        />\n                                    </Container.Column>\n\n                                    {/* Date range filter */}\n                                    <Container.Column className=\"col-sm-6 col-md-3 mb-2 px-1\">\n                                        <div className=\"form-group mb-0\">\n                                            <input\n                                                type=\"date\"\n                                                className=\"form-control shadow-none\"\n                                                style={{ borderRadius: 25, fontSize: 14, minHeight: 42 }}\n                                                onChange={event => handleFilterByUrl(\"from\", event.target.value)}\n                                            />\n                                        </div>\n                                    </Container.Column>\n                                    <Container.Column className=\"col-sm-6 col-md-3 mb-2 px-1\">\n                                        <div className=\"form-group mb-0\">\n                                            <input\n                                                type=\"date\"\n                                                className=\"form-control shadow-none\"\n                                                style={{ borderRadius: 25, fontSize: 14, minHeight: 42 }}\n                                                onChange={event => handleFilterByUrl(\"to\", event.target.value)}\n                                            />\n                                        </div>\n                                    </Container.Column>\n\n                                </Container.Row>\n                            </Card.Header>\n\n                            <Card.Body className=\"p-0\">\n                                <DataTable\n                                    fixedHeader\n                                    fixedHeaderScrollHeight=\"580px\"\n                                    customStyles={customStyles}\n                                    columns={columns}\n                                    data={data}\n                                    loading={loading}\n                                    totalRows={totalItems}\n                                    pagination={true}\n                                    paginationServer={true}\n                                    handlePerRowsChange={handleLimitChange}\n                                    handlePageChange={handlePageChange}\n\n                                    searchable\n                                    placeholder={\"Search order\"}\n                                    search={handleSearch}\n                                    suggestion={handleWithSuggestion}\n                                    searchLoading={searchLoading}\n                                    clearSearch={() => fetchData(1)}\n                                />\n                            </Card.Body>\n                        </Card.Simple>\n                    </Container.Column>\n                </Container.Row>\n            </Container.Fluid>\n\n            {/* Product list modal */}\n            <ProductModal\n                show={product.show}\n                data={product.values}\n                onHide={() => setProduct({ values: [], show: false })}\n            />\n        </div>\n    );\n}\n\nexport default Index;\n\n\n// http://localhost:3000/product/dell-latitude-5410-10th-gen-intel-core-i5-10210u-laptop-with-512-ssd-1624439546497\n// https://www.daraz.com.bd/products/1-pair-2-piece-wasp-pubg-finger-sleeves-thumb-finger-gloves-for-mobile-gaming-controller-i182258190-s1138990385.html?spm=a2a0e.home.flashSale.2.735212f7ucHdfp&search=1&mp=1&c=fs\n// https://www.rokomari.com/book/213376/message","D:\\previous\\src\\pages\\orders\\Show.js",["935","936","937"],"import React, { useEffect, useState, useCallback } from 'react'\nimport Icon from 'react-icons-kit'\nimport { Link } from 'react-router-dom'\nimport { useParams } from 'react-router'\nimport { messageCircle, info } from 'react-icons-kit/feather'\nimport { androidNotifications, androidNotificationsOff } from 'react-icons-kit/ionicons'\nimport { Images } from '../../utils/Images'\nimport { dateFormate } from '../../utils/Helpers'\nimport { PreLoader } from '../../components/loading/Index'\nimport { ConfirmationModal } from '../../components/modal/Confirmation'\nimport { OrderStatusModal } from '../../components/modal/OrderStatus'\nimport { CommentsModal } from '../../components/modal/Comments'\nimport { CustomButton } from '../../components/button'\nimport { Container } from '../../components/container'\nimport { Card } from '../../components/card/Index'\nimport { DataTable } from '../../components/table/Index'\nimport { DeleteModal } from '../../components/modal/Delete'\n\nimport Requests from '../../utils/Requests/Index'\nimport DeliveryInfoModal from '../../components/modal/deliveryInfo/Index'\n\n\nconst Show = () => {\n    const { id } = useParams()\n    const [show, setShow] = useState(false)\n    const [showComment, setShowComment] = useState(false)\n    const [isLoading, setLoading] = useState(true)\n    const [item, setItem] = useState({})\n    const [orderStatus, setOrderStatus] = useState({ show: false, value: null, loading: false })\n    const [paymentStatus, setPaymentStatus] = useState({ show: false, value: null, loading: false })\n    const [isCancelation, setCancelation] = useState({ value: null, show: false, loading: false })\n    const [isFollowUp, setFollowUp] = useState(false)\n\n    const [header] = useState({\n        headers: { Authorization: \"Bearer \" + localStorage.getItem('token') }\n    })\n\n    // Fetch data\n    const fetchData = useCallback(async () => {\n        const response = await Requests.Order.Show(id, header)\n        if (response && response.data){\n            // console.log(\"error\",response.data);\n            setItem(response.data)\n        } \n        setLoading(false)\n    }, [id, header])\n\n    useEffect(() => {\n        fetchData()\n    }, [id, header, fetchData])\n\n    // Handle status action\n    const handleStatusAction = async (data) => {\n        const formData = {\n            ...data,\n            order: id,\n            status: orderStatus.value\n        }\n\n        setOrderStatus({ ...orderStatus, loading: true })\n        await Requests.Order.StoreComment(formData, header)\n        await Requests.Order.Update(id, orderStatus.value, header)\n\n        fetchData()\n        setOrderStatus({ loading: false, value: null, show: false })\n    }\n\n    // Handle payment status action\n    const handlePaymentAction = async () => {\n        setPaymentStatus({ ...paymentStatus, loading: true })\n        await Requests.Order.UpdatePaymentStatus(id, paymentStatus.value, header)\n        fetchData()\n        setPaymentStatus({ loading: false, value: null, show: false })\n    }\n\n    // Handle follow up\n    const handleFollowUp = async () => {\n        setFollowUp(true)\n        await Requests.Order.UpdateFollowUp(id, header)\n        fetchData()\n        setFollowUp(false)\n    }\n\n    // cancel specific item from order \n    const onCancelItem = async () => {\n        setCancelation({ ...isCancelation, loading: true })\n\n        const formData = {\n            orderId: id,\n            productId: isCancelation.value.product\n        }\n\n        await Requests.Order.ItemCancelation(formData, header)\n        fetchData()\n        setCancelation({ value: null, show: false, loading: false })\n    }\n\n    // Styles for data column\n    const customStyles = {\n        rows: {\n            style: {\n                minHeight: '70px auto',\n            }\n        }\n    }\n\n    // Data columns for ordered products \n    const columns = [\n        {\n            name: \"Image\",\n            width: \"70px\",\n            cell: row => <img height={40} alt={\"Product\"} src={row.thumbnail} />,\n        },\n        {\n            name: \"Name\",\n            sortable: true,\n            minWidth: \"250px\",\n            selector: row =>\n                <div className=\"py-2\">\n                    <p className=\"font-13 mb-2\">{row.name || \"N/A\"}</p>\n                    <p className=\"font-13 mb-1\"><strong>SKU: </strong>{row.sku || \"N/A\"}</p>\n                    <p className=\"font-13 mb-2\"><strong>Brand: </strong>{row.brand || \"N/A\"}</p>\n\n                    {item.status !== \"Delivered\" ?\n                        <CustomButton\n                            style={{ padding: \"5px 10px\", fontSize: 13 }}\n                            className=\"btn-danger border-0\"\n                            onClick={() => setCancelation({ ...isCancelation, value: row, show: true })}\n                        ><b>Cancel Item</b></CustomButton>\n                        : null}\n                </div>\n        },\n        // {\n        //     name: \"Campaign\",\n        //     // selector: row => row.phone,\n        //     sortable: true,\n        //     minWidth: \"130px\"\n        // },\n        {\n            name: \"Variants\",\n            grow: 2,\n            cell: row => row.variants && row.variants.length ?\n                <div>\n                    {row.variants.map((item, i) =>\n                        <div className=\"mb-2\">\n                            <p className=\"font-13 mb-0\"><strong>{item.title}: </strong>{item.value}</p>\n                            <p className=\"font-13 mb-0\"><strong>SKU: </strong>{item.sku}</p>\n                        </div>\n                    )}\n\n                </div>\n                : \"N/A\"\n        },\n        {\n            name: <span>Purchase <br /> Price</span>,\n            sortable: true,\n            minWidth: \"100px\",\n            cell: row => <p className=\"font-13 mb-0\">{row.purchasePrice} tk.</p>\n        },\n        {\n            name: \"Sale Price\",\n            sortable: true,\n            minWidth: \"100px\",\n            cell: row => <p className=\"font-13 mb-0\">{row.salePrice} tk.</p>\n        },\n        {\n            name: \"Quantity\",\n            sortable: true,\n            cell: row => <p className=\"font-13 mb-0\">{row.quantity}</p>\n        },\n        // {\n        //     name: \"Discount\",\n        //     cell: row => row.discountAmount && row.discountType ?\n        //         <div>\n        //             <p className=\"font-13 mb-0\">{row.discountAmount}{row.discountType === 'Flat' ? \"tk.\" : \"%\"}</p>\n        //         </div>\n        //         : \"N/A\"\n        // },\n        // {\n        //     name: \"Sub-Total\",\n        //     cell: row => <p className=\"font-13 mb-0\">{row.subTotal} tk.</p>\n        // },\n        // {\n        //     name: \"PO\",\n        //     cell: row =>\n        //         item.status === 'Confirmed' ?\n        //             <Link to={`/dashboard/order/${item._id}/purchase/${row.product}`}>\n        //                 <CustomButton\n        //                     style={{ padding: \"5px 10px\" }}\n        //                     className=\"btn-primary border-0\"\n        //                 >\n        //                     <Icon icon={info} size={18} />\n        //                 </CustomButton>\n        //             </Link>\n        //             : null\n        // }\n    ]\n\n    // Data columns for canceled products\n    const canceledProductsColumns = [\n        {\n            name: \"Image\",\n            width: \"70px\",\n            cell: row => <img height={40} alt={\"Product\"} src={row.thumbnail} />,\n        },\n        {\n            name: \"Name\",\n            sortable: true,\n            minWidth: \"250px\",\n            selector: row =>\n                <div className=\"py-2\">\n                    <p className=\"font-13 mb-2\">{row.name || \"N/A\"}</p>\n                    <p className=\"font-13 mb-1\"><strong>SKU: </strong>{row.sku || \"N/A\"}</p>\n                    <p className=\"font-13 mb-2\"><strong>Brand: </strong>{row.brand || \"N/A\"}</p>\n                </div>\n        },\n        // {\n        //     name: \"Campaign\",\n        //     // selector: row => row.phone,\n        //     sortable: true,\n        //     minWidth: \"130px\"\n        // },\n        {\n            name: \"Variants\",\n            grow: 2,\n            cell: row => row.variants && row.variants.length ?\n                <div>\n                    {row.variants.map((item, i) =>\n                        <div className=\"mb-2\">\n                            <p className=\"font-13 mb-0\"><strong>{item.title}: </strong>{item.value}</p>\n                            <p className=\"font-13 mb-0\"><strong>SKU: </strong>{item.sku}</p>\n                        </div>\n                    )}\n\n                </div>\n                : \"N/A\"\n        },\n        {\n            name: <span>Purchase <br /> Price</span>,\n            sortable: true,\n            minWidth: \"100px\",\n            cell: row => <p className=\"font-13 mb-0\">{row.purchasePrice} tk.</p>\n        },\n        {\n            name: \"Sale Price\",\n            sortable: true,\n            minWidth: \"100px\",\n            cell: row => <p className=\"font-13 mb-0\">{row.salePrice} tk.</p>\n        },\n        {\n            name: \"Quantity\",\n            sortable: true,\n            cell: row => <p className=\"font-13 mb-0\">{row.quantity}</p>\n        },\n        {\n            name: \"Discount\",\n            cell: row => row.discountAmount && row.discountType ?\n                <div>\n                    <p className=\"font-13 mb-0\">{row.discountAmount}{row.discountType === 'Flat' ? \"tk.\" : \"%\"}</p>\n                </div>\n                : \"N/A\"\n        },\n        {\n            name: \"Sub-Total\",\n            cell: row => <p className=\"font-13 mb-0\">{row.subTotal} tk.</p>\n        }\n    ]\n\n    if (isLoading) return <PreLoader />\n\n    return (\n        <div className=\"pb-4\">\n            <Container.Fluid>\n\n                {/* Order Creator Info Container */}\n                <Container.Row>\n\n                    {/* Order Info Container */}\n                    <Container.Column className=\"col-padding\">\n                        <Card.Simple className=\"shadow-sm border-0\">\n                            <Card.Body>\n                                <Container.Row>\n\n                                    {/* Order Information */}\n                                    <Container.Column className=\"col-md-6 col-xl-4\">\n                                        <table className=\"table table-sm table-borderless\">\n                                            <tbody>\n                                                <tr>\n                                                    <td style={styles.tdMd}><h6 className=\"font__size__md mb-0\">Date</h6></td>\n                                                    <td><p className=\"font__size__sm mb-0\">: {item.createdAt ? dateFormate(item.createdAt) : \"N/A\"}</p></td>\n                                                </tr>\n                                                <tr>\n                                                    <td style={styles.tdMd}><h6 className=\"font__size__md mb-0\">Order code</h6></td>\n                                                    <td><p className=\"font__size__sm mb-0\">: {item.orderCode || \"N/A\"}</p></td>\n                                                </tr>\n                                                <tr>\n                                                    <td style={styles.tdMd}><h6 className=\"font__size__md mb-0\">Order status</h6></td>\n                                                    <td><p className=\"font__size__sm mb-0\">: {item.status || \"N/A\"}</p></td>\n                                                </tr>\n                                                <tr>\n                                                    <td style={styles.tdMd}><h6 className=\"font__size__md mb-0\">Payment method</h6></td>\n                                                    <td><p className=\"font__size__sm mb-0\">: {item.paymentMethod || \"N/A\"}</p></td>\n                                                </tr>\n                                                <tr>\n                                                    <td style={styles.tdMd}><h6 className=\"font__size__md mb-0\">Payment Medium</h6></td>\n                                                    <td><p className=\"font__size__sm mb-0\">: {item.transaction ? item.transaction.card_type : \"N/A\"}</p></td>\n                                                </tr>\n                                                <tr>\n                                                    <td style={styles.tdMd}><h6 className=\"font__size__md mb-0\">Card no</h6></td>\n                                                    <td><p className=\"font__size__sm mb-0\">: {item.transaction ? item.transaction.card_no : \"N/A\"}</p></td>\n                                                </tr>\n                                                <tr>\n                                                    <td style={styles.tdMd}><h6 className=\"font__size__md mb-0\">Currency</h6></td>\n                                                    <td><p className=\"font__size__sm mb-0\">: {item.transaction ? item.transaction.currency : \"N/A\"}</p></td>\n                                                </tr>\n                                                <tr>\n                                                    <td style={styles.tdMd}><h6 className=\"font__size__md mb-0\">Transaction ID</h6></td>\n                                                    <td><p className=\"font__size__sm mb-0\">: {item.transaction ? item.transaction.bank_tran_id : \"N/A\"}</p></td>\n                                                </tr>\n                                            </tbody>\n                                        </table>\n                                    </Container.Column>\n\n                                    {/* Customer & Address */}\n                                    <Container.Column className=\"col-md-6 col-xl-5\">\n                                        <table className=\"table table-sm table-borderless\">\n                                            <tbody>\n                                                <tr>\n                                                    <td style={styles.tdMd}><h6 className=\"font__size__md mb-0\">Shipping area</h6></td>\n                                                    <td><p className=\"font__size__sm mb-0\">: {item.shippingArea || \"N/A\"}</p></td>\n                                                </tr>\n                                                <tr>\n                                                    <td style={styles.tdMd}><h6 className=\"font__size__md mb-0\">Post Code</h6></td>\n                                                    <td><p className=\"font__size__sm mb-0\">: {item.postCode || \"N/A\"}</p></td>\n                                                </tr>\n                                                <tr>\n                                                    <td style={styles.tdMd}><h6 className=\"font__size__md mb-0\">Post Office</h6></td>\n                                                    <td><p className=\"font__size__sm mb-0\">: {item.postOffice || \"N/A\"}</p></td>\n                                                </tr>\n                                                <tr>\n                                                    <td style={styles.tdMd}><h6 className=\"font__size__md mb-0\">Upazila</h6></td>\n                                                    <td><p className=\"font__size__sm mb-0\">: {item.upazila || \"N/A\"}</p></td>\n                                                </tr>\n                                                <tr>\n                                                    <td style={styles.tdMd}><h6 className=\"font__size__md mb-0\">Delivery address</h6></td>\n                                                    <td><p className=\"font__size__sm mb-0\">: {item.deliveryAddress || \"N/A\"}</p></td>\n                                                </tr>\n                                                <tr>\n                                                    <td style={styles.tdMd}><h6 className=\"font__size__md mb-0\">Delivery charge</h6></td>\n                                                    <td><p className=\"font__size__sm mb-0\">: {item.deliveryCharge ? item.deliveryCharge + \" Tk.\" : \"N/A\"}</p></td>\n                                                </tr>\n                                                <tr>\n                                                    <td style={styles.tdMd}><h6 className=\"font__size__md mb-0\">Customer</h6></td>\n                                                    <td><p className=\"font__size__sm mb-0\">: {item.name || \"N/A\"}</p></td>\n                                                </tr>\n                                                <tr>\n                                                    <td style={styles.tdMd}><h6 className=\"font__size__md mb-0\">Phone</h6></td>\n                                                    <td><p className=\"font__size__sm mb-0\">: {item.phone || \"N/A\"}</p></td>\n                                                </tr>\n                                            </tbody>\n                                        </table>\n                                    </Container.Column>\n\n                                    {/* Order Actions */}\n                                    <Container.Column className=\"col-md-6 col-xl-3\">\n\n                                        {/* Order Status */}\n                                        <div className=\"form-group change-status mb-2\">\n                                            <h6 className=\"font__size__md mb-1\"><i>Order Status</i></h6>\n                                            <select\n                                                style={{ width: 165, fontSize: 13, height: 42 }}\n                                                className=\"form-control shadow-none\"\n                                                defaultValue={item.status}\n                                                onChange={event => setOrderStatus({ ...orderStatus, show: true, value: event.target.value })}\n                                            >\n                                                <option value=\"Created\">Created</option>\n                                                <option value=\"Pending\">Pending</option>\n                                                <option value=\"Confirmed\">Confirmed</option>\n                                                <option value=\"Picked\">Picked</option>\n                                                <option value=\"Received in Warehouse\">Received in Warehouse</option>\n                                                <option value=\"Packed\">Packed</option>\n                                                <option value=\"Handed Over to Courier\">Handed Over to Courier</option>\n                                                <option value=\"Delivered\">Delivered</option>\n                                                <option value=\"Cancelled\">Cancelled</option>\n                                                <option value=\"Ready to Refund\">Ready to Refund</option>\n                                                <option value=\"Refunded\">Refunded</option>\n                                            </select>\n                                        </div>\n\n                                        {/* Payment Status */}\n                                        <div className=\"form-group change-status mb-2\">\n                                            <h6 className=\"font__size__md mb-1\"><i>Payment Status</i></h6>\n                                            <select\n                                                style={{ width: 165, fontSize: 13, height: 42 }}\n                                                className=\"form-control shadow-none\"\n                                                defaultValue={item.paymentStatus}\n                                                onChange={event => setPaymentStatus({ ...orderStatus, show: true, value: event.target.value })}\n                                            >\n                                                <option value=\"Paid\">Paid</option>\n                                                <option value=\"Pending\">Pending</option>\n                                                <option value=\"Partially Paid\">Partially Paid</option>\n                                            </select>\n                                        </div>\n\n                                        {/* Comments View */}\n                                        <div className=\"mb-2\">\n                                            <CustomButton\n                                                className=\"btn-success border-0\"\n                                                style={{ padding: \"10px 22px\", fontSize: 13, width: 165 }}\n                                                onClick={() => setShowComment(true)}\n                                            ><Icon icon={messageCircle} size={20} /> View Comments</CustomButton>\n                                        </div>\n\n                                        {/* Delivery Info */}\n                                        {item.status === \"Handed Over to Courier\" ?\n                                            <CustomButton\n                                                className=\"btn-primary border-0\"\n                                                style={{ padding: \"11px 28px\", fontSize: 13, width: 165 }}\n                                                onClick={() => setShow(true)}\n                                            >Send Delivery Info</CustomButton>\n                                            : null\n                                        }\n                                    </Container.Column>\n                                </Container.Row>\n                            </Card.Body>\n                        </Card.Simple>\n                    </Container.Column>\n                </Container.Row>\n\n                {/* Coupon Info */}\n                {item.isCouponApplied && item.couponInfo && Object.keys(item.couponInfo).length > 0 &&\n                    <Container.Row>\n                        <Container.Column className=\"col-padding\">\n                            <Card.Simple className=\"bg-white border-0 shadow-sm\">\n                                <Card.Body>\n                                    <h6 className=\"text-muted fw-bolder font-14 mb-2\">Uses coupon</h6>\n                                    <p className=\"font-13 mb-1\"><span className=\"text-muted\">Coupon code:</span> {item.couponInfo.code}</p>\n                                    <p className=\"font-13 mb-1\"><span className=\"text-muted\">Discount in price:</span> {item.couponInfo.amount}{item.couponInfo.type === \"Flat\" ? \"tk.\" : \"%\"}</p>\n                                    {/* <p className=\"font-13 mb-2\"><span className=\"text-muted\">Discount in shipping (Dhaka):</span> {item.couponInfo.insideDhaka} tk.</p>\n                                    <p className=\"font-13 mb-0\"><span className=\"text-muted\">Discount in shipping (Outside Dhaka):</span> {item.couponInfo.outsideDhaka} tk.</p> */}\n                                </Card.Body>\n                            </Card.Simple>\n                        </Container.Column>\n                    </Container.Row>\n                }\n\n                {/* Created By & Calculations Container */}\n                <Container.Row>\n\n                    {/* Created By */}\n                    <Container.Column className=\"col-md-6 col-padding pr-md-2\">\n                        <Card.Simple className=\"border-0\">\n                            <Card.Header className=\"bg-white border-0 p-4\">\n                                <h6 className=\"mb-0\">Created By</h6>\n                            </Card.Header>\n                            <Card.Body className=\"pt-2\">\n                                <table className=\"table table-sm table-borderless mb-0\">\n                                    <tbody>\n                                        <tr>\n                                            <td style={styles.tdSm}><h6 className=\"font__size__md mb-0\">Name</h6></td>\n                                            <td><p className=\"font__size__sm mb-0\">: {item.createdBy ? item.createdBy.name : \"N/A\"}</p></td>\n                                        </tr>\n                                        <tr>\n                                            <td style={styles.tdSm}><h6 className=\"font__size__md mb-0\">E-mail</h6></td>\n                                            <td><p className=\"font__size__sm mb-0\">: {item.createdBy ? item.createdBy.email : \"N/A\"}</p></td>\n                                        </tr>\n                                        <tr>\n                                            <td style={styles.tdSm}><h6 className=\"font__size__md mb-0\">Phone</h6></td>\n                                            <td><p className=\"font__size__sm mb-0\">: {item.createdBy ? item.createdBy.phone : \"N/A\"}</p></td>\n                                        </tr>\n                                        <tr>\n                                            <td style={styles.tdSm}><h6 className=\"font__size__md mb-0\">Role</h6></td>\n                                            <td><p className=\"font__size__sm mb-0\">: {item.createdBy ? item.createdBy.role : \"Customer\"}</p></td>\n                                        </tr>\n                                    </tbody>\n                                </table>\n                            </Card.Body>\n                        </Card.Simple>\n                    </Container.Column>\n\n                    {/* Calculations */}\n                    <Container.Column className=\"col-md-6 pl-md-0\">\n                        <Container.Row>\n                            <div className=\"col-6 pr-0\">\n                                <Card.Simple className=\"border-0 p-2\" style={{ background: \"none\" }}>\n                                    <Card.Body className=\"text-center bg-white py-4\">\n                                        <h5 className=\"mb-1\">{item.subTotalPrice || 0} tk.</h5>\n                                        <p className=\"font__size__md text-muted mb-0\">Sub-Total</p>\n                                    </Card.Body>\n                                </Card.Simple>\n                            </div>\n                            <div className=\"col-6 pl-0\">\n                                <Card.Simple className=\"border-0 p-2\" style={{ background: \"none\" }}>\n                                    <Card.Body className=\"text-center bg-white py-4\">\n                                        <h5 className=\"mb-1\">{item.deliveryCharge || 0} tk.</h5>\n                                        <p className=\"font__size__md mb-0\">Delivery Charge</p>\n                                    </Card.Body>\n                                </Card.Simple>\n                            </div>\n                            <div className=\"col-6 pr-0\">\n                                <Card.Simple className=\"border-0 p-2\" style={{ background: \"none\" }}>\n                                    <Card.Body className=\"text-center bg-white py-4\">\n                                        <h5 className=\"mb-1\">{item.totalPrice || 0} tk.</h5>\n                                        <p className=\"font__size__md mb-0\">Total Price</p>\n                                    </Card.Body>\n                                </Card.Simple>\n                            </div>\n                            <div className=\"col-6 pl-0\">\n                                <Card.Simple className=\"border-0 p-2\" style={{ background: \"none\" }}>\n                                    <Card.Body className=\"text-center bg-white overflow-hidden p-0\" style={{ height: 97 }}>\n                                        <img src={Images.PaymentCard} style={{ height: 97, maxWidth: \"100%\" }} alt=\"Payment card\" />\n                                    </Card.Body>\n                                </Card.Simple>\n                            </div>\n                        </Container.Row>\n                    </Container.Column>\n                </Container.Row>\n\n                {/* Ordered & Canceled Products */}\n                <Container.Row>\n\n                    {/* Ordered Products */}\n                    <Container.Column className=\"col-padding\">\n                        <Card.Simple className=\"border-0\">\n                            <Card.Header className=\"bg-white border-0 pl-3 pt-3 pb-0\">\n                                <h6 className=\"mb-0\">Ordered Products</h6>\n                            </Card.Header>\n                            <Card.Body className=\"p-0\">\n                                <DataTable\n                                    fixedHeader\n                                    fixedHeaderScrollHeight=\"580px\"\n                                    customStyles={customStyles}\n                                    columns={columns}\n                                    data={item.products}\n                                    loading={isLoading}\n                                />\n                            </Card.Body>\n                        </Card.Simple>\n                    </Container.Column>\n\n                    {/* Canceled Products */}\n                    <Container.Column className=\"col-padding\">\n                        <Card.Simple className=\"border-0\">\n                            <Card.Header className=\"bg-white border-0 pl-3 pt-3 pb-0\">\n                                <h6 className=\"mb-0\">Canceled Products</h6>\n                            </Card.Header>\n                            <Card.Body className=\"p-0\">\n                                <DataTable\n                                    fixedHeader\n                                    fixedHeaderScrollHeight=\"580px\"\n                                    customStyles={customStyles}\n                                    columns={canceledProductsColumns}\n                                    data={item.canceledProducts}\n                                    loading={isLoading}\n                                />\n                            </Card.Body>\n                        </Card.Simple>\n                    </Container.Column>\n                </Container.Row>\n\n                {/* Follow-Up float button */}\n                <CustomButton\n                    className=\"btn-float\"\n                    disabled={isFollowUp}\n                    onClick={handleFollowUp}\n                >\n                    {item.followUp ? <Icon icon={androidNotifications} size={25} /> : <Icon icon={androidNotificationsOff} size={25} />}\n                </CustomButton>\n\n                {/* Send delivery info modal */}\n                {show &&\n                    <DeliveryInfoModal\n                        show={show}\n                        reciver={item.phone}\n                        onHide={() => setShow(false)}\n                    />\n                }\n\n                {/* Order status modal */}\n                {orderStatus.show &&\n                    <OrderStatusModal\n                        show={orderStatus.show}\n                        loading={orderStatus.loading}\n                        status={orderStatus.value}\n                        onHide={() => setOrderStatus({ ...orderStatus, show: false, value: null })}\n                        handleAction={data => handleStatusAction(data)}\n                    />\n                }\n\n                {/* Payment status modal */}\n                {paymentStatus.show &&\n                    <ConfirmationModal\n                        show={paymentStatus.show}\n                        loading={paymentStatus.loading}\n                        message={<h6 className=\"mb-0\">You want to change payment status.</h6>}\n                        onHide={() => setPaymentStatus({ ...paymentStatus, show: false, value: null })}\n                        doDelete={handlePaymentAction}\n                    />\n                }\n\n                {/* Comments preview modal */}\n                {showComment &&\n                    <CommentsModal\n                        orderId={id}\n                        header={header}\n                        show={showComment}\n                        onHide={() => setShowComment(false)}\n                    />\n                }\n\n                {/* Cancel item confirmation modal */}\n                {isCancelation.value && isCancelation.show ?\n                    <DeleteModal\n                        show={isCancelation.show}\n                        loading={isCancelation.loading}\n                        message={\n                            <div>\n                                <h6 className=\"mb-2\">Want to cancel this item from order?</h6>\n                                <img src={isCancelation.value.thumbnail} className=\"img-fluid\" alt=\"...\" />\n                            </div>\n                        }\n                        doDelete={onCancelItem}\n                        onHide={() => setCancelation({ value: null, show: false, loading: false })}\n                    />\n                    : null\n                }\n            </Container.Fluid>\n        </div>\n    );\n}\n\nexport default Show;\n\nconst styles = {\n    tdSm: { width: 60 },\n    tdMd: { width: 130 }\n}\n\n{/* <div className=\"container-fluid\">\n\n\n<div className=\"row\">\n    <div className=\"col-12 col-padding\">\n        <div className=\"card shadow-sm border-0\">\n            <div className=\"card-body p-4\">\n                <div className=\"d-xxl-flex\">\n                    <div className=\"flex-fill\">\n                        <table className=\"table table-sm table-borderless\">\n                            <tbody>\n                                <tr>\n                                    <td style={styles.tdMd}><h6>Date</h6></td>\n                                    <td><p>{dateFormate(item.createdAt)}</p></td>\n                                </tr>\n                                <tr>\n                                    <td style={styles.tdMd}><h6>Order code</h6></td>\n                                    <td><p>{item.orderCode}</p></td>\n                                </tr>\n                                <tr>\n                                    <td style={styles.tdMd}><h6>Order status</h6></td>\n                                    <td><p>{item.status}</p></td>\n                                </tr>\n                                <tr>\n                                    <td style={styles.tdMd}><h6>Payment status</h6></td>\n                                    <td>\n                                        <div className=\"form-group change-status mb-1\">\n                                            <select\n                                                style={{ width: 140 }}\n                                                className=\"form-control shadow-none\"\n                                                defaultValue={item.paymentStatus}\n                                                onChange={event => setPaymentStatus({ ...orderStatus, show: true, value: event.target.value })}\n                                            >\n                                                <option value=\"Paid\">Paid</option>\n                                                <option value=\"Pending\">Pending</option>\n                                            </select>\n                                        </div>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td style={styles.tdMd}><h6>Payment method</h6></td>\n                                    <td><p>{item.paymentMethod}</p></td>\n                                </tr>\n                                <tr>\n                                    <td style={styles.tdMd}><h6>Payment Medium</h6></td>\n                                    <td><p> {item.transaction ? item.transaction.card_type : \"N/A\"}</p></td>\n                                </tr>\n                                <tr>\n                                    <td style={styles.tdMd}><h6>Card no</h6></td>\n                                    <td><p> {item.transaction ? item.transaction.card_no : \"N/A\"}</p></td>\n                                </tr>\n                                <tr>\n                                    <td style={styles.tdMd}><h6>Currency</h6></td>\n                                    <td><p> {item.transaction ? item.transaction.currency : \"N/A\"}</p></td>\n                                </tr>\n                                <tr>\n                                    <td colSpan={2} style={styles.tdMd}><h6>Transaction ID <br /> <span style={{ fontSize: '16px', fontWeight: 'bold' }}>{item.transaction ? item.transaction.bank_tran_id : \"N/A\"}</span></h6></td>\n                                </tr>\n                            </tbody>\n                        </table>\n                    </div>\n\n                    <div className=\"flex-fill\">\n                        <table className=\"table table-sm table-borderless\">\n                            <tbody>\n                                <tr>\n                                    <td style={styles.tdMd}><h6>Shipping area</h6></td>\n                                    <td><p>{item.shippingArea}</p></td>\n                                </tr>\n                                <tr>\n                                    <td style={styles.tdMd}><h6>Post Code</h6></td>\n                                    <td><p>{item.postCode || \"N/A\"}</p></td>\n                                </tr>\n                                <tr>\n                                    <td style={styles.tdMd}><h6>Post Office</h6></td>\n                                    <td><p>{item.postOffice || \"N/A\"}</p></td>\n                                </tr>\n                                <tr>\n                                    <td style={styles.tdMd}><h6>Upazila</h6></td>\n                                    <td><p>{item.upazila || \"N/A\"}</p></td>\n                                </tr>\n                                <tr>\n                                    <td style={styles.tdMd}><h6>Delivery address</h6></td>\n                                    <td><p>{item.deliveryAddress}</p></td>\n                                </tr>\n                                <tr>\n                                    <td style={styles.tdMd}><h6>Delivery charge</h6></td>\n                                    <td><p className=\"text-success\">{item.deliveryCharge} tk</p></td>\n                                </tr>\n\n                            </tbody>\n                        </table>\n                    </div>\n\n                    <div className=\"flex-fill\">\n                        <table className=\"table table-sm table-borderless\">\n                            <tbody>\n                                <tr>\n                                    <td style={styles.tdMd}><h6>Customer name</h6></td>\n                                    <td><p>{item.name}</p></td>\n                                </tr>\n                                <tr>\n                                    <td style={styles.tdMd}><h6>Phone</h6></td>\n                                    <td><p>{item.phone}</p></td>\n                                </tr>\n                            </tbody>\n                        </table>\n\n                     \n                        <div className=\"form-group change-status mt-3 mb-0\">\n                            <select\n                                style={{ width: 140 }}\n                                className=\"form-control shadow-none\"\n                                defaultValue={item.status}\n                                onChange={event => setOrderStatus({ ...orderStatus, show: true, value: event.target.value })}\n                            >\n                                <option value=\"Created\">Created</option>\n                                <option value=\"Pending\">Pending</option>\n                                <option value=\"Confirmed\">Confirmed</option>\n                                <option value=\"Picked\">Picked</option>\n                                <option value=\"Received in Warehouse\">Received in Warehouse</option>\n                                <option value=\"Packed\">Packed</option>\n                                <option value=\"Handed Over to Courier\">Handed Over to Courier</option>\n                                <option value=\"Delivered\">Delivered</option>\n                                <option value=\"Cancelled\">Cancelled</option>\n                                <option value=\"Ready to Refund\">Ready to Refund</option>\n                                <option value=\"Refunded\">Refunded</option>\n                            </select>\n                        </div>\n\n                        <div>\n                            <CustomButton\n                                style={{ padding: \"7px 10px\" }}\n                                onClick={() => setShowComment(true)}\n                            ><Icon icon={messageCircle} size={20} /> View Comments</CustomButton>\n                        </div>\n\n                        {item.status === \"Handed Over to Courier\" ?\n                            <button\n                                type=\"button\"\n                                className=\"btn shadow-none\"\n                                onClick={() => setShow(true)}\n                            >Send Delivery Info</button>\n                            : null}\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n\n\n<div className=\"row\">\n    <div className=\"col-12 col-padding\">\n        <div className=\"card shadow-sm border-0\">\n            <div className=\"card-header bg-white border-0 px-4 pt-3 pb-0\">\n                <h6 className=\"mb-0 ml-1\">Order created by.</h6>\n            </div>\n            <div className=\"card-body p-4\">\n                <div className=\"d-xxl-flex\">\n                    <div className=\"flex-fill\">\n                        <table className=\"table table-sm table-borderless\">\n                            <tbody>\n                                <tr>\n                                    <td style={styles.tdMd}><p>Name</p></td>\n                                    <td><p>: {item.createdBy.name}</p></td>\n                                </tr>\n                                <tr>\n                                    <td style={styles.tdMd}><p>E-mail</p></td>\n                                    <td><p>: {item.createdBy.email || null}</p></td>\n                                </tr>\n                            </tbody>\n                        </table>\n                    </div>\n                    <div className=\"flex-fill\">\n                        <table className=\"table table-sm table-borderless\">\n                            <tbody>\n                                <tr>\n                                    <td style={styles.tdMd}><p>Phone</p></td>\n                                    <td><p>: {item.createdBy.phone}</p></td>\n                                </tr>\n                                <tr>\n                                    <td style={styles.tdMd}><p>Role</p></td>\n                                    <td><p>: {item.createdBy.role || 'Customer'}</p></td>\n                                </tr>\n                            </tbody>\n                        </table>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n\n\n<div className=\"row subtotal-comission-total-container\">\n    <div className=\"col-12 col-padding\">\n\n      \n        <div className=\"card\">\n            <div className=\"card-body shadow-sm\">\n                <h6>{item.subTotalPrice}<small>TK</small></h6>\n                <p>Sub-total</p>\n            </div>\n        </div>\n\n       \n        <div className=\"card\">\n            <div className=\"card-body shadow-sm\">\n                <h6>{item.deliveryCharge}<small>TK</small></h6>\n                <p>Delivery Charge</p>\n            </div>\n        </div>\n\n        \n        <div className=\"card\">\n            <div className=\"card-body shadow-sm\">\n                <h6>{item.totalPrice}<small>TK</small></h6>\n                <p>total</p>\n            </div>\n        </div>\n\n    </div>\n</div>\n\n\n{item.products && item.products.length &&\n    <OrderedProducts\n        item={item}\n        orderId={id}\n        title={'Ordered'}\n        success={fetchData}\n        products={item.products}\n    />\n}\n\n\n{item.canceledProducts && item.canceledProducts.length &&\n    <OrderedProducts\n        item={item}\n        orderId={id}\n        title={'Cancelled'}\n        products={item.canceledProducts}\n    />\n}\n\n\n{show &&\n    <DeliveryInfoModal\n        show={show}\n        reciver={item.phone}\n        onHide={() => setShow(false)}\n    />\n}\n\n\n{orderStatus.show &&\n    <OrderStatusModal\n        show={orderStatus.show}\n        loading={orderStatus.loading}\n        status={orderStatus.value}\n        onHide={() => setOrderStatus({ ...orderStatus, show: false, value: null })}\n        handleAction={data => handleStatusAction(data)}\n    />\n}\n\n\n{paymentStatus.show &&\n    <ConfirmationModal\n        show={paymentStatus.show}\n        loading={paymentStatus.loading}\n        onHide={() => setPaymentStatus({ ...paymentStatus, show: false, value: null })}\n        doDelete={handlePaymentAction}\n    />\n}\n\n\n{showComment &&\n    <CommentsModal\n        orderId={id}\n        header={header}\n        show={showComment}\n        onHide={() => setShowComment(false)}\n    />\n}\n\n\n<CustomButton\n    className=\"btn-float\"\n    disabled={isFollowUp}\n    onClick={handleFollowUp}\n>\n    {item.followUp ?\n        <Icon icon={androidNotifications} size={25} />\n        :\n        <Icon icon={androidNotificationsOff} size={25} />\n    }\n</CustomButton>\n\n</div> */}\n\n","D:\\previous\\src\\pages\\orders\\Edit.js",[],"D:\\previous\\src\\pages\\orders\\Create.js",["938","939","940","941","942","943"],"import React, { useCallback, useEffect, useRef, useState } from 'react'\nimport './style.scss'\nimport Icon from 'react-icons-kit'\nimport CommaNumber from 'comma-number'\nimport { minus, plus } from 'react-icons-kit/feather'\nimport { SearchableSelect, SingleSelect } from '../../components/select'\nimport { districts } from '../../utils/location/districts'\nimport { Customer } from '../../components/form/order/Customer'\nimport { CouponApply } from '../../components/form/order/CouponApply'\nimport { toast, Slide } from 'react-toastify'\nimport Requests from '../../utils/Requests/Index'\nimport { useForm } from 'react-hook-form'\nimport { useHistory } from 'react-router-dom'\nimport { PaymentMethodForm } from '../../components/form/order/PaymentMethodForm'\n\ntoast.configure({\n    autoClose: 1500,\n    transition: Slide,\n    position: \"top-right\",\n    hideProgressBar: false,\n    closeOnClick: true,\n    pauseOnHover: true,\n    draggable: true,\n    progress: undefined,\n})\n\nconst Create = () => {\n    const selectedField = useRef()\n    const history = useHistory()\n    const { register, handleSubmit, clearErrors, setError, errors } = useForm()\n    const [placed, setPlaced] = useState(false)\n    const [loading, setLoading] = useState(false)\n    const [paymentMethod, setPaymentMethod] = useState(\"COD\")\n    const [selectedItems, setSelectedItems] = useState([])\n    const [process, setProcess] = useState({ data: null, loading: false })\n    const [coupon, setCoupon] = useState({ loading: false, message: {} })\n    const [selectedCustomer, setSelectedCustomer] = useState(null)\n    const [selectedDivision, setSelectedDivision] = useState(null)\n    const [selectedDistrict, setSelectedDistrict] = useState(null)\n    const [selectedArea, setSelectedArea] = useState(null)\n    const [divisions, setDivisions] = useState([])\n    const [districts, setDistricts] = useState([])\n    const [areas, setAreas] = useState([])\n    const [isCouponApplied, setIsCouponApplied] = useState(false)\n    const [subTotal, setSubTotal] = useState(null)\n    const [deliveryCharge, setDeliveryCharge] = useState(null)\n    const [total, setTotal] = useState(null)\n    const [header] = useState({\n        headers: { Authorization: \"Bearer \" + localStorage.getItem(\"token\") }\n    })\n\n    // Count total amount\n    const TotalAmount = (subTotal, dCharge) => {\n        return subTotal + dCharge\n    }\n\n    // Handle product search from API\n    const handleProductSearch = async (inputValue) => {\n        let results = []\n        const response = await Requests.Product.Search(inputValue, header)\n\n        if (response && response.data && response.data.length) {\n            for (let i = 0; i < response.data.length; i++) {\n                const element = response.data[i]\n                results.push({\n                    ...element,\n                    label: element.sku + ' - ' + element.name.slice(0, 40) + ' ...',\n                    name: element.name.slice(0, 10) + ' ...',\n                    quantity: 1,\n                    value: element._id,\n                    image: element.thumbnail\n                })\n            }\n        }\n        return results\n    }\n\n    // Handle Selected products values\n    const handleSelectedProductsValues = data => setSelectedItems(data)\n\n    // Increment Quantity\n    const incrementQuantity = key => {\n        let items = [...selectedItems]\n        let item = { ...items[key] }\n        item.quantity += 1\n\n        items[key] = item\n        setSelectedItems(items)\n        setProcess({ ...process, data: null })\n        setCoupon({ loading: false, message: {} })\n    }\n\n    // Decrement Quantity\n    const decrementQuantity = key => {\n        let items = [...selectedItems]\n        let item = { ...items[key] }\n        item.quantity -= 1\n\n        items[key] = item\n        setSelectedItems(items)\n        setProcess({ ...process, data: null })\n        setCoupon({ loading: false, message: {} })\n    }\n\n    /* fetch division */\n    const fetchDivision = useCallback(async () => {\n        const response = await Requests.Services.Shipping.MainShipping.DivisionList(header)\n        let items = []\n        if (response && response.data) {\n            for (let i = 0; i < response.data.length; i++) {\n                const element = response.data[i]\n                items.push({\n                    label: element.name,\n                    value: element._id,\n                })\n            }\n        }\n        setDivisions(items)\n    }, [])\n\n    /* fetch district */\n    const fetchDistrict = async (id) => {\n        const response = await Requests.Services.Shipping.MainShipping.DistrictList(id, header)\n        let items = []\n        if (response && response.data) {\n            for (let i = 0; i < response.data.length; i++) {\n                const element = response.data[i]\n                items.push({\n                    label: element.name,\n                    value: element._id,\n                })\n            }\n        }\n        setDistricts(items)\n    }\n\n    /* fetch area */\n    const fetchArea = async (id) => {\n        const response = await Requests.Services.Shipping.MainShipping.AreaList(id, header)\n        let items = []\n        if (response && response.data) {\n            for (let i = 0; i < response.data.length; i++) {\n                const element = response.data[i]\n                items.push({\n                    label: `${element.post_office} - ${element.post_code}`,\n                    value: element._id,\n                })\n            }\n        }\n        setAreas(items)\n    }\n\n    // Division\n    useEffect(() => {\n        fetchDivision()\n    }, [fetchDivision])\n\n    // Process Order\n    const processOrder = async (data) => {\n\n        let is_error = false\n\n        if (!selectedDivision) {\n            setError(\"division\", {\n                type: \"manual\",\n                message: \"Division is required.\"\n            })\n            is_error = true\n        }\n        if (!selectedDistrict) {\n            setError(\"district\", {\n                type: \"manual\",\n                message: \"District is required.\"\n            })\n            is_error = true\n        }\n        if (!selectedArea) {\n            setError(\"area\", {\n                type: \"manual\",\n                message: \"Area is required.\"\n            })\n            is_error = true\n        }\n\n        if (is_error) return\n\n        let products = []\n\n        if (selectedItems && selectedItems.length) {\n            for (let i = 0; i < selectedItems.length; i++) {\n                const element = selectedItems[i]\n                products.push({\n                    quantity: element.quantity,\n                    _id: element.value\n                })\n            }\n        }\n\n        const formData = {\n            products: [...products],\n            division: selectedDivision.value,\n            district: selectedDistrict.value,\n            area: selectedArea.value\n        }\n\n        setProcess({ ...process, loading: true })\n        const response = await Requests.Order.ProcessOrder(formData, header)\n        setProcess({ data: response, loading: false })\n        setSubTotal(response && response.subTotal ? response.subTotal : 0)\n        setDeliveryCharge(response && response.shippingCharge ? response.shippingCharge : 0)\n        setTotal(response && response.totalPrice ? response.totalPrice : 0)\n\n    }\n\n    // Handle coupon\n    const handleCoupon = async (data) => {\n\n        let products = []\n\n        if (selectedItems && selectedItems.length) {\n            for (let i = 0; i < selectedItems.length; i++) {\n                const element = selectedItems[i]\n                products.push({\n                    ...element,\n                    quantity: element.quantity,\n                    _id: element.value\n                })\n            }\n        }\n        const formData = {\n            ...data,\n            products: products,\n            // shippingLocation: area.value,\n            processId: process.data.processId\n        }\n\n        setCoupon({ ...coupon, loading: true })\n        const response = await Requests.Order.ApplyCoupon(formData, header)\n\n        if (response && response.sucess) {\n            toast.success(response.message)\n            setIsCouponApplied(true)\n            setProcess({\n                ...process, data: {\n                    ...process.data,\n                    coupon: response.data && response.data.available_coupon ? response.data.available_coupon : null,\n                    subTotal: response.data && response.data.subTotal ? response.data.subTotal : null,\n                    shippingCharge: response.data && response.data.shippingCharge ? response.data.shippingCharge : null,\n                    totalPrice: response.data && response.data.totalPrice ? response.data.totalPrice : null\n                }\n            })\n            setCoupon({ ...coupon, loading: false, message: { type: \"success\", value: response.message } })\n\n        } else {\n            setCoupon({ ...coupon, loading: false })\n        }\n\n    }\n\n    // Handle customer search from API\n    const handleCustomerSearch = async (inputValue) => {\n        let results = []\n        const response = await Requests.Order.SearchCustomer(inputValue, header)\n\n        if (response && response.data && response.data.length) {\n            for (let i = 0; i < response.data.length; i++) {\n                const element = response.data[i]\n                results.push({\n                    value: element._id,\n                    label: element.name + \"-\" + element.phone,\n                    name: element.name,\n                    email: element.email,\n                    phone: element.phone,\n                    shippingArea: element.shippingAddress,\n                    deliveryAddress: element.deliveryAddress,\n                    postCode: element.postCode,\n                    postOffice: element.postOffice,\n                    upazila: element.upazila\n                })\n            }\n        }\n\n        return results\n    }\n\n    const payment = async data => {\n\n        console.log(\"payment\", data);\n\n\n\n    }\n\n    // Place order\n    const placeOrder = async data => {\n\n        const formData = {\n            ...data,\n            // shippingArea: area && area.value ? area.value : null,\n            // postCode: postCode && postCode.value ? postCode.value : null,\n            // postOffice: postOffice || null,\n            coupon: process.data && process.data.coupon && process.data.coupon._id ? process.data.coupon._id : null,\n            subTotal: subTotal || 0,\n            shippingCharge: deliveryCharge || 0,\n            totalPrice: total || 0,\n            // upazila: upzila || null,\n            isCouponApplied: isCouponApplied,\n            couponInfo: process.data && process.data.coupon ? process.data.coupon : null,\n            products: JSON.stringify(process.data && process.data.products ? process.data.products : null)\n        }\n\n        setPlaced(true)\n        const response = await Requests.Order.PlaceOrder(formData, header)\n        if (response) {\n            setSelectedItems([])\n            history.push(\"/dashboard/order\")\n        }\n        setPlaced(false)\n    }\n\n\n    return (\n        <div className=\"order-create-container\">\n            <div className=\"container-fluid\">\n                <div className=\"row\">\n\n                    {/* Header & search container */}\n                    <div className=\"col-12 col-padding\">\n                        <SearchableSelect\n                            isMulti={true}\n                            placeholder=\"Search product by SKU\"\n                            search={handleProductSearch}\n                            values={handleSelectedProductsValues}\n                        />\n                    </div>\n\n                    {/* Selected items container */}\n                    <div className=\"col-12 col-padding selected-products-container\">\n                        {selectedItems && selectedItems.map((item, i) =>\n                            <div className=\"card border-0 p-2\" key={i}>\n                                <div className=\"card-body shadow-sm bg-white rounded text-center\">\n                                    <div className=\"img-container\">\n                                        <img src={item.image} className=\"img-fluid\" alt=\"...\" />\n                                    </div>\n                                    <p>{item.name}</p>\n\n                                    <div className=\"d-flex mt-2\">\n                                        <div><p>Quantity: {item.quantity}</p></div>\n                                        <div className=\"ml-auto pt-2\">\n                                            <button className=\"btn btn-sm shadow-none rounded-circle btn-desc\"\n                                                disabled={item.quantity <= 1}\n                                                onClick={() => decrementQuantity(i)}\n                                            >\n                                                <Icon icon={minus} size={15} />\n                                            </button>\n                                            <button className=\"btn btn-sm shadow-none rounded-circle btn-inc ml-1\"\n                                                onClick={() => incrementQuantity(i)}\n                                            >\n                                                <Icon icon={plus} size={15} />\n                                            </button>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        )}\n                    </div>\n\n                    {/* Process Order Button */}\n                    {selectedItems && selectedItems.length ?\n                        <div className='col-12'>\n                            <form onSubmit={handleSubmit(processOrder)}>\n                                <div className='row'>\n                                    {/* Division */}\n                                    <div className=\"col-12 col-lg-6\">\n                                        <div className=\"form-group mb-4\">\n                                            {errors.division && errors.division.message ?\n                                                <small className=\"text-danger\">{errors.division && errors.division.message}</small> :\n                                                <small>Select division<span className=\"text-danger\">*</span></small>\n                                            }\n\n                                            <SingleSelect\n                                                options={divisions}\n                                                placeholder={'division'}\n                                                borderRadius={4}\n                                                error={errors.division && errors.division.message}\n                                                value={(event) => {\n                                                    setSelectedDivision(event)\n                                                    fetchDistrict(event.value)\n                                                    clearErrors(\"division\")\n                                                }}\n                                            />\n                                        </div>\n                                    </div>\n\n                                    {/* District */}\n                                    {selectedDivision ?\n                                        <div className=\"col-12 col-lg-6\">\n                                            <div className=\"form-group mb-4\">\n                                                {errors.district && errors.district.message ?\n                                                    <small className=\"text-danger\">{errors.district && errors.district.message}</small> :\n                                                    <small>Select district<span className=\"text-danger\">*</span></small>\n                                                }\n\n                                                <SingleSelect\n                                                    options={districts}\n                                                    placeholder={'district'}\n                                                    borderRadius={4}\n                                                    error={errors.district && errors.district.message}\n                                                    value={(event) => {\n                                                        setSelectedDistrict(event)\n                                                        fetchArea(event.value)\n                                                        clearErrors(\"district\")\n                                                    }}\n                                                />\n                                            </div>\n                                        </div>\n                                        : null}\n\n\n                                    {/* Area */}\n                                    {selectedDistrict ?\n                                        <div className=\"col-12 col-lg-6\">\n                                            <div className=\"form-group mb-4\">\n                                                {errors.area && errors.area.message ?\n                                                    <small className=\"text-danger\">{errors.area && errors.area.message}</small> :\n                                                    <small>Select Area<span className=\"text-danger\">*</span></small>\n                                                }\n\n                                                <SingleSelect\n                                                    options={areas}\n                                                    placeholder={'area'}\n                                                    borderRadius={4}\n                                                    error={errors.area && errors.area.message}\n                                                    value={(event) => {\n                                                        setSelectedArea(event)\n                                                        clearErrors(\"area\")\n                                                    }}\n                                                />\n                                            </div>\n                                        </div>\n                                        : null}\n\n                                    <div className=\"col-12 text-center py-3\">\n                                        <button className=\"btn shadow-none success-btn px-4 py-2\"\n                                            disabled={process.loading}\n                                        // onClick={processOrder}\n                                        >{process.loading ? \"Processing ...\" : \"Process Order\"}</button>\n                                    </div>\n                                </div>\n                            </form>\n                        </div>\n                        : null\n                    }\n\n                    {/* Processing price */}\n                    {selectedItems && selectedItems.length && process.data ?\n                        <div className=\"col-12 py-3\">\n                            <div className=\"card border-0 shadow-sm\">\n                                <div className=\"card-body p-4\">\n                                    <div>\n                                        {/* Payment method */}\n                                        <div>\n                                            <div className=\"form-group mb-4\">\n                                                <p>Payment method</p>\n\n                                                <select\n                                                    name=\"paymentMethod\"\n                                                    className=\"form-control shadow-none\"\n                                                    defaultValue=\"COD\"\n                                                    onChange={(e) => setPaymentMethod(e.target.value)}\n                                                >\n                                                    <option value=\"\">--- Select Option ---</option>\n                                                    <option value=\"COD\">COD</option>\n                                                    <option value=\"Paid\">Paid</option>\n                                                    <option value=\"Partial Paid\">Partial Paid</option>\n                                                </select>\n                                            </div>\n                                        </div>\n                                        <PaymentMethodForm\n                                            loading={loading}\n                                            paymentMethod={paymentMethod}\n                                            value={data => payment(data)}\n                                        />\n                                    </div>\n                                    <div className=\"d-flex\">\n                                        <div>\n                                            <p className=\"text-muted mb-1\">Sub-Total</p>\n                                            <p className=\"text-muted mb-1\">Delivery charge </p>\n\n                                        </div>\n                                        <div className=\"ml-auto\">\n                                            <p className=\"text-muted mb-1\">: ৳. {CommaNumber(subTotal)}</p>\n                                            <p className=\"text-muted mb-1\">: ৳. {CommaNumber(deliveryCharge)}</p>\n                                        </div>\n                                    </div>\n                                    <hr className=\"my-2\" />\n                                    <div className=\"d-flex\">\n                                        <div>\n                                            <p className=\"mb-1\">Total</p>\n                                        </div>\n                                        <div className=\"ml-auto\">\n\n                                            <p className=\"mb-1\">: ৳. {CommaNumber(total)}</p>\n                                        </div>\n                                    </div>\n                                    <br />\n\n                                    <CouponApply\n                                        loading={coupon.loading}\n                                        message={coupon.message}\n                                        value={handleCoupon}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        : null\n                    }\n\n                    {/* Customer selection */}\n                    {selectedItems && selectedItems.length && process.data ?\n                        <div className=\"col-12 py-3\">\n                            <div className=\"card border-0 shadow-sm\">\n                                <div className=\"card-header rounded border-0 bg-white p-3 p-lg-4\">\n                                    <div className=\"d-md-flex\">\n                                        <div><h5 className=\"mb-0\">Customer Information</h5></div>\n                                        <div className=\"ml-md-auto pt-3 pt-md-0\" style={{ width: 250 }}>\n                                            <SearchableSelect\n                                                placeholder=\"Search customer\"\n                                                search={handleCustomerSearch}\n                                                values={data => setSelectedCustomer(data)}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"card-body border-top p-3 p-lg-4\">\n                                    <Customer\n                                        loading={placed}\n                                        data={selectedCustomer}\n                                        value={data => placeOrder(data)}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        : null\n                    }\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Create;\n","D:\\previous\\src\\pages\\orders\\Purchase.js",[],"D:\\previous\\src\\pages\\orders\\Invoice.js",["944"],"import React, { useEffect, useState, useCallback } from 'react'\nimport QRCode from 'react-qr-code'\nimport CommaNumber from 'comma-number'\nimport { useParams } from 'react-router'\nimport { formatDateWithAMPM } from '../../utils/Helpers'\nimport { PreLoader } from '../../components/loading/Index'\nimport Requests from '../../utils/Requests/Index'\n\nconst Show = () => {\n    const { id } = useParams()\n    const [data, setData] = useState({})\n    const [isLoading, setLoading] = useState(true)\n    const [header] = useState({\n        headers: { Authorization: \"Bearer \" + localStorage.getItem('token') }\n    })\n\n    // Fetch data\n    const fetchData = useCallback(async () => {\n        const response = await Requests.Order.Show(id, header)\n        if (response && response.data) setData(response.data)\n        setLoading(false)\n    }, [id, header])\n\n    useEffect(() => {\n        fetchData()\n    }, [id, header, fetchData])\n\n    const adminURL = \"https://admin.eazybest.com/dashboard/order/\" + data._id + \"/show\"\n    const clientURL = \"https://www.eazybest.com/account/order/\" + data._id\n\n    if (isLoading) return <PreLoader />\n\n    return (\n        <div className=\"order-show-container pb-4\">\n            {/* Order & purchase container */}\n            <div className=\"container-fluid\">\n                <div className=\"row print-hidden\">\n                    <div className=\"col-12 text-right py-2 px-4\">\n                        <button\n                            type=\"button\"\n                            className=\"btn shadow-none btn-primary px-4\"\n                            style={{ position: 'fixed', top: '80px', right: '20px', zIndex: '10' }}\n                            onClick={() => window.print()}>\n                            Print\n                        </button>\n                    </div>\n                </div>\n                <div id=\"printable\">\n\n                    {/* Eazybest copy */}\n                    <div className=\"row page-break\">\n                        <div className=\"col-12 col-padding\">\n                            <div className=\"card border-0 pt-2\">\n                                <div style={{ backgroundColor: '#5B9BD5' }} className=\"py-1 header\">\n                                    <h3 className=\"text-center border-0\" style={{ fontSize: '18px' }}>Eazybest Copy</h3>\n                                </div>\n                                <div className=\"row px-2\">\n                                    <div className=\"col-2 col-md-2\" style={{ borderRight: '2px solid #808080' }}>\n                                        <img src={'/logo.png'} alt=\"\" className=\"logo\" style={{ height: 'auto', width: '140px' }} />\n                                    </div>\n                                    <div className=\"col-6 col-md-7\" style={{ borderRight: '2px solid #808080' }}>\n                                        <p className=\"fs-16\" style={{ marginBottom: '0', fontSize: '18px' }}>Eazybest.com, #House 18, #Road 1, #Sector 5, Uttara, Dhaka</p>\n                                        <p className=\"fs-16\" style={{ marginBottom: '0', fontSize: '18px' }}>Phone: +8801324245070 , Email: support@eazybest.com</p>\n                                    </div>\n                                    <div className=\"col-4 col-md-3 text-right\">\n                                        <p className=\"fs-16\" style={{ marginBottom: '0', fontSize: '18px' }}>Invoice ID: <strong>{data.orderCode}</strong></p>\n                                        <p className=\"fs-16\" style={{ marginBottom: '0', fontSize: '18px' }}>{formatDateWithAMPM(data.createdAt)} (Admin)</p>\n                                    </div>\n                                </div>\n                                <div className=\"row mx-1\" style={{ borderTop: '4px solid #808080', marginTop: '20px' }}>\n                                    <div className=\"col-4 text-center py-2\" style={{ border: '4px solid #808080', borderTop: 0, marginBottom: '20px' }}>\n                                        <QRCode value={adminURL} />\n                                    </div>\n                                    <div className=\"col-4 pt-3 pb-4 pl-5\">\n                                        <p className=\"fs-16 mb-2\" style={{ marginBottom: '0', fontSize: '18px' }}>Order ID: <strong>EB-{data.orderCode}</strong></p>\n                                        <p className=\"fs-16\" style={{ marginBottom: '0', fontSize: '18px' }}>Order Placed: <strong>{formatDateWithAMPM(data.createdAt)}</strong></p>\n                                        <p className=\"fs-16\" style={{ marginBottom: '0', fontSize: '18px' }}>Payment Method: <strong>{data.paymentMethod}</strong></p>\n                                        <p className=\"fs-16\" style={{ marginBottom: '0', fontSize: '18px' }}>Payment Status: <strong>{data.paymentStatus}</strong></p>\n                                        <p className=\"fs-16\" style={{ marginBottom: '0', fontSize: '18px' }}>Total Products: <strong>{data.products && data.products.length ? data.products.length : 0}</strong></p>\n                                        {/* <p className=\"fs-16\" style={{ marginBottom: '0', fontSize: '18px' }}>Delivery: <strong>Eazybest Express</strong></p> */}\n                                        <p className=\"fs-16\" style={{ marginBottom: '0', fontSize: '18px' }}>Payment Medium: <strong>{data.transaction ? data.transaction.card_type : \"N/A\"}</strong></p>\n                                        {/* <p className=\"fs-16\" style={{ marginBottom: '0', fontSize: '18px' }}>Card no: <strong>{data.transaction ? data.transaction.card_no : \"N/A\"}</strong></p> */}\n                                        {/* <p className=\"fs-16\" style={{ marginBottom: '0', fontSize: '18px' }}>Currency: <strong>{data.transaction ? data.transaction.currency : \"N/A\"}</strong></p> */}\n                                        {/* <p className=\"fs-16\" style={{ marginBottom: '0', fontSize: '18px' }}>Transaction ID: <strong>{data.transaction ? data.transaction.bank_tran_id : \"N/A\"}</strong></p> */}\n                                    </div>\n                                    <div className=\"col-4 pt-3\">\n                                        <p className=\"fs-16 mb-2\" style={{ marginBottom: '0', fontSize: '18px' }}>Name: <strong>{data.name}</strong></p>\n                                        <p className=\"fs-16\" style={{ marginBottom: '0', fontSize: '18px' }}>Shipping Area: <strong>{data.shippingArea}</strong></p>\n                                        {/* <p className=\"fs-16\" style={{ marginBottom: '0', fontSize: '18px' }}>Post Code: <strong>{data.postCode}</strong></p> */}\n                                        <p className=\"fs-16\" style={{ marginBottom: '0', fontSize: '18px' }}>Post Office: <strong>{data.postOffice}, {data.postCode}.</strong></p>\n                                        <p className=\"fs-16\" style={{ marginBottom: '0', fontSize: '18px' }}>Upazila: <strong>{data.upazila} </strong></p>\n                                        <p className=\"fs-16\" style={{ marginBottom: '0', fontSize: '18px' }}>Delivery Address: <strong>{data.deliveryAddress}</strong></p>\n                                        <p className=\"fs-16\" style={{ marginBottom: '0', fontSize: '18px' }}>Phone: <strong>{data.phone}</strong></p>\n                                        <br />\n                                        {/* <p className=\"fs-16\" style={{ marginBottom: '0', fontSize: '18px' }}>Email: <strong>{data.email}</strong></p> */}\n                                        <p className=\"fs-20\" style={{ marginBottom: '0', fontSize: '18px' }}>Customer Payable: <strong>৳ {data.customerPayable}</strong></p>\n                                    </div>\n                                </div>\n                                <div className=\"row px-4\">\n                                    <div className=\"col-12\">\n                                        <table className=\"table table-bordered\">\n                                            <thead>\n                                                <tr>\n                                                    <th>SN</th>\n                                                    <th>Product Title</th>\n                                                    <th>Quantity</th>\n                                                    <th>Unit Price</th>\n                                                    <th>Discount</th>\n                                                    <th>Total Price</th>\n                                                </tr>\n                                            </thead>\n                                            {data.products && data.products.length ?\n                                                <tbody>\n                                                    {data.products && data.products.map((product, i) =>\n                                                        <tr key={i}>\n                                                            <td>{i + 1}</td>\n                                                            <td>\n                                                                {product.name} <br />\n                                                                <VariantsComponent items={product.variants} />\n                                                            </td>\n                                                            <td className=\"text-center\">{product.quantity ? CommaNumber(product.quantity) : null}</td>\n                                                            <td style={{ minWidth: 120 }}>৳ {product.salePrice ? CommaNumber(product.salePrice) : null}</td>\n                                                            <td>\n                                                                {product.discountType && product.discountType === 'Flat' ?\n                                                                    <p>৳ {CommaNumber(product.discountAmount)}</p>\n                                                                    : product.discountType && product.discountType === 'Percentage' ?\n                                                                        <p>{product.discountAmount}%</p>\n                                                                        : null}\n                                                            </td>\n                                                            <td><span className='pr-3' /> ৳ {product.salePrice && product.quantity ? CommaNumber(product.salePrice * product.quantity) : null}</td>\n                                                        </tr>\n                                                    )}\n                                                </tbody>\n                                                : null\n                                            }\n\n                                            <tbody>\n                                                <tr>\n                                                    {data.couponDiscount ?\n                                                        <td colSpan={4} rowSpan={5}>\n                                                            <p style={{ marginTop: '180px' }}>Customer's Sign</p>\n                                                        </td>\n                                                        : <td colSpan={4} rowSpan={4}>\n                                                            <p style={{ marginTop: '130px' }}>Customer's Sign</p>\n                                                        </td>\n                                                    }\n                                                    <td>Subtotal</td>\n                                                    <td style={{ minWidth: 150 }}><span className='pr-3' /> ৳ {data.totalWithOutTotal ? CommaNumber(data.totalWithOutTotal) : null}</td>\n                                                </tr>\n                                                <tr>\n                                                    <td>Shipping</td>\n                                                    <td style={{ minWidth: 150 }}><span className='pr-3' /> ৳ {data.deliveryCharge ? CommaNumber(data.deliveryCharge) : null}</td>\n                                                </tr>\n                                                {data.couponDiscount ?\n                                                    <tr>\n                                                        <td>Coupon Discount</td>\n                                                        <td style={{ minWidth: 150 }}><span>(-)</span>৳ {data.couponDiscount ? CommaNumber(data.couponDiscount) : null}</td>\n                                                    </tr>\n                                                    : null}\n                                                {data.campaign ?\n                                                    <tr>\n                                                        <td>Campaign Discount</td>\n                                                        <td style={{ minWidth: 150 }}><span>(-)</span>৳ {data.campaign ? CommaNumber(data.campaign) : null}</td>\n                                                    </tr>\n                                                    : null}\n\n                                                <tr>\n                                                    <td>Total</td>\n                                                    <td style={{ minWidth: 150 }}><span className='pr-3' /> ৳ {data.totalPrice ? CommaNumber(data.totalPrice) : null}</td>\n                                                </tr>\n                                                <tr>\n                                                    <td>Customer Payable</td>\n                                                    <td style={{ minWidth: 150 }}><span className='pr-3' /> ৳ {data.customerPayable ? CommaNumber(data.customerPayable) : 0}</td>\n                                                </tr>\n                                            </tbody>\n                                        </table>\n                                    </div>\n                                </div>\n                                <div style={{ backgroundColor: '#5B9BD5' }} className=\"py-1 header mb-3\">\n                                    <h3 className=\"border-0\" style={{ fontSize: '18px', float: 'left', width: '30%' }}>\"Making Life Easiest\"</h3>\n                                    <h3 className=\"border-0\" style={{ fontSize: '18px', float: 'left', width: '70%' }}>\"Happy Online Shopping\"</h3>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n\n\n                    {/* Customer copy */}\n                    <div className=\"row page-break\" style={{ marginTop: '50px' }}>\n                        <div className=\"col-12 col-padding\">\n                            <div className=\"card border-0 pt-2\">\n                                <div style={{ backgroundColor: '#5B9BD5' }} className=\"py-1 header\">\n                                    <h3 className=\"text-center border-0\" style={{ fontSize: '18px' }}>Customer Copy</h3>\n                                </div>\n                                <div className=\"row px-2\">\n                                    <div className=\"col-2 col-md-2\" style={{ borderRight: '2px solid #808080' }}>\n                                        <img src={'/logo.png'} alt=\"\" className=\"logo\" style={{ height: 'auto', width: '140px' }} />\n                                    </div>\n                                    <div className=\"col-6 col-md-7\" style={{ borderRight: '2px solid #808080' }}>\n                                        <p className=\"fs-16\" style={{ marginBottom: '0', fontSize: '18px' }}>Eazybest.com, #House 18, #Road 1, #Sector 5, Uttara, Dhaka</p>\n                                        <p className=\"fs-16\" style={{ marginBottom: '0', fontSize: '18px' }}>Phone: +8801324245070, Email: support@eazybest.com</p>\n                                    </div>\n                                    <div className=\"col-4 col-md-3 text-right\">\n                                        <p className=\"fs-16\" style={{ marginBottom: '0', fontSize: '18px' }}>Invoice ID: <strong>{data.orderCode}</strong></p>\n                                        <p className=\"fs-16\" style={{ marginBottom: '0', fontSize: '18px' }}>{formatDateWithAMPM(data.createdAt)} (Admin)</p>\n                                    </div>\n                                </div>\n                                <div className=\"row mx-1\" style={{ borderTop: '4px solid #808080', marginTop: '20px' }}>\n                                    <div className=\"col-4 text-center py-2\" style={{ border: '4px solid #808080', borderTop: 0, marginBottom: '20px' }}>\n                                        <QRCode value={adminURL} />\n                                    </div>\n                                    <div className=\"col-4 pt-3 pb-4 pl-5\">\n                                        <p className=\"fs-16 mb-2\" style={{ marginBottom: '0', fontSize: '18px' }}>Order ID: <strong>EB-{data.orderCode}</strong></p>\n                                        <p className=\"fs-16\" style={{ marginBottom: '0', fontSize: '18px' }}>Order Placed: <strong>{formatDateWithAMPM(data.createdAt)}</strong></p>\n                                        <p className=\"fs-16\" style={{ marginBottom: '0', fontSize: '18px' }}>Payment Method: <strong>{data.paymentMethod}</strong></p>\n                                        <p className=\"fs-16\" style={{ marginBottom: '0', fontSize: '18px' }}>Payment Status: <strong>{data.paymentStatus}</strong></p>\n                                        <p className=\"fs-16\" style={{ marginBottom: '0', fontSize: '18px' }}>Total Products: <strong>{data.products && data.products.length ? data.products.length : 0}</strong></p>\n                                        {/* <p className=\"fs-16\" style={{ marginBottom: '0', fontSize: '18px' }}>Delivery: <strong>Eazybest Express</strong></p> */}\n                                        <p className=\"fs-16\" style={{ marginBottom: '0', fontSize: '18px' }}>Payment Medium: <strong>{data.transaction ? data.transaction.card_type : \"N/A\"}</strong></p>\n                                        {/* <p className=\"fs-16\" style={{ marginBottom: '0', fontSize: '18px' }}>Card no: <strong>{data.transaction ? data.transaction.card_no : \"N/A\"}</strong></p> */}\n                                        {/* <p className=\"fs-16\" style={{ marginBottom: '0', fontSize: '18px' }}>Currency: <strong>{data.transaction ? data.transaction.currency : \"N/A\"}</strong></p> */}\n                                        {/* <p className=\"fs-16\" style={{ marginBottom: '0', fontSize: '18px' }}>Transaction ID: <strong>{data.transaction ? data.transaction.bank_tran_id : \"N/A\"}</strong></p> */}\n                                    </div>\n                                    <div className=\"col-4 pt-3\">\n                                        <p className=\"fs-16 mb-2\" style={{ marginBottom: '0', fontSize: '18px' }}>Name: <strong>{data.name}</strong></p>\n                                        <p className=\"fs-16\" style={{ marginBottom: '0', fontSize: '18px' }}>Shipping Area: <strong>{data.shippingArea}</strong></p>\n                                        {/* <p className=\"fs-16\" style={{ marginBottom: '0', fontSize: '18px' }}>Post Code: <strong>{data.postCode}</strong></p> */}\n                                        <p className=\"fs-16\" style={{ marginBottom: '0', fontSize: '18px' }}>Post Office: <strong>{data.postOffice}, {data.postCode}.</strong></p>\n                                        <p className=\"fs-16\" style={{ marginBottom: '0', fontSize: '18px' }}>Upazila: <strong>{data.upazila} </strong></p>\n                                        <p className=\"fs-16\" style={{ marginBottom: '0', fontSize: '18px' }}>Delivery Address: <strong>{data.deliveryAddress}</strong></p>\n                                        <p className=\"fs-16\" style={{ marginBottom: '0', fontSize: '18px' }}>Phone: <strong>{data.phone}</strong></p>\n                                        <br />\n                                        {/* <p className=\"fs-16\" style={{ marginBottom: '0', fontSize: '18px' }}>Email: <strong>{data.email}</strong></p> */}\n                                        <p className=\"fs-20\" style={{ marginBottom: '0', fontSize: '18px' }}>Customer Payable: <strong>৳ {data.customerPayable}</strong></p>\n                                    </div>\n                                </div>\n                                <div className=\"row px-4\">\n                                    <div className=\"col-12\">\n                                        <table className=\"table table-bordered\">\n                                            <thead>\n                                                <tr>\n                                                    <th>SN</th>\n                                                    <th>Product Title</th>\n                                                    <th>Quantity</th>\n                                                    <th>Unit Price</th>\n                                                    <th>Discount</th>\n                                                    <th>Total Price</th>\n                                                </tr>\n                                            </thead>\n                                            {data.products && data.products.length ?\n                                                <tbody>\n                                                    {data.products && data.products.map((product, i) =>\n                                                        <tr key={i}>\n                                                            <td>{i + 1}</td>\n                                                            <td>\n                                                                {product.name} <br />\n                                                                <VariantsComponent items={product.variants} />\n                                                            </td>\n                                                            <td className=\"text-center\">{product.quantity ? CommaNumber(product.quantity) : null}</td>\n                                                            <td style={{ minWidth: 120 }}>৳ {product.salePrice ? CommaNumber(product.salePrice) : null}</td>\n                                                            <td>\n                                                                {product.discountType && product.discountType === 'Flat' ?\n                                                                    <p>৳ {CommaNumber(product.discountAmount)}</p>\n                                                                    : product.discountType && product.discountType === 'Percentage' ?\n                                                                        <p>{product.discountAmount}%</p>\n                                                                        : null}\n                                                            </td>\n                                                            <td><span className='pr-3' /> ৳ {product.salePrice && product.quantity ? CommaNumber(product.salePrice * product.quantity) : null}</td>\n                                                            {/* <td style={{ minWidth: 150 }}><span className='pr-3' /> ৳ {product.subTotal ? CommaNumber(product.subTotal) : null}</td> */}\n                                                        </tr>\n                                                    )}\n                                                </tbody>\n                                                : null\n                                            }\n\n                                            <tbody>\n                                                <tr>\n                                                    {data.couponDiscount ?\n                                                        <td colSpan={4} rowSpan={5}>\n                                                            <p style={{ marginTop: '180px' }}>Customer's Sign</p>\n                                                        </td>\n                                                        : <td colSpan={4} rowSpan={4}>\n                                                            <p style={{ marginTop: '130px' }}>Customer's Sign</p>\n                                                        </td>\n                                                    }\n                                                    <td>Subtotal</td>\n                                                    <td style={{ minWidth: 150 }}><span className='pr-3' /> ৳ {data.totalWithOutTotal ? CommaNumber(data.totalWithOutTotal) : null}</td>\n                                                </tr>\n                                                <tr>\n                                                    <td>Shipping</td>\n                                                    <td style={{ minWidth: 150 }}><span className='pr-3' /> ৳ {data.deliveryCharge ? CommaNumber(data.deliveryCharge) : null}</td>\n                                                </tr>\n                                                {data.couponDiscount ?\n                                                    <tr>\n                                                        <td>Coupon Discount</td>\n                                                        <td style={{ minWidth: 150 }}><span>(-)</span>৳ {data.couponDiscount ? CommaNumber(data.couponDiscount) : null}</td>\n                                                    </tr>\n                                                    : null}\n                                                {data.campaign ?\n                                                    <tr>\n                                                        <td>Campaign Discount</td>\n                                                        <td style={{ minWidth: 150 }}><span>(-)</span>৳ {data.campaign ? CommaNumber(data.campaign) : null}</td>\n                                                    </tr>\n                                                    : null}\n\n                                                <tr>\n                                                    <td>Total</td>\n                                                    <td style={{ minWidth: 150 }}><span className='pr-3' /> ৳ {data.totalPrice ? CommaNumber(data.totalPrice) : null}</td>\n                                                </tr>\n                                                <tr>\n                                                    <td>Customer Payable</td>\n                                                    <td style={{ minWidth: 150 }}><span className='pr-3' /> ৳ {data.customerPayable ? CommaNumber(data.customerPayable) : 0}</td>\n                                                </tr>\n                                            </tbody>\n                                        </table>\n                                    </div>\n                                </div>\n                                <div style={{ backgroundColor: '#5B9BD5' }} className=\"py-1 header mb-3\">\n                                    <h3 className=\"border-0\" style={{ fontSize: '18px', float: 'left', width: '30%' }}>\"Making Life Easiest\"</h3>\n                                    <h3 className=\"border-0\" style={{ fontSize: '18px', float: 'left', width: '70%' }}>\"Happy Online Shopping\"</h3>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n\n            </div>\n        </div>\n    );\n}\n\nexport default Show;\n\nconst VariantsComponent = ({ items }) => {\n    return (\n        <div className=\"materials-container mt-2\">\n            {items && items.map((item, i) =>\n                <div className=\"d-flex\" key={i}>\n                    <div className=\"flex-fill\" style={{ width: 100 }}><p className=\"text-capitalize text-info mb-0\"><span className=\"text-dark font-weight-bolder\">{item.title}:</span> {item.value}</p></div>\n                    <div className=\"flex-fill\" style={{ width: 100 }}><p className=\"mb-0\"><span className=\"font-weight-bolder\">SKU:</span> {item.sku}</p></div>\n                </div>\n            )}\n        </div>\n    )\n}\n","D:\\previous\\src\\pages\\shipping\\Index.js",["945","946"],"import React, { useCallback, useEffect, useState } from 'react'\nimport Icon from 'react-icons-kit'\nimport { Link, useHistory } from 'react-router-dom'\nimport { edit2, plus, trash2, x } from 'react-icons-kit/feather'\nimport { CustomButton } from '../../components/button'\nimport { DeleteModal } from '../../components/modal/Delete'\nimport { DataTable } from '../../components/table/Index'\nimport { formatDateWithAMPM } from '../../utils/Helpers'\nimport { Container } from '../../components/container'\nimport { Card } from '../../components/card/Index'\nimport { SingleSelect } from '../../components/select'\nimport { useQuery } from '../../components/query/Index'\n\nimport Requests from '../../utils/Requests/Index'\n\nconst Index = () => {\n    const [isLoading, setLoading] = useState(true)\n    const [limit, setLimit] = useState(10)\n    const history = useHistory()\n    const [totalItems, setTotalItems] = useState(0)\n    const queryParams = useQuery()\n    const [data, setData] = useState([])\n    const [closeFilter, setCloseFilter] = useState(false)\n    const [isDelete, setDelete] = useState({ value: null, show: false, loading: false })\n    const [header] = useState({\n        headers: { Authorization: \"Bearer \" + localStorage.getItem('token') }\n    })\n\n    // Fetch data\n    const fetchData = useCallback(async (query) => {\n        setLoading(true)\n        const response = await Requests.Services.Shipping.MainShipping.Index(query, header)\n\n        if (response) {\n            setData(response.data)\n            setTotalItems(response.pagination ? response.pagination.items : 0)\n        }\n        setLoading(false)\n    }, [header])\n\n\n    // handle page change\n    const handlePageChange = page => fetchData(page)\n\n    // handle limit change\n    const handleLimitChange = async (newLimit, page) => {\n        setLoading(true)\n        const response = await Requests.Services.Shipping.MainShipping.Index(page, newLimit, header)\n\n        setData(response.data)\n        setLimit(newLimit)\n        setLoading(false)\n    }\n\n\n    useEffect(() => {\n        if (queryParams) {\n            let params = { ...queryParams }\n            params.page = queryParams.page || 1\n            params.limit = queryParams.limit || 10\n            const queryString = Object.keys(params).map(key => `${key}=${params[key]}`).join('&')\n            fetchData(queryString)\n            setCloseFilter(true)\n        }\n    }, [\n        queryParams.limit,\n        queryParams.page,\n        queryParams.assign_to,\n        queryParams.discount_type,\n        queryParams.start_from,\n        queryParams.end_to,\n        fetchData\n    ])\n\n    /* handle filter by URL params */\n    const handleFilterByUrl = (field, value) => {\n        let item = { [field]: value }\n        let params = {\n            ...queryParams,\n            ...item,\n            page: queryParams.page || 1,\n            limit: queryParams.limit || 10\n        }\n        const queryString = Object.keys(params).map(key => `${key}=${params[key]}`).join('&')\n        history.replace(`/dashboard/shipping?${queryString}`)\n        setCloseFilter(true)\n    }\n\n    // Handle delete\n    const handleDelete = async () => {\n        setDelete({ ...isDelete, loading: true })\n\n        await Requests.Services.Shipping.MainShipping.Delete(isDelete.value._id, header)\n        fetchData(1)\n        setDelete({ ...isDelete, show: false, loading: false })\n    }\n\n    const columns = [\n        {\n            name: 'Title',\n            selector: row => row.title || \"N/A\",\n            sortable: true\n        },\n        {\n            name: 'Assign To',\n            selector: row => row.assign_to || \"N/A\",\n            sortable: true\n        },\n        {\n            name: 'Type',\n            selector: row => row.discount_type || \"N/A\",\n            sortable: true\n        },\n        {\n            name: 'Start From',\n            selector: row => formatDateWithAMPM(row.start_from) || \"N/A\",\n            sortable: true\n        },\n        {\n            name: 'End To',\n            selector: row => formatDateWithAMPM(row.end_to) || \"N/A\",\n            sortable: true\n        },\n        {\n            name: 'Action',\n            grow: 0,\n            minWidth: '150px',\n            cell: row =>\n                <div>\n                    {/* <Link to={`/dashboard/shipping/${row._id}/show`}>\n                        <CustomButton\n                            style={{ padding: \"6px 10px\" }}\n                            className=\"btn-primary rounded-circle border-0\"\n                        ><Icon icon={eye} size={16} />\n                        </CustomButton>\n                    </Link> */}\n\n                    <Link to={`/dashboard/shipping/${row._id}/edit`}>\n                        <CustomButton\n                            style={{ padding: \"6px 10px\" }}\n                            className=\"btn-success rounded-circle border-0 mx-1\"\n                        ><Icon icon={edit2} size={16} />\n                        </CustomButton>\n                    </Link>\n\n                    <CustomButton\n                        style={{ padding: \"6px 10px\" }}\n                        className=\"btn-danger rounded-circle border-0\"\n                        onClick={() => setDelete({ value: row, show: true })}\n                    ><Icon icon={trash2} size={16} />\n                    </CustomButton>\n                </div>\n        }\n    ]\n\n    return (\n        <div className=\"pb-4\">\n            <Container.Fluid>\n                <Container.Row>\n                    <Container.Column className=\"col-padding\">\n                        <Card.Simple className=\"border-0\">\n                            <Card.Header className=\"bg-white border-0 p-3 p-lg-4\">\n\n                                {/* title container */}\n                                <div className=\"d-flex\">\n                                    <div><h6 className=\"mb-0\">Shipping List</h6></div>\n                                    <div className=\"ml-auto\">\n                                        <Link to=\"/dashboard/shipping/create\">\n                                            <CustomButton className=\"btn-primary border-0 rounded-circle circle__padding\">\n                                                <Icon icon={plus} size={22} />\n                                            </CustomButton>\n                                        </Link>\n\n                                        {closeFilter ?\n                                            <CustomButton\n                                                className=\"btn-danger border-0 rounded-circle circle__padding ml-1\"\n                                                onClick={() => {\n                                                    setCloseFilter(false)\n                                                    history.push(`/dashboard/shipping`)\n                                                }}\n                                            >\n                                                <Icon icon={x} size={22} />\n                                            </CustomButton>\n                                            : null\n                                        }\n                                    </div>\n                                </div>\n\n                                {/* Filter items */}\n                                <Container.Row className=\"pt-2 px-2\">\n\n                                    {/* Assign To */}\n                                    <Container.Column className=\"col-sm-3 px-1 mb-2\">\n                                        <SingleSelect\n                                            placeholder=\"Assign To\"\n                                            borderRadius={25}\n                                            options={[\n                                                { label: \"Anything\", value: \"Anything\" },\n                                                { label: \"Brand\", value: \"Brand\" },\n                                                { label: \"Category\", value: \"Category\" },\n                                                { label: \"Sub-category\", value: \"Sub-category\" },\n                                                { label: \"Leaf-category\", value: \"Leaf-category\" },\n                                                { label: \"Vendor\", value: \"Vendor\" },\n                                                { label: \"Product\", value: \"Product\" },\n                                                { label: \"Customer\", value: \"Customer\" }\n                                            ]}\n                                            value={event => handleFilterByUrl(\"assign_to\", event.value)}\n                                        />\n                                    </Container.Column>\n\n                                    {/* Type */}\n                                    <Container.Column className=\"col-sm-3 px-1 mb-2\">\n                                        <SingleSelect\n                                            placeholder=\"Type\"\n                                            borderRadius={25}\n                                            options={[\n                                                { label: \"Flat\", value: \"Flat\" },\n                                                { label: \"Percentage\", value: \"Percentage\" }\n                                            ]}\n                                            value={event => handleFilterByUrl(\"discount_type\", event.value)}\n                                        />\n                                    </Container.Column>\n\n                                    {/* Date range filter */}\n                                    <Container.Column className=\"col-sm-3 px-1 mb-2\">\n                                        <div className=\"form-group mb-0\">\n                                            <input\n                                                type=\"date\"\n                                                className=\"form-control shadow-none\"\n                                                style={{ borderRadius: 25, fontSize: 14, minHeight: 42 }}\n                                                onChange={event => handleFilterByUrl(\"start_from\", event.target.value)}\n                                            />\n                                        </div>\n                                    </Container.Column>\n                                    <Container.Column className=\"col-sm-3 px-1 mb-2\">\n                                        <div className=\"form-group mb-0\">\n                                            <input\n                                                type=\"date\"\n                                                className=\"form-control shadow-none\"\n                                                style={{ borderRadius: 25, fontSize: 14, minHeight: 42 }}\n                                                onChange={event => handleFilterByUrl(\"end_to\", event.target.value)}\n                                            />\n                                        </div>\n                                    </Container.Column>\n\n                                    {/* <Container.Column className=\"col-xl-8 px-1 mb-2\">\n                                        <RangeFilter\n                                            loading={isRangeFilterLoading}\n                                            filter={handleRangeFilter}\n                                        />\n                                    </Container.Column> */}\n                                </Container.Row>\n                            </Card.Header>\n                            <Card.Body className=\"p-0\">\n                                <DataTable\n                                    fixedHeader\n                                    fixedHeaderScrollHeight=\"580px\"\n                                    columns={columns}\n                                    data={data}\n                                    loading={isLoading}\n                                    totalRows={totalItems}\n                                    pagination={true}\n                                    paginationServer={true}\n                                    handlePerRowsChange={handleLimitChange}\n                                    handlePageChange={handlePageChange}\n                                />\n                            </Card.Body>\n                        </Card.Simple>\n                    </Container.Column>\n                </Container.Row>\n            </Container.Fluid>\n\n            {/* Delete confirmation */}\n            <DeleteModal\n                show={isDelete.show}\n                loading={isDelete.loading}\n                message={<h6>Want to delete this shipping ?</h6>}\n                onHide={() => setDelete({ value: null, show: false, loading: false })}\n                doDelete={handleDelete}\n            />\n        </div>\n    );\n}\n\nexport default Index;\n","D:\\previous\\src\\pages\\shipping\\Create.js",[],"D:\\previous\\src\\pages\\shipping\\Edit.js",[],"D:\\previous\\src\\pages\\shipping\\Show.js",[],"D:\\previous\\src\\pages\\shipping\\area\\Index.js",[],"D:\\previous\\src\\pages\\shipping\\area\\Create.js",[],"D:\\previous\\src\\pages\\shipping\\area\\Edit.js",[],"D:\\previous\\src\\pages\\shipping\\district\\Index.js",[],"D:\\previous\\src\\pages\\shipping\\district\\Create.js",[],"D:\\previous\\src\\pages\\shipping\\district\\Edit.js",[],"D:\\previous\\src\\pages\\shipping\\division\\Index.js",[],"D:\\previous\\src\\pages\\shipping\\division\\Create.js",[],"D:\\previous\\src\\pages\\shipping\\division\\Edit.js",[],"D:\\previous\\src\\pages\\refund\\Index.js",[],"D:\\previous\\src\\pages\\refund\\Show.js",[],"D:\\previous\\src\\pages\\admin\\Index.js",[],"D:\\previous\\src\\pages\\admin\\Edit.js",[],"D:\\previous\\src\\pages\\admin\\Create.js",[],"D:\\previous\\src\\pages\\customer\\Index.js",[],"D:\\previous\\src\\pages\\customer\\Edit.js",[],"D:\\previous\\src\\pages\\customer\\Create.js",[],"D:\\previous\\src\\components\\navbar\\Index.js",[],"D:\\previous\\src\\pages\\profile\\Index.js",[],"D:\\previous\\src\\utils\\Helpers.js",[],"D:\\previous\\src\\utils\\Requests\\Index.js",[],"D:\\previous\\src\\components\\loading\\Index.js",[],"D:\\previous\\src\\components\\exportCSV\\Index.js",[],"D:\\previous\\src\\components\\card\\Index.js",[],"D:\\previous\\src\\components\\table\\Index.js",[],"D:\\previous\\src\\components\\rangeFilter\\Index.js",[],"D:\\previous\\src\\components\\form\\DivisionForm.js",[],"D:\\previous\\src\\components\\form\\DistrictForm.js",["947"],"import React, { useCallback, useEffect, useState } from 'react'\nimport { useForm } from 'react-hook-form'\nimport { FormGroup } from '../formGroup'\nimport { Container } from '../container'\nimport { Text } from '../text'\nimport { SingleSelect } from '../select'\nimport Requests from '../../utils/Requests/Index'\n\nexport const DistrictForm = (props) => {\n  const { register, handleSubmit, clearErrors, setError, errors } = useForm()\n  const districtData = props.districtData ? props.districtData : {}\n  const [division, setDivision] = useState([])\n  const [selectedDivision, setSelectedDivision] = useState(null)\n  const [header] = useState({\n    headers: { Authorization: \"Bearer \" + localStorage.getItem('token') }\n  })\n\n  // Fetch division data\n  const fetchData = useCallback(async (page) => {\n    try {\n      const items = []\n      const response = await Requests.Services.Shipping.Division.Index(page, 10, header)\n      if (response) {\n        if (response.data && response.data.length > 0) {\n          for (let i = 0; i < response.data.length; i++) {\n            const element = response.data[i]\n            items.push({\n              label: element.name,\n              value: element._id,\n            })\n          }\n        }\n      }\n      setDivision(items)\n    } catch (error) {\n      if (error) console.log(error);\n    }\n  }, [header])\n\n  useEffect(() => {\n    if (districtData && districtData.division) {\n      setSelectedDivision(districtData.division._id)\n    }\n  }, [districtData])\n\n  useEffect(() => {\n    fetchData(1)\n  }, [header, fetchData])\n\n  // District form submit\n  const onSubmit = async data => {\n    let is_error = false\n\n    if (!selectedDivision) {\n      setError(\"selectedDivision\", {\n        type: \"manual\",\n        message: \"Division is required.\"\n      })\n      is_error = true\n    }\n\n    if (is_error) return\n\n\n    const formData = {\n      ...data,\n      division: selectedDivision\n    }\n    // console.log(formData);\n    props.submit(formData)\n  }\n\n  return (\n    <form onSubmit={handleSubmit(onSubmit)}>\n      <Container.Row>\n\n        {/* Name */}\n        <Container.Column>\n          <FormGroup>\n            {errors.name && errors.name.message ?\n              <Text className=\"text-danger fs-13 mb-0\">{errors.name && errors.name.message}</Text>\n              : <Text className=\"fs-13 mb-0\">District name (EN) <span className=\"text-danger\">*</span></Text>}\n            <input\n              type=\"text\"\n              name=\"name\"\n              className={errors.name ? \"form-control shadow-none error\" : \"form-control shadow-none\"}\n              placeholder=\"Enter district english name\"\n              defaultValue={districtData ? districtData.name : null}\n              ref={register({ required: \"District name (EN) is required\" })}\n            />\n          </FormGroup>\n        </Container.Column>\n\n        {/* Bengali name */}\n        <Container.Column>\n          <FormGroup>\n            {errors.bn_name && errors.bn_name.message ?\n              <Text className=\"text-danger fs-13 mb-0\">{errors.bn_name && errors.bn_name.message}</Text>\n              : <Text className=\"fs-13 mb-0\">District name (BN) <span className=\"text-danger\">*</span></Text>}\n            <input\n              type=\"text\"\n              name='bn_name'\n              className={errors.bn_name ? \"form-control shadow-none error\" : \"form-control shadow-none\"}\n              placeholder=\"Enter district bengali name\"\n              defaultValue={districtData ? districtData.bn_name : null}\n              ref={register({ required: \"District name (BN) is required\" })}\n            />\n          </FormGroup>\n        </Container.Column>\n\n        {/* Division */}\n        <Container.Column >\n          <FormGroup>\n            {errors.selectedDivision && errors.selectedDivision.message ?\n              <Text className=\"text-danger fs-13 mb-0\">{errors.selectedDivision && errors.selectedDivision.message}</Text>\n              : <Text className=\"fs-13 mb-0\">Division <span className=\"text-danger\">*</span></Text>}\n            <SingleSelect\n              placeholder=\" division\"\n              deafult={districtData && districtData.division ?\n                {\n                  value: districtData.division._id ? districtData.division._id : null,\n                  label: districtData.division.name ? districtData.division.name : null\n                } : null}\n              options={division}\n              value={event => {\n                setSelectedDivision(event.value)\n                clearErrors(\"selectedDivision\")\n              }}\n            />\n          </FormGroup>\n        </Container.Column>\n\n      </Container.Row>\n\n      {/* Submit button */}\n      <div className=\"text-right\">\n        <button\n          type=\"submit\"\n          className=\"btn shadow-none text-uppercase\"\n          disabled={props.loading}\n        ><Text className=\"fs-14 mb-0\">\n            {props.loading\n              ? props.update\n                ? \"Updating ...\"\n                : \"Submitting ...\"\n              : props.update\n                ? \"Update\"\n                : \"Submit\"}\n          </Text></button>\n      </div>\n    </form>\n  );\n}\n","D:\\previous\\src\\components\\modal\\Delete.js",[],"D:\\previous\\src\\components\\form\\AreaForm.js",[],"D:\\previous\\src\\components\\table\\CouponShow.js",[],"D:\\previous\\src\\components\\query\\Index.js",[],"D:\\previous\\src\\components\\form\\order\\PaymentMethodForm.js",[],"D:\\previous\\src\\components\\modal\\profile\\ChangePassword.js",[],"D:\\previous\\src\\components\\modal\\profile\\Index.js",[],"D:\\previous\\src\\components\\container\\index.js",[],"D:\\previous\\src\\components\\select\\index.js",[],"D:\\previous\\src\\components\\text\\index.js",[],"D:\\previous\\src\\utils\\Requests\\Role.js",[],"D:\\previous\\src\\utils\\Requests\\Shipping.js",[],"D:\\previous\\src\\utils\\Requests\\Options.js",[],"D:\\previous\\src\\utils\\Requests\\VendorPurchaseOrder.js",[],"D:\\previous\\src\\components\\search\\Index.js",[],"D:\\previous\\src\\utils\\Requests\\Sales.js",[],"D:\\previous\\src\\utils\\Requests\\PerformedCategory.js",[],"D:\\previous\\src\\utils\\Requests\\BuyerPurchase.js",[],"D:\\previous\\src\\utils\\Requests\\BestSale.js",[],"D:\\previous\\src\\utils\\Requests\\Reports.js",[],"D:\\previous\\src\\utils\\Requests\\Buyer.js",[],"D:\\previous\\src\\utils\\Requests\\Deactivated.js",[],"D:\\previous\\src\\utils\\Requests\\Refund.js",[],"D:\\previous\\src\\utils\\Requests\\Profile.js",[],"D:\\previous\\src\\utils\\Requests\\University.js",[],"D:\\previous\\src\\utils\\Requests\\RatingReview.js",[],"D:\\previous\\src\\utils\\Requests\\Subscriber.js",[],"D:\\previous\\src\\utils\\Requests\\Customer.js",[],"D:\\previous\\src\\utils\\Requests\\Admin.js",[],"D:\\previous\\src\\utils\\Requests\\Order.js",[],"D:\\previous\\src\\utils\\Requests\\Coupon.js",[],"D:\\previous\\src\\utils\\Requests\\Campaign.js",[],"D:\\previous\\src\\utils\\Requests\\PendingProduct.js",[],"D:\\previous\\src\\utils\\Requests\\Product.js",[],"D:\\previous\\src\\utils\\Requests\\Category.js",[],"D:\\previous\\src\\utils\\Requests\\Vendor.js",[],"D:\\previous\\src\\utils\\Requests\\Brand.js",[],"D:\\previous\\src\\utils\\Requests\\Banner.js",[],"D:\\previous\\src\\utils\\Requests\\Addsense.js",[],"D:\\previous\\src\\utils\\Requests\\Dashboard.js",[],"D:\\previous\\src\\utils\\Requests\\Auth.js",[],"D:\\previous\\src\\components\\form\\shipping\\index.js",[],"D:\\previous\\src\\utils\\Requests\\services\\index.js",[],"D:\\previous\\src\\components\\formGroup\\index.js",[],"D:\\previous\\src\\components\\form\\order\\CouponApply.js",[],"D:\\previous\\src\\components\\form\\order\\Customer.js",[],"D:\\previous\\src\\components\\modal\\Comments.js",[],"D:\\previous\\src\\utils\\Requests\\Error.js",[],"D:\\previous\\src\\utils\\api.js",[],"D:\\previous\\src\\utils\\location\\districts.js",[],"D:\\previous\\src\\components\\modal\\deliveryInfo\\Index.js",[],"D:\\previous\\src\\components\\datePickerNew\\Index.js",[],"D:\\previous\\src\\components\\modal\\OrderStatus.js",[],"D:\\previous\\src\\components\\modal\\Confirmation.js",[],"D:\\previous\\src\\utils\\districts.js",[],"D:\\previous\\src\\components\\modal\\product\\Index.js",[],"D:\\previous\\src\\components\\datepicker\\Index.js",[],"D:\\previous\\src\\components\\table\\ProductMaterial.js",[],"D:\\previous\\src\\components\\501\\NetworkError.js",[],"D:\\previous\\src\\utils\\location\\postcodes.js",[],"D:\\previous\\src\\components\\204\\NoContent.js",[],"D:\\previous\\src\\components\\form\\product\\DescriptionEdit.js",[],"D:\\previous\\src\\components\\form\\product\\Emi.js",[],"D:\\previous\\src\\components\\form\\product\\Warranty.js",[],"D:\\previous\\src\\components\\form\\product\\ReturnPolicy.js",[],"D:\\previous\\src\\components\\form\\product\\AdditionalEdit.js",[],"D:\\previous\\src\\components\\form\\product\\MaterialEdit.js",[],"D:\\previous\\src\\components\\form\\product\\Description.js",[],"D:\\previous\\src\\components\\form\\product\\Additional.js",[],"D:\\previous\\src\\components\\fileUploader\\Index.js",[],"D:\\previous\\src\\components\\form\\campaign\\index.js",[],"D:\\previous\\src\\components\\toastify\\index.js",[],"D:\\previous\\src\\components\\form\\product\\Material.js",[],"D:\\previous\\src\\utils\\Requests\\services\\campaign-service\\index.js",[],"D:\\previous\\src\\utils\\Requests\\services\\shipping-service\\index.js",[],"D:\\previous\\src\\utils\\Requests\\services\\shipping-service\\division.js",[],"D:\\previous\\src\\utils\\Requests\\services\\shipping-service\\shipping.js",[],"D:\\previous\\src\\utils\\Requests\\services\\shipping-service\\district.js",[],"D:\\previous\\src\\utils\\Requests\\services\\shipping-service\\area.js",[],"D:\\previous\\src\\components\\table\\Category.js",[],"D:\\previous\\src\\components\\window\\windowSize.js",[],"D:\\previous\\src\\components\\image\\imageCard.js",[],"D:\\previous\\src\\components\\shortName\\Index.js",[],"D:\\previous\\src\\components\\chart\\OrderByDay.js",[],"D:\\previous\\src\\components\\chart\\OrderCount.js",[],"D:\\previous\\src\\components\\chart\\BusketSize.js",[],"D:\\previous\\src\\components\\chart\\Grouped.js",[],"D:\\previous\\src\\components\\chart\\Index.js",[],"D:\\previous\\src\\pages\\role\\Edit.js",[],"D:\\previous\\src\\pages\\role\\Create.js",[],"D:\\previous\\src\\pages\\role\\Index.js",[],"D:\\previous\\src\\pages\\university\\post\\Show.js",[],"D:\\previous\\src\\pages\\university\\post\\Edit.js",[],"D:\\previous\\src\\pages\\university\\post\\Create.js",[],"D:\\previous\\src\\pages\\university\\post\\Index.js",[],"D:\\previous\\src\\pages\\university\\category\\Edit.js",[],"D:\\previous\\src\\pages\\university\\category\\Create.js",[],"D:\\previous\\src\\pages\\university\\category\\Index.js",[],"D:\\previous\\src\\pages\\reports\\storeCredit\\Index.js",[],"D:\\previous\\src\\pages\\reports\\bestCategory\\Index.js",[],"D:\\previous\\src\\pages\\reports\\buyerPurchase\\Index.js",[],"D:\\previous\\src\\pages\\reports\\bestSales\\Index.js",[],"D:\\previous\\src\\pages\\reports\\vedorPo\\Show.js",["948"],"import React, { useEffect, useState, useCallback } from 'react'\nimport commaNumber from 'comma-number'\nimport converter from 'number-to-words'\nimport randomNumber from 'random-number'\nimport { useQuery } from '../../../components/query/Index'\nimport { PreLoader } from '../../../components/loading/Index'\nimport { CustomButton } from '../../../components/button'\nimport { formatDateWithAMPM } from '../../../utils/Helpers'\nimport { Images } from '../../../utils/Images'\n\nimport Requests from '../../../utils/Requests/Index'\n\n\nconst Show = () => {\n    const dateNow = new Date()\n    const queryParams = useQuery()\n    const [data, setData] = useState({})\n    const [isLoading, setLoading] = useState(true)\n    const [randCode, setRandCode] = useState(null)\n    const [header] = useState({\n        headers: { Authorization: \"Bearer \" + localStorage.getItem('token') }\n    })\n\n    // Fetch data\n    const fetchData = useCallback(async (query) => {\n        try {\n            const response = await Requests.VendorPurchase.Filter(query, header)\n            if (response) setData(response.data.data)\n            setLoading(false)\n        } catch (error) {\n            if (error) {\n                setLoading(false)\n            }\n        }\n    }, [header])\n\n\n    useEffect(() => {\n        if (queryParams) {\n            let params = { ...queryParams }\n            const queryString = Object.keys(params).map(key => `${key}=${params[key]}`).join('&')\n            fetchData(queryString)\n        }\n        setRandCode(randomNumber({ min: 10000, max: 1000000, integer: true }))\n    }, [header, fetchData])\n\n\n    // Print invoice\n    const print = event => {\n        event.preventDefault()\n        window.print()\n    }\n\n    if (isLoading) return <PreLoader />\n\n    return (\n        <div className=\"order-show-container pb-4\">\n\n            {!isLoading && data.products && !data.products.length ?\n                <div className=\"text-center mt-4 mt-lg-5\">\n                    <p>No results found!!!</p>\n                </div>\n                : null\n            }\n\n            {!isLoading && data.products && data.products.length ?\n                <div className=\"container-fluid\">\n                    <div className=\"row print-hidden\">\n                        <div className=\"col-12 text-right py-2 px-4\">\n                            <CustomButton\n                                className=\"btn-primary border-0 px-4\"\n                                style={{ position: 'fixed', top: '80px', right: '20px', zIndex: '10' }}\n                                onClick={print}\n                            >Print</CustomButton>\n                        </div>\n                    </div>\n                    <div id=\"printable\">\n                        {/* Customer copy */}\n                        <div className=\"row page-break\">\n                            <div className=\"col-12 col-padding\">\n                                <div className=\"card border-0\">\n                                    <img src={Images.Logo} width=\"250\" style={{ paddingTop: '40px' }} className=\"m-auto\" alt=\"...\" />\n                                    <h1 className=\"text-center\" style={{ marginBottom: '15px', fontSize: '25px' }} >Purchase Order</h1>\n                                    <p className=\"text-center\" style={{ marginBottom: '20px', fontSize: '14px' }}>(Vendor Copy)</p>\n\n                                    <div className=\"pl-5 ml-4\">\n                                        <p style={{ marginBottom: 5, fontSize: 14 }}><b>TIN : 623765963510, <span className=\"ml-1\">BIN : 004296225-0101</span></b></p>\n                                    </div>\n                                    <table className=\"custom-table\">\n                                        <tbody>\n                                            <tr>\n                                                <th style={{ textAlign: 'left', fontSize: '14px', width: '50%' }}>Vendor Reference</th>\n                                                <th style={{ textAlign: 'left', fontSize: '14px', width: '50%' }}>Order Reference</th>\n                                            </tr>\n                                            <tr>\n                                                <td>\n                                                    <p>Name: {data.vendor.name}</p>\n                                                    <p>Address: {data.vendor.address}</p>\n                                                    <p>Contact Person: {data.vendor.contactPersonOneName}</p>\n                                                    <p>Contact No: {data.vendor.contactPersonOnePhone}</p>\n                                                </td>\n                                                <td>\n                                                    <p>Purchase Order: EB-{randCode}</p>\n                                                    <p>Issue Date: {formatDateWithAMPM(dateNow.toString())}</p>\n                                                </td>\n                                            </tr>\n                                        </tbody>\n                                    </table>\n                                    <table className=\"custom-table\">\n                                        <thead>\n                                            <tr>\n                                                <th>SL</th>\n                                                <th>Product Photo</th>\n                                                <th>Product Name</th>\n                                                <th className=\"text-center\">Unit</th>\n                                                <th>Price</th>\n                                                <th>Total Price</th>\n                                            </tr>\n                                        </thead>\n\n                                        {/* Ordered products */}\n                                        {data.products.length ?\n                                            <tbody>\n                                                {data.products && data.products.map((product, i) =>\n                                                    <tr key={i}>\n                                                        <td className=\"text-center\" style={{ width: 20 }}><p>{i + 1}</p></td>\n                                                        <td className=\"text-center\" style={{ width: 140 }}>\n                                                            <img src={product.thumbnail} className=\"img-fluid\" style={{ width: 60, height: 'auto' }} alt=\"...\" />\n                                                        </td>\n                                                        <td>\n                                                            <p>{product.name}</p>\n                                                            <VariantsComponent items={product.variants} />\n                                                        </td>\n                                                        <td className=\"text-center\"><p>{product.quantity}</p></td>\n                                                        <td><p>{product.purchasePrice} TK</p></td>\n                                                        <td><p>{parseInt(product.purchasePrice) * parseInt(product.quantity)} TK</p></td>\n                                                    </tr>\n                                                )}\n                                            </tbody>\n                                            : null}\n\n                                        <tbody>\n                                            <tr>\n                                                <td colSpan=\"5\" style={{ textAlign: 'right' }}>\n                                                    <b>Grand Total</b>\n                                                </td>\n                                                <td>TK. {commaNumber(data.grandTotal)}.00</td>\n                                            </tr>\n                                            <tr>\n                                                <td className=\"text-capitalize\" colSpan=\"6\">\n                                                    Amount In Words: BDT {converter.toWords(data.grandTotal)} Only\n                                                </td>\n                                            </tr>\n                                        </tbody>\n                                    </table>\n                                    <table className=\"custom-table\">\n                                        <tbody>\n                                            <tr>\n                                                <th style={{ textAlign: 'left', fontSize: '14px', width: '50%' }}>Purchaser</th>\n                                                <th style={{ textAlign: 'left', fontSize: '14px', width: '50%' }}>Point of Deliver</th>\n                                            </tr>\n                                            <tr>\n                                                <td>\n                                                    <p>Eazybest LTD</p>\n                                                    <p>#House 18, #Road 1, #Sector 5, Uttara, Dhaka</p>\n                                                    <p>Key Account Manager: {data.vendor.keyAccountManager}</p>\n                                                </td>\n                                                <td>\n                                                    <p>#House 18, #Road 1, #Sector 5, Uttara, Dhaka</p>\n                                                </td>\n                                            </tr>\n                                        </tbody>\n                                    </table>\n                                    <table className=\"custom-table\">\n                                        <tbody>\n                                            <tr>\n                                                <th style={{ textAlign: 'left', fontSize: '14px', width: '100%' }}>Order Terms and Conditions</th>\n                                            </tr>\n                                            <tr>\n                                                <td>\n                                                    <ol style={{ paddingLeft: '15px' }}>\n                                                        <li style={{ fontSize: '14px' }}>Delivery should be completed within ………….. days from the date of receipt work order.</li>\n                                                        <li style={{ fontSize: '14px' }}>Before final printing/delivery sample should be approved by respective department.</li>\n                                                        <li style={{ fontSize: '14px' }}>Product should be delivered in good condition and according to the specification and sample.</li>\n                                                        <li style={{ fontSize: '14px' }}>Payment will be made ………………………………………………. after successful delivery.</li>\n                                                        <li style={{ fontSize: '14px' }}>Partial delivery is not acceptable</li>\n                                                        <li style={{ fontSize: '14px' }}>VAT & TAX will be deducted from the bill as per govt. rules if applicable</li>\n                                                        <li style={{ fontSize: '14px' }}>Eazybest reserves the right of acceptance and cancellation of the order.</li>\n                                                    </ol>\n                                                </td>\n                                            </tr>\n                                        </tbody>\n                                    </table>\n                                    <div className=\"authorizedSign\">\n                                        <p style={{ marginTop: '120px' }}>.....................................</p>\n                                        <p>Authorized Signature</p>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n\n                        {/* Eazybest copy */}\n                        <div className=\"row page-break\">\n                            <div className=\"col-12 col-padding\">\n                                <div className=\"card border-0\">\n                                    <img src={Images.Logo} width=\"250\" style={{ paddingTop: '50px' }} className=\"m-auto\" alt=\"...\" />\n                                    <h1 className=\"text-center\" id=\"bellowHeading\" style={{ marginBottom: '15px', fontSize: '25px' }} >Purchase Order</h1>\n                                    <p className=\"text-center\" style={{ marginBottom: '20px', fontSize: '14px' }}>(Eazybest Copy)</p>\n\n                                    <div className=\"pl-5 ml-4\">\n                                        <p style={{ marginBottom: 5, fontSize: 14 }}><b>TIN : 623765963510, <span className=\"ml-1\">BIN : 004296225-0101</span></b></p>\n                                    </div>\n                                    <table className=\"custom-table\">\n                                        <tbody>\n                                            <tr>\n                                                <th style={{ textAlign: 'left', fontSize: '14px', width: '50%' }}>Vendor Reference</th>\n                                                <th style={{ textAlign: 'left', fontSize: '14px', width: '50%' }}>Order Reference</th>\n                                            </tr>\n                                            <tr>\n                                                <td>\n                                                    <p>Name: {data.vendor.name}</p>\n                                                    <p>Contact Person: {data.vendor.contactPersonOnePhone}</p>\n                                                    <p>Address: {data.deliveryAddress}</p>\n                                                    <p>Vendor In-charge: Iftekher Ahmed (01324245074)</p>\n                                                </td>\n                                                <td>\n                                                    <p>Purchase Order: EB-{randCode}</p>\n                                                    <p>Issue Date: {formatDateWithAMPM(dateNow.toString())}</p>\n                                                </td>\n                                            </tr>\n                                        </tbody>\n                                    </table>\n                                    <table className=\"custom-table\">\n                                        <thead>\n                                            <tr>\n                                                <th>SL</th>\n                                                <th>Product Photo</th>\n                                                <th>Product Name</th>\n                                                <th className=\"text-center\">Unit</th>\n                                                <th>Price</th>\n                                                <th>Total Price</th>\n                                            </tr>\n                                        </thead>\n\n\n                                        {/* Ordered products */}\n                                        {data.products.length ?\n                                            <tbody>\n                                                {data.products && data.products.map((product, i) =>\n                                                    <tr key={i}>\n                                                        <td className=\"text-center\" style={{ width: 20 }}><p>{1}</p></td>\n                                                        <td className=\"text-center\" style={{ width: 140 }}>\n                                                            <img src={product.thumbnail} className=\"img-fluid\" style={{ width: 60, height: 'auto' }} alt=\"...\" />\n                                                        </td>\n                                                        <td>\n                                                            <p>{product.name}</p>\n                                                            <VariantsComponent items={product.variants} />\n                                                        </td>\n                                                        <td className=\"text-center\"><p>{product.quantity}</p></td>\n                                                        <td><p>{product.purchasePrice} TK</p></td>\n                                                        <td><p>{parseInt(product.purchasePrice) * parseInt(product.quantity)} TK</p></td>\n                                                    </tr>\n                                                )}\n                                            </tbody>\n                                            : null}\n\n                                        <tbody>\n                                            <tr>\n                                                <td colSpan=\"5\" style={{ textAlign: 'right' }}>\n                                                    <b>Grand Total</b>\n                                                </td>\n                                                <td>TK. {commaNumber(data.grandTotal)}.00</td>\n                                            </tr>\n                                            <tr>\n                                                <td className=\"text-capitalize\" colSpan=\"6\">\n                                                    Amount In Words: BDT {converter.toWords(data.grandTotal)} Only\n                                                </td>\n                                            </tr>\n                                        </tbody>\n                                    </table>\n                                    <table className=\"custom-table\">\n                                        <tbody>\n                                            <tr>\n                                                <th style={{ textAlign: 'left', fontSize: '14px', width: '50%' }}>Purchaser</th>\n                                                <th style={{ textAlign: 'left', fontSize: '14px', width: '50%' }}>Point of Deliver</th>\n                                            </tr>\n                                            <tr>\n                                                <td>\n                                                    <p>Eazybest LTD</p>\n                                                    <p>#House 18, #Road 1, #Sector 5, Uttara, Dhaka</p>\n                                                </td>\n                                                <td>\n                                                    <p>#House 18, #Road 1, #Sector 5, Uttara, Dhaka</p>\n                                                </td>\n                                            </tr>\n                                        </tbody>\n                                    </table>\n                                    <table className=\"custom-table\">\n                                        <tbody>\n                                            <tr>\n                                                <th style={{ textAlign: 'left', fontSize: '14px', width: '100%' }}>Order Terms and Conditions</th>\n                                            </tr>\n                                            <tr>\n                                                <td>\n                                                    <ol style={{ paddingLeft: '15px' }}>\n                                                        <li style={{ fontSize: '14px' }}>Delivery should be completed within ………….. days from the date of receipt work order.</li>\n                                                        <li style={{ fontSize: '14px' }}>Before final printing/delivery sample should be approved by respective department.</li>\n                                                        <li style={{ fontSize: '14px' }}>Product should be delivered in good condition and according to the specification and sample.</li>\n                                                        <li style={{ fontSize: '14px' }}>Payment will be made ………………………………………………. after successful delivery.</li>\n                                                        <li style={{ fontSize: '14px' }}>Partial delivery is not acceptable</li>\n                                                        <li style={{ fontSize: '14px' }}>VAT & TAX will be deducted from the bill as per govt. rules if applicable</li>\n                                                        <li style={{ fontSize: '14px' }}>Eazybest reserves the right of acceptance and cancellation of the order.</li>\n                                                    </ol>\n                                                </td>\n                                            </tr>\n                                        </tbody>\n                                    </table>\n                                    <div className=\"authorizedSign\">\n                                        <p style={{ marginTop: '120px' }}>.....................................</p>\n                                        <p>Authorized Signature</p>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n\n\n                </div>\n                : null}\n        </div>\n    );\n}\n\nexport default Show;\n\nconst VariantsComponent = ({ items }) => {\n    return (\n        <div className=\"materials-container mt-2\">\n            {items && items.map((item, i) =>\n                <div className=\"d-flex\" key={i}>\n                    <div className=\"flex-fill\" style={{ width: 100 }}><p className=\"text-capitalize text-info mb-0\"><span className=\"text-dark font-weight-bolder\">{item.title}:</span> {item.value}</p></div>\n                    <div className=\"flex-fill\" style={{ width: 100 }}><p className=\"mb-0\"><span className=\"font-weight-bolder\">SKU:</span> {item.sku}</p></div>\n                </div>\n            )}\n        </div>\n    )\n}","D:\\previous\\src\\pages\\reports\\vedorPo\\Index.js",[],"D:\\previous\\src\\pages\\reports\\salesReport\\Index.js",[],"D:\\previous\\src\\pages\\reports\\buyerRegistration\\Index.js",[],"D:\\previous\\src\\pages\\ratingsReviews\\Index.js",[],"D:\\previous\\src\\pages\\subscriber\\Index.js",[],"D:\\previous\\src\\components\\salesFilter\\Index.js",[],{"ruleId":"949","replacedBy":"950"},{"ruleId":"951","replacedBy":"952"},{"ruleId":"953","severity":1,"message":"954","line":12,"column":8,"nodeType":"955","messageId":"956","endLine":12,"endColumn":20},{"ruleId":"953","severity":1,"message":"957","line":2,"column":10,"nodeType":"955","messageId":"956","endLine":2,"endColumn":25},{"ruleId":"953","severity":1,"message":"958","line":3,"column":8,"nodeType":"955","messageId":"956","endLine":3,"endColumn":17},{"ruleId":"953","severity":1,"message":"959","line":4,"column":3,"nodeType":"955","messageId":"956","endLine":4,"endColumn":13},{"ruleId":"953","severity":1,"message":"960","line":7,"column":3,"nodeType":"955","messageId":"956","endLine":7,"endColumn":7},{"ruleId":"953","severity":1,"message":"961","line":8,"column":3,"nodeType":"955","messageId":"956","endLine":8,"endColumn":8},{"ruleId":"953","severity":1,"message":"962","line":10,"column":3,"nodeType":"955","messageId":"956","endLine":10,"endColumn":9},{"ruleId":"953","severity":1,"message":"963","line":11,"column":3,"nodeType":"955","messageId":"956","endLine":11,"endColumn":6},{"ruleId":"953","severity":1,"message":"964","line":12,"column":3,"nodeType":"955","messageId":"956","endLine":12,"endColumn":15},{"ruleId":"953","severity":1,"message":"965","line":13,"column":3,"nodeType":"955","messageId":"956","endLine":13,"endColumn":8},{"ruleId":"953","severity":1,"message":"966","line":14,"column":3,"nodeType":"955","messageId":"956","endLine":14,"endColumn":11},{"ruleId":"953","severity":1,"message":"967","line":15,"column":3,"nodeType":"955","messageId":"956","endLine":15,"endColumn":11},{"ruleId":"953","severity":1,"message":"968","line":16,"column":3,"nodeType":"955","messageId":"956","endLine":16,"endColumn":11},{"ruleId":"953","severity":1,"message":"969","line":17,"column":3,"nodeType":"955","messageId":"956","endLine":17,"endColumn":11},{"ruleId":"953","severity":1,"message":"970","line":18,"column":3,"nodeType":"955","messageId":"956","endLine":18,"endColumn":12},{"ruleId":"953","severity":1,"message":"971","line":19,"column":3,"nodeType":"955","messageId":"956","endLine":19,"endColumn":12},{"ruleId":"953","severity":1,"message":"972","line":20,"column":3,"nodeType":"955","messageId":"956","endLine":20,"endColumn":8},{"ruleId":"953","severity":1,"message":"973","line":21,"column":3,"nodeType":"955","messageId":"956","endLine":21,"endColumn":12},{"ruleId":"953","severity":1,"message":"974","line":22,"column":3,"nodeType":"955","messageId":"956","endLine":22,"endColumn":14},{"ruleId":"953","severity":1,"message":"975","line":24,"column":10,"nodeType":"955","messageId":"956","endLine":24,"endColumn":19},{"ruleId":"953","severity":1,"message":"976","line":24,"column":21,"nodeType":"955","messageId":"956","endLine":24,"endColumn":34},{"ruleId":"953","severity":1,"message":"977","line":30,"column":8,"nodeType":"955","messageId":"956","endLine":30,"endColumn":21},{"ruleId":"953","severity":1,"message":"978","line":31,"column":8,"nodeType":"955","messageId":"956","endLine":31,"endColumn":22},{"ruleId":"953","severity":1,"message":"979","line":32,"column":8,"nodeType":"955","messageId":"956","endLine":32,"endColumn":20},{"ruleId":"953","severity":1,"message":"980","line":35,"column":8,"nodeType":"955","messageId":"956","endLine":35,"endColumn":18},{"ruleId":"953","severity":1,"message":"981","line":36,"column":8,"nodeType":"955","messageId":"956","endLine":36,"endColumn":19},{"ruleId":"953","severity":1,"message":"982","line":37,"column":8,"nodeType":"955","messageId":"956","endLine":37,"endColumn":17},{"ruleId":"953","severity":1,"message":"983","line":40,"column":8,"nodeType":"955","messageId":"956","endLine":40,"endColumn":19},{"ruleId":"953","severity":1,"message":"984","line":41,"column":8,"nodeType":"955","messageId":"956","endLine":41,"endColumn":20},{"ruleId":"953","severity":1,"message":"985","line":42,"column":8,"nodeType":"955","messageId":"956","endLine":42,"endColumn":18},{"ruleId":"953","severity":1,"message":"986","line":45,"column":8,"nodeType":"955","messageId":"956","endLine":45,"endColumn":19},{"ruleId":"953","severity":1,"message":"987","line":46,"column":8,"nodeType":"955","messageId":"956","endLine":46,"endColumn":20},{"ruleId":"953","severity":1,"message":"988","line":47,"column":8,"nodeType":"955","messageId":"956","endLine":47,"endColumn":18},{"ruleId":"953","severity":1,"message":"989","line":48,"column":8,"nodeType":"955","messageId":"956","endLine":48,"endColumn":18},{"ruleId":"953","severity":1,"message":"990","line":53,"column":8,"nodeType":"955","messageId":"956","endLine":53,"endColumn":20},{"ruleId":"953","severity":1,"message":"991","line":57,"column":8,"nodeType":"955","messageId":"956","endLine":57,"endColumn":23},{"ruleId":"953","severity":1,"message":"992","line":60,"column":8,"nodeType":"955","messageId":"956","endLine":60,"endColumn":23},{"ruleId":"953","severity":1,"message":"993","line":65,"column":8,"nodeType":"955","messageId":"956","endLine":65,"endColumn":24},{"ruleId":"953","severity":1,"message":"994","line":66,"column":8,"nodeType":"955","messageId":"956","endLine":66,"endColumn":25},{"ruleId":"953","severity":1,"message":"995","line":69,"column":8,"nodeType":"955","messageId":"956","endLine":69,"endColumn":21},{"ruleId":"953","severity":1,"message":"996","line":70,"column":8,"nodeType":"955","messageId":"956","endLine":70,"endColumn":22},{"ruleId":"953","severity":1,"message":"997","line":71,"column":8,"nodeType":"955","messageId":"956","endLine":71,"endColumn":20},{"ruleId":"953","severity":1,"message":"998","line":72,"column":8,"nodeType":"955","messageId":"956","endLine":72,"endColumn":20},{"ruleId":"953","severity":1,"message":"999","line":75,"column":8,"nodeType":"955","messageId":"956","endLine":75,"endColumn":19},{"ruleId":"953","severity":1,"message":"1000","line":76,"column":8,"nodeType":"955","messageId":"956","endLine":76,"endColumn":20},{"ruleId":"953","severity":1,"message":"1001","line":77,"column":8,"nodeType":"955","messageId":"956","endLine":77,"endColumn":18},{"ruleId":"953","severity":1,"message":"1002","line":78,"column":8,"nodeType":"955","messageId":"956","endLine":78,"endColumn":18},{"ruleId":"953","severity":1,"message":"1003","line":81,"column":8,"nodeType":"955","messageId":"956","endLine":81,"endColumn":19},{"ruleId":"953","severity":1,"message":"1004","line":82,"column":8,"nodeType":"955","messageId":"956","endLine":82,"endColumn":17},{"ruleId":"953","severity":1,"message":"1005","line":83,"column":8,"nodeType":"955","messageId":"956","endLine":83,"endColumn":17},{"ruleId":"953","severity":1,"message":"1006","line":84,"column":8,"nodeType":"955","messageId":"956","endLine":84,"endColumn":19},{"ruleId":"953","severity":1,"message":"1007","line":85,"column":8,"nodeType":"955","messageId":"956","endLine":85,"endColumn":21},{"ruleId":"953","severity":1,"message":"1008","line":86,"column":8,"nodeType":"955","messageId":"956","endLine":86,"endColumn":20},{"ruleId":"953","severity":1,"message":"1009","line":89,"column":8,"nodeType":"955","messageId":"956","endLine":89,"endColumn":21},{"ruleId":"953","severity":1,"message":"1010","line":90,"column":8,"nodeType":"955","messageId":"956","endLine":90,"endColumn":22},{"ruleId":"953","severity":1,"message":"1011","line":91,"column":8,"nodeType":"955","messageId":"956","endLine":91,"endColumn":20},{"ruleId":"953","severity":1,"message":"1012","line":92,"column":8,"nodeType":"955","messageId":"956","endLine":92,"endColumn":20},{"ruleId":"953","severity":1,"message":"1013","line":93,"column":8,"nodeType":"955","messageId":"956","endLine":93,"endColumn":25},{"ruleId":"953","severity":1,"message":"1014","line":94,"column":8,"nodeType":"955","messageId":"956","endLine":94,"endColumn":26},{"ruleId":"953","severity":1,"message":"1015","line":95,"column":8,"nodeType":"955","messageId":"956","endLine":95,"endColumn":24},{"ruleId":"953","severity":1,"message":"1016","line":96,"column":8,"nodeType":"955","messageId":"956","endLine":96,"endColumn":29},{"ruleId":"953","severity":1,"message":"1017","line":97,"column":8,"nodeType":"955","messageId":"956","endLine":97,"endColumn":30},{"ruleId":"953","severity":1,"message":"1018","line":98,"column":8,"nodeType":"955","messageId":"956","endLine":98,"endColumn":28},{"ruleId":"953","severity":1,"message":"1019","line":99,"column":8,"nodeType":"955","messageId":"956","endLine":99,"endColumn":29},{"ruleId":"953","severity":1,"message":"1020","line":100,"column":8,"nodeType":"955","messageId":"956","endLine":100,"endColumn":30},{"ruleId":"953","severity":1,"message":"1021","line":101,"column":8,"nodeType":"955","messageId":"956","endLine":101,"endColumn":28},{"ruleId":"953","severity":1,"message":"1022","line":115,"column":8,"nodeType":"955","messageId":"956","endLine":115,"endColumn":19},{"ruleId":"953","severity":1,"message":"1023","line":116,"column":8,"nodeType":"955","messageId":"956","endLine":116,"endColumn":18},{"ruleId":"953","severity":1,"message":"1024","line":119,"column":8,"nodeType":"955","messageId":"956","endLine":119,"endColumn":17},{"ruleId":"953","severity":1,"message":"1025","line":120,"column":8,"nodeType":"955","messageId":"956","endLine":120,"endColumn":17},{"ruleId":"953","severity":1,"message":"1026","line":121,"column":8,"nodeType":"955","messageId":"956","endLine":121,"endColumn":19},{"ruleId":"953","severity":1,"message":"1027","line":124,"column":8,"nodeType":"955","messageId":"956","endLine":124,"endColumn":21},{"ruleId":"953","severity":1,"message":"1028","line":125,"column":8,"nodeType":"955","messageId":"956","endLine":125,"endColumn":20},{"ruleId":"953","severity":1,"message":"1029","line":126,"column":8,"nodeType":"955","messageId":"956","endLine":126,"endColumn":22},{"ruleId":"953","severity":1,"message":"1030","line":129,"column":8,"nodeType":"955","messageId":"956","endLine":129,"endColumn":23},{"ruleId":"953","severity":1,"message":"1031","line":132,"column":8,"nodeType":"955","messageId":"956","endLine":132,"endColumn":26},{"ruleId":"953","severity":1,"message":"1032","line":135,"column":8,"nodeType":"955","messageId":"956","endLine":135,"endColumn":36},{"ruleId":"953","severity":1,"message":"1033","line":136,"column":8,"nodeType":"955","messageId":"956","endLine":136,"endColumn":24},{"ruleId":"953","severity":1,"message":"1034","line":137,"column":8,"nodeType":"955","messageId":"956","endLine":137,"endColumn":21},{"ruleId":"953","severity":1,"message":"1035","line":138,"column":8,"nodeType":"955","messageId":"956","endLine":138,"endColumn":20},{"ruleId":"953","severity":1,"message":"1036","line":139,"column":8,"nodeType":"955","messageId":"956","endLine":139,"endColumn":21},{"ruleId":"953","severity":1,"message":"1037","line":140,"column":8,"nodeType":"955","messageId":"956","endLine":140,"endColumn":26},{"ruleId":"953","severity":1,"message":"1038","line":141,"column":8,"nodeType":"955","messageId":"956","endLine":141,"endColumn":25},{"ruleId":"953","severity":1,"message":"1039","line":142,"column":8,"nodeType":"955","messageId":"956","endLine":142,"endColumn":24},{"ruleId":"953","severity":1,"message":"1040","line":145,"column":8,"nodeType":"955","messageId":"956","endLine":145,"endColumn":31},{"ruleId":"953","severity":1,"message":"1041","line":146,"column":8,"nodeType":"955","messageId":"956","endLine":146,"endColumn":32},{"ruleId":"953","severity":1,"message":"1042","line":147,"column":8,"nodeType":"955","messageId":"956","endLine":147,"endColumn":30},{"ruleId":"953","severity":1,"message":"1043","line":148,"column":8,"nodeType":"955","messageId":"956","endLine":148,"endColumn":27},{"ruleId":"953","severity":1,"message":"1044","line":149,"column":8,"nodeType":"955","messageId":"956","endLine":149,"endColumn":28},{"ruleId":"953","severity":1,"message":"1045","line":150,"column":8,"nodeType":"955","messageId":"956","endLine":150,"endColumn":26},{"ruleId":"953","severity":1,"message":"1046","line":151,"column":8,"nodeType":"955","messageId":"956","endLine":151,"endColumn":26},{"ruleId":"953","severity":1,"message":"1047","line":154,"column":8,"nodeType":"955","messageId":"956","endLine":154,"endColumn":17},{"ruleId":"953","severity":1,"message":"1048","line":155,"column":8,"nodeType":"955","messageId":"956","endLine":155,"endColumn":18},{"ruleId":"953","severity":1,"message":"1049","line":156,"column":8,"nodeType":"955","messageId":"956","endLine":156,"endColumn":16},{"ruleId":"953","severity":1,"message":"1050","line":159,"column":8,"nodeType":"955","messageId":"956","endLine":159,"endColumn":20},{"ruleId":"953","severity":1,"message":"1051","line":160,"column":10,"nodeType":"955","messageId":"956","endLine":160,"endColumn":19},{"ruleId":"953","severity":1,"message":"1052","line":162,"column":10,"nodeType":"955","messageId":"956","endLine":162,"endColumn":14},{"ruleId":"953","severity":1,"message":"1053","line":163,"column":10,"nodeType":"955","messageId":"956","endLine":163,"endColumn":20},{"ruleId":"953","severity":1,"message":"1054","line":164,"column":10,"nodeType":"955","messageId":"956","endLine":164,"endColumn":22},{"ruleId":"953","severity":1,"message":"1055","line":165,"column":10,"nodeType":"955","messageId":"956","endLine":165,"endColumn":15},{"ruleId":"953","severity":1,"message":"1056","line":166,"column":10,"nodeType":"955","messageId":"956","endLine":166,"endColumn":24},{"ruleId":"1057","severity":1,"message":"1058","line":40,"column":8,"nodeType":"1059","endLine":40,"endColumn":20,"suggestions":"1060"},{"ruleId":"953","severity":1,"message":"1061","line":16,"column":12,"nodeType":"955","messageId":"956","endLine":16,"endColumn":21},{"ruleId":"1057","severity":1,"message":"1062","line":56,"column":8,"nodeType":"1059","endLine":71,"endColumn":6,"suggestions":"1063"},{"ruleId":"1057","severity":1,"message":"1062","line":49,"column":8,"nodeType":"1059","endLine":64,"endColumn":6,"suggestions":"1064"},{"ruleId":"953","severity":1,"message":"1065","line":5,"column":10,"nodeType":"955","messageId":"956","endLine":5,"endColumn":14},{"ruleId":"953","severity":1,"message":"1066","line":10,"column":8,"nodeType":"955","messageId":"956","endLine":10,"endColumn":23},{"ruleId":"953","severity":1,"message":"1067","line":15,"column":8,"nodeType":"955","messageId":"956","endLine":15,"endColumn":29},{"ruleId":"953","severity":1,"message":"1068","line":16,"column":8,"nodeType":"955","messageId":"956","endLine":16,"endColumn":31},{"ruleId":"953","severity":1,"message":"1069","line":18,"column":8,"nodeType":"955","messageId":"956","endLine":18,"endColumn":20},{"ruleId":"953","severity":1,"message":"1070","line":19,"column":8,"nodeType":"955","messageId":"956","endLine":19,"endColumn":16},{"ruleId":"953","severity":1,"message":"1071","line":20,"column":8,"nodeType":"955","messageId":"956","endLine":20,"endColumn":11},{"ruleId":"953","severity":1,"message":"1072","line":28,"column":10,"nodeType":"955","messageId":"956","endLine":28,"endColumn":17},{"ruleId":"953","severity":1,"message":"1073","line":29,"column":10,"nodeType":"955","messageId":"956","endLine":29,"endColumn":16},{"ruleId":"953","severity":1,"message":"1074","line":108,"column":9,"nodeType":"955","messageId":"956","endLine":108,"endColumn":21},{"ruleId":"953","severity":1,"message":"1075","line":112,"column":9,"nodeType":"955","messageId":"956","endLine":112,"endColumn":20},{"ruleId":"953","severity":1,"message":"1076","line":158,"column":9,"nodeType":"955","messageId":"956","endLine":158,"endColumn":31},{"ruleId":"953","severity":1,"message":"1077","line":168,"column":9,"nodeType":"955","messageId":"956","endLine":168,"endColumn":33},{"ruleId":"953","severity":1,"message":"1078","line":178,"column":9,"nodeType":"955","messageId":"956","endLine":178,"endColumn":31},{"ruleId":"953","severity":1,"message":"1079","line":188,"column":9,"nodeType":"955","messageId":"956","endLine":188,"endColumn":19},{"ruleId":"953","severity":1,"message":"1080","line":208,"column":9,"nodeType":"955","messageId":"956","endLine":208,"endColumn":33},{"ruleId":"953","severity":1,"message":"1081","line":235,"column":9,"nodeType":"955","messageId":"956","endLine":235,"endColumn":21},{"ruleId":"953","severity":1,"message":"1082","line":238,"column":9,"nodeType":"955","messageId":"956","endLine":238,"endColumn":22},{"ruleId":"953","severity":1,"message":"1083","line":244,"column":9,"nodeType":"955","messageId":"956","endLine":244,"endColumn":32},{"ruleId":"953","severity":1,"message":"1084","line":266,"column":9,"nodeType":"955","messageId":"956","endLine":266,"endColumn":23},{"ruleId":"953","severity":1,"message":"1085","line":288,"column":9,"nodeType":"955","messageId":"956","endLine":288,"endColumn":18},{"ruleId":"953","severity":1,"message":"1086","line":11,"column":10,"nodeType":"955","messageId":"956","endLine":11,"endColumn":28},{"ruleId":"953","severity":1,"message":"1087","line":16,"column":8,"nodeType":"955","messageId":"956","endLine":16,"endColumn":32},{"ruleId":"953","severity":1,"message":"1069","line":18,"column":8,"nodeType":"955","messageId":"956","endLine":18,"endColumn":20},{"ruleId":"953","severity":1,"message":"1070","line":19,"column":8,"nodeType":"955","messageId":"956","endLine":19,"endColumn":16},{"ruleId":"953","severity":1,"message":"1071","line":20,"column":8,"nodeType":"955","messageId":"956","endLine":20,"endColumn":11},{"ruleId":"953","severity":1,"message":"1088","line":146,"column":11,"nodeType":"955","messageId":"956","endLine":146,"endColumn":22},{"ruleId":"953","severity":1,"message":"1083","line":152,"column":11,"nodeType":"955","messageId":"956","endLine":152,"endColumn":34},{"ruleId":"953","severity":1,"message":"1084","line":163,"column":11,"nodeType":"955","messageId":"956","endLine":163,"endColumn":25},{"ruleId":"953","severity":1,"message":"1085","line":177,"column":11,"nodeType":"955","messageId":"956","endLine":177,"endColumn":20},{"ruleId":"953","severity":1,"message":"1089","line":183,"column":11,"nodeType":"955","messageId":"956","endLine":183,"endColumn":34},{"ruleId":"1057","severity":1,"message":"1090","line":40,"column":8,"nodeType":"1059","endLine":40,"endColumn":15,"suggestions":"1091"},{"ruleId":"1057","severity":1,"message":"1062","line":65,"column":8,"nodeType":"1059","endLine":72,"endColumn":6,"suggestions":"1092"},{"ruleId":"953","severity":1,"message":"1093","line":6,"column":10,"nodeType":"955","messageId":"956","endLine":6,"endColumn":21},{"ruleId":"953","severity":1,"message":"1094","line":11,"column":7,"nodeType":"955","messageId":"956","endLine":11,"endColumn":18},{"ruleId":"953","severity":1,"message":"1095","line":18,"column":12,"nodeType":"955","messageId":"956","endLine":18,"endColumn":17},{"ruleId":"953","severity":1,"message":"1096","line":18,"column":19,"nodeType":"955","messageId":"956","endLine":18,"endColumn":27},{"ruleId":"953","severity":1,"message":"1097","line":1,"column":51,"nodeType":"955","messageId":"956","endLine":1,"endColumn":57},{"ruleId":"1057","severity":1,"message":"1062","line":57,"column":8,"nodeType":"1059","endLine":71,"endColumn":6,"suggestions":"1098"},{"ruleId":"953","severity":1,"message":"1099","line":3,"column":10,"nodeType":"955","messageId":"956","endLine":3,"endColumn":14},{"ruleId":"953","severity":1,"message":"1100","line":5,"column":25,"nodeType":"955","messageId":"956","endLine":5,"endColumn":29},{"ruleId":"1101","severity":1,"message":"1102","line":639,"column":1,"nodeType":"1103","messageId":"1104","endLine":938,"endColumn":11},{"ruleId":"953","severity":1,"message":"1105","line":7,"column":10,"nodeType":"955","messageId":"956","endLine":7,"endColumn":19},{"ruleId":"953","severity":1,"message":"1106","line":28,"column":11,"nodeType":"955","messageId":"956","endLine":28,"endColumn":24},{"ruleId":"953","severity":1,"message":"1107","line":30,"column":13,"nodeType":"955","messageId":"956","endLine":30,"endColumn":21},{"ruleId":"953","severity":1,"message":"1108","line":32,"column":21,"nodeType":"955","messageId":"956","endLine":32,"endColumn":31},{"ruleId":"953","severity":1,"message":"1109","line":53,"column":11,"nodeType":"955","messageId":"956","endLine":53,"endColumn":22},{"ruleId":"1057","severity":1,"message":"1110","line":119,"column":8,"nodeType":"1059","endLine":119,"endColumn":10,"suggestions":"1111"},{"ruleId":"953","severity":1,"message":"1112","line":29,"column":11,"nodeType":"955","messageId":"956","endLine":29,"endColumn":20},{"ruleId":"953","severity":1,"message":"1113","line":18,"column":12,"nodeType":"955","messageId":"956","endLine":18,"endColumn":17},{"ruleId":"1057","severity":1,"message":"1062","line":65,"column":8,"nodeType":"1059","endLine":73,"endColumn":6,"suggestions":"1114"},{"ruleId":"1057","severity":1,"message":"1115","line":11,"column":9,"nodeType":"1116","endLine":11,"endColumn":68},{"ruleId":"1057","severity":1,"message":"1062","line":45,"column":8,"nodeType":"1059","endLine":45,"endColumn":27,"suggestions":"1117"},"no-native-reassign",["1118"],"no-negated-in-lhs",["1119"],"no-unused-vars","'PrivateRoute' is defined but never used.","Identifier","unusedVar","'checkIfLoggedIn' is defined but never used.","'jwtDecode' is defined but never used.","'creditCard' is defined but never used.","'gift' is defined but never used.","'image' is defined but never used.","'eyeOff' is defined but never used.","'rss' is defined but never used.","'shoppingCart' is defined but never used.","'users' is defined but never used.","'userPlus' is defined but never used.","'activity' is defined but never used.","'umbrella' is defined but never used.","'bookOpen' is defined but never used.","'rotateCcw' is defined but never used.","'barChart2' is defined but never used.","'truck' is defined but never used.","'shieldOff' is defined but never used.","'navigation2' is defined but never used.","'mapMarker' is defined but never used.","'locationArrow' is defined but never used.","'AddsenseIndex' is defined but never used.","'AddsenseCreate' is defined but never used.","'AddsenseEdit' is defined but never used.","'BrandIndex' is defined but never used.","'BrandCreate' is defined but never used.","'BrandEdit' is defined but never used.","'BannerIndex' is defined but never used.","'BannerCreate' is defined but never used.","'BannerEdit' is defined but never used.","'VendorIndex' is defined but never used.","'VendorCreate' is defined but never used.","'VendorEdit' is defined but never used.","'VendorShow' is defined but never used.","'CategoryEdit' is defined but never used.","'PendingProducts' is defined but never used.","'ProductEditSlug' is defined but never used.","'DeactivatedIndex' is defined but never used.","'DeactivatedCreate' is defined but never used.","'CampaignIndex' is defined but never used.","'CampaignCreate' is defined but never used.","'CampaignShow' is defined but never used.","'CampaignEdit' is defined but never used.","'CouponIndex' is defined but never used.","'CouponCreate' is defined but never used.","'CouponShow' is defined but never used.","'CouponEdit' is defined but never used.","'OrdersIndex' is defined but never used.","'OrderShow' is defined but never used.","'OrderEdit' is defined but never used.","'OrderCreate' is defined but never used.","'OrderPurchase' is defined but never used.","'OrderInvoice' is defined but never used.","'ShippingIndex' is defined but never used.","'ShippingCreate' is defined but never used.","'ShippingEdit' is defined but never used.","'ShippingShow' is defined but never used.","'ShippingAreaIndex' is defined but never used.","'ShippingAreaCreate' is defined but never used.","'ShippingAreaEdit' is defined but never used.","'ShippingDistrictIndex' is defined but never used.","'ShippingDistrictCreate' is defined but never used.","'ShippingDistrictEdit' is defined but never used.","'ShippingDivisionIndex' is defined but never used.","'ShippingDivisionCreate' is defined but never used.","'ShippingDivisionEdit' is defined but never used.","'RefundIndex' is defined but never used.","'RefundShow' is defined but never used.","'AdminList' is defined but never used.","'AdminEdit' is defined but never used.","'AdminCreate' is defined but never used.","'CustomerIndex' is defined but never used.","'CustomerEdit' is defined but never used.","'CustomerCreate' is defined but never used.","'SubscriberIndex' is defined but never used.","'RatingsReviewIndex' is defined but never used.","'BuyerRegistrationReportIndex' is defined but never used.","'SalesReportIndex' is defined but never used.","'VendorPoIndex' is defined but never used.","'VendorPoShow' is defined but never used.","'BestSaleIndex' is defined but never used.","'BuyerPurchaseIndex' is defined but never used.","'BestCategoryIndex' is defined but never used.","'StoreCreditIndex' is defined but never used.","'UniversityCategoryIndex' is defined but never used.","'UniversityCategoryCreate' is defined but never used.","'UniversityCategoryEdit' is defined but never used.","'UniversityPostIndex' is defined but never used.","'UniversityPostCreate' is defined but never used.","'UniversityPostEdit' is defined but never used.","'UniversityPostShow' is defined but never used.","'RoleIndex' is defined but never used.","'RoleCreate' is defined but never used.","'RoleEdit' is defined but never used.","'ProfileIndex' is defined but never used.","'userCheck' is defined but never used.","'star' is defined but never used.","'dollarSign' is defined but never used.","'arrowUpRight' is defined but never used.","'clock' is defined but never used.","'cloudLightning' is defined but never used.","react-hooks/exhaustive-deps","React Hook useCallback has a missing dependency: 'image'. Either include it or remove the dependency array. You can also do a functional update 'setImage(i => ...)' if you only need 'image' in the 'setImage' call.","ArrayExpression",["1120"],"'isLoading' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'queryParams'. Either include it or remove the dependency array.",["1121"],["1122"],"'Form' is defined but never used.","'CreatableSelect' is defined but never used.","'ProductMaterialInputs' is defined but never used.","'ProductAdditionalInputs' is defined but never used.","'ReturnPolicy' is defined but never used.","'Warranty' is defined but never used.","'Emi' is defined but never used.","'vendors' is assigned a value but never used.","'brands' is assigned a value but never used.","'handleVendor' is assigned a value but never used.","'handleBrand' is assigned a value but never used.","'handleTrendingCheckBox' is assigned a value but never used.","'handleNewArrivalCheckBox' is assigned a value but never used.","'handleBestSaleCheckBox' is assigned a value but never used.","'handleTags' is assigned a value but never used.","'additionalImageHandeller' is assigned a value but never used.","'getMaterials' is assigned a value but never used.","'getAdditional' is assigned a value but never used.","'handleReturnReplacement' is assigned a value but never used.","'handleWarranty' is assigned a value but never used.","'handleEMI' is assigned a value but never used.","'SingleFileUploader' is defined but never used.","'ProductMaterialEditInput' is defined but never used.","'getMaterial' is assigned a value but never used.","'uploadDescriptionImages' is assigned a value but never used.","React Hook useCallback has an unnecessary dependency: 'limit'. Either exclude it or remove the dependency array.",["1123"],["1124"],"'dateFormate' is defined but never used.","'BASE_URL_SM' is assigned a value but never used.","'items' is assigned a value but never used.","'setItems' is assigned a value but never used.","'useRef' is defined but never used.",["1125"],"'Link' is defined but never used.","'info' is defined but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'districts' is defined but never used.","'selectedField' is assigned a value but never used.","'register' is assigned a value but never used.","'setLoading' is assigned a value but never used.","'TotalAmount' is assigned a value but never used.","React Hook useCallback has a missing dependency: 'header'. Either include it or remove the dependency array.",["1126"],"'clientURL' is assigned a value but never used.","'limit' is assigned a value but never used.",["1127"],"The 'districtData' conditional could make the dependencies of useEffect Hook (at line 44) change on every render. To fix this, wrap the initialization of 'districtData' in its own useMemo() Hook.","VariableDeclarator",["1128"],"no-global-assign","no-unsafe-negation",{"desc":"1129","fix":"1130"},{"desc":"1131","fix":"1132"},{"desc":"1131","fix":"1133"},{"desc":"1134","fix":"1135"},{"desc":"1136","fix":"1137"},{"desc":"1138","fix":"1139"},{"desc":"1140","fix":"1141"},{"desc":"1142","fix":"1143"},{"desc":"1144","fix":"1145"},"Update the dependencies array to be: [id, header, image]",{"range":"1146","text":"1147"},"Update the dependencies array to be: [header, queryParams.limit, queryParams.page, queryParams.mainCategory, queryParams.subCategory, queryParams.leafCategory, queryParams.brand, queryParams.vendor, queryParams.status, queryParams.uploader, queryParams.auditor, queryParams.from, queryParams.to, fetchData, queryParams]",{"range":"1148","text":"1149"},{"range":"1150","text":"1149"},"Update the dependencies array to be: []",{"range":"1151","text":"1152"},"Update the dependencies array to be: [queryParams.limit, queryParams.page, queryParams.assign_to, queryParams.start_from_date, queryParams.end_to_date, fetchData, queryParams]",{"range":"1153","text":"1154"},"Update the dependencies array to be: [header, queryParams.limit, queryParams.page, queryParams.user, queryParams.deliveryAddress, queryParams.shippingArea, queryParams.paymentMethod, queryParams.paymentStatus, queryParams.status, queryParams.followUp, queryParams.from, queryParams.to, fetchData, queryParams]",{"range":"1155","text":"1156"},"Update the dependencies array to be: [header]",{"range":"1157","text":"1158"},"Update the dependencies array to be: [queryParams.limit, queryParams.page, queryParams.assign_to, queryParams.discount_type, queryParams.start_from, queryParams.end_to, fetchData, queryParams]",{"range":"1159","text":"1160"},"Update the dependencies array to be: [header, fetchData, queryParams]",{"range":"1161","text":"1162"},[1656,1668],"[id, header, image]",[2154,2541],"[header, queryParams.limit, queryParams.page, queryParams.mainCategory, queryParams.subCategory, queryParams.leafCategory, queryParams.brand, queryParams.vendor, queryParams.status, queryParams.uploader, queryParams.auditor, queryParams.from, queryParams.to, fetchData, queryParams]",[1813,2200],[1681,1688],"[]",[2461,2640],"[queryParams.limit, queryParams.page, queryParams.assign_to, queryParams.start_from_date, queryParams.end_to_date, fetchData, queryParams]",[2249,2618],"[header, queryParams.limit, queryParams.page, queryParams.user, queryParams.deliveryAddress, queryParams.shippingArea, queryParams.paymentMethod, queryParams.paymentStatus, queryParams.status, queryParams.followUp, queryParams.from, queryParams.to, fetchData, queryParams]",[4451,4453],"[header]",[2397,2601],"[queryParams.limit, queryParams.page, queryParams.assign_to, queryParams.discount_type, queryParams.start_from, queryParams.end_to, fetchData, queryParams]",[1574,1593],"[header, fetchData, queryParams]"]